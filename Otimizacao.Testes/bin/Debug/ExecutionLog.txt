2015-09-05 18:11:20.5979|Info|Iniciando os testes
2015-09-05 18:11:21.0883|Info|  Settimeout: id:0, (13) ms
2015-09-05 18:11:21.1073|Info|      Executando timer: id:0, (18:11:21.1063)
2015-09-05 18:11:21.1323|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.1633|Info|  Settimeout: id:1, (13) ms
2015-09-05 18:11:21.1633|Info|      Encerrado timer: id:0, (18:11:21.1643)
2015-09-05 18:11:21.1784|Info|      Executando timer: id:1, (18:11:21.1784)
2015-09-05 18:11:21.1784|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.2774|Info|  Settimeout: id:2, (32) ms
2015-09-05 18:11:21.2774|Info|  Settimeout: id:3, (96) ms
2015-09-05 18:11:21.2774|Info|      Encerrado timer: id:1, (18:11:21.2824)
2015-09-05 18:11:21.3125|Info|      Executando timer: id:2, (18:11:21.3125)
2015-09-05 18:11:21.3125|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.3125|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.3125|Info|      Encerrado timer: id:2, (18:11:21.3155)
2015-09-05 18:11:21.3785|Info|      Executando timer: id:3, (18:11:21.3785)
2015-09-05 18:11:21.3785|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:11:21.3785|Info|  Settimeout: id:4, (13) ms
2015-09-05 18:11:21.3815|Info|      Encerrado timer: id:3, (18:11:21.3815)
2015-09-05 18:11:21.3815|Info|      Executando timer: id:4, (18:11:21.3955)
2015-09-05 18:11:21.3815|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.3985|Info|  Settimeout: id:5, (32) ms
2015-09-05 18:11:21.3985|Info|  Settimeout: id:6, (64) ms
2015-09-05 18:11:21.3985|Info|  Settimeout: id:7, (128) ms
2015-09-05 18:11:21.3985|Info|      Encerrado timer: id:4, (18:11:21.4025)
2015-09-05 18:11:21.4325|Info|      Executando timer: id:5, (18:11:21.4325)
2015-09-05 18:11:21.4325|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.4325|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.4325|Info|      Encerrado timer: id:5, (18:11:21.4355)
2015-09-05 18:11:21.4656|Info|      Executando timer: id:6, (18:11:21.4656)
2015-09-05 18:11:21.4656|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 18:11:21.4656|Info|  Settimeout: id:8, (32) ms
2015-09-05 18:11:21.4656|Info|      Encerrado timer: id:6, (18:11:21.4686)
2015-09-05 18:11:21.5016|Info|      Executando timer: id:8, (18:11:21.5016)
2015-09-05 18:11:21.5016|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.5016|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.5016|Info|      Encerrado timer: id:8, (18:11:21.5036)
2015-09-05 18:11:21.5316|Info|      Executando timer: id:7, (18:11:21.5316)
2015-09-05 18:11:21.5316|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 18:11:21.5316|Info|  Settimeout: id:9, (32) ms
2015-09-05 18:11:21.5316|Info|  Settimeout: id:10, (13) ms
2015-09-05 18:11:21.5316|Info|      Encerrado timer: id:7, (18:11:21.5356)
2015-09-05 18:11:21.5496|Info|      Executando timer: id:10, (18:11:21.5496)
2015-09-05 18:11:21.5496|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.5496|Info|  Settimeout: id:11, (32) ms
2015-09-05 18:11:21.5496|Info|  Settimeout: id:12, (64) ms
2015-09-05 18:11:21.5536|Info|      Encerrado timer: id:10, (18:11:21.5536)
2015-09-05 18:11:21.5536|Info|      Executando timer: id:9, (18:11:21.5676)
2015-09-05 18:11:21.5686|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.5686|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.5686|Info|      Encerrado timer: id:9, (18:11:21.5696)
2015-09-05 18:11:21.5856|Info|      Executando timer: id:11, (18:11:21.5856)
2015-09-05 18:11:21.5856|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.5856|Info|      Encerrado timer: id:11, (18:11:21.5866)
2015-09-05 18:11:21.6187|Info|      Executando timer: id:12, (18:11:21.6187)
2015-09-05 18:11:21.6187|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 18:11:21.6187|Info|  Settimeout: id:13, (32) ms
2015-09-05 18:11:21.6187|Info|  Settimeout: id:14, (13) ms
2015-09-05 18:11:21.6187|Info|      Encerrado timer: id:12, (18:11:21.6227)
2015-09-05 18:11:21.6367|Info|      Executando timer: id:14, (18:11:21.6367)
2015-09-05 18:11:21.6367|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.6367|Info|  Settimeout: id:15, (32) ms
2015-09-05 18:11:21.6367|Info|  Settimeout: id:16, (64) ms
2015-09-05 18:11:21.6367|Info|      Encerrado timer: id:14, (18:11:21.6417)
2015-09-05 18:11:21.6547|Info|      Executando timer: id:13, (18:11:21.6547)
2015-09-05 18:11:21.6547|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.6547|Info|      Encerrado timer: id:13, (18:11:21.6567)
2015-09-05 18:11:21.6737|Info|      Executando timer: id:15, (18:11:21.6737)
2015-09-05 18:11:21.6737|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.6737|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.6737|Info|      Encerrado timer: id:15, (18:11:21.6767)
2015-09-05 18:11:21.7067|Info|      Executando timer: id:16, (18:11:21.7067)
2015-09-05 18:11:21.7067|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:11:21.7107|Info|  Settimeout: id:17, (13) ms
2015-09-05 18:11:21.7107|Info|      Encerrado timer: id:16, (18:11:21.7117)
2015-09-05 18:11:21.7257|Info|      Executando timer: id:17, (18:11:21.7257)
2015-09-05 18:11:21.7257|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.7257|Info|  Settimeout: id:18, (32) ms
2015-09-05 18:11:21.7257|Info|  Settimeout: id:19, (32) ms
2015-09-05 18:11:21.7257|Info|  Settimeout: id:20, (32) ms
2015-09-05 18:11:21.7257|Info|  Settimeout: id:21, (64) ms
2015-09-05 18:11:21.7257|Info|      Encerrado timer: id:17, (18:11:21.7338)
2015-09-05 18:11:21.7628|Info|      Executando timer: id:18, (18:11:21.7628)
2015-09-05 18:11:21.7628|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.7628|Info|      Encerrado timer: id:18, (18:11:21.7638)
2015-09-05 18:11:21.7628|Info|      Executando timer: id:20, (18:11:21.7648)
2015-09-05 18:11:21.7628|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.7628|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.7628|Info|      Encerrado timer: id:20, (18:11:21.7668)
2015-09-05 18:11:21.7628|Info|      Executando timer: id:19, (18:11:21.7678)
2015-09-05 18:11:21.7628|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.7628|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.7628|Info|      Encerrado timer: id:19, (18:11:21.7698)
2015-09-05 18:11:21.7988|Info|      Executando timer: id:21, (18:11:21.7988)
2015-09-05 18:11:21.7988|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 18:11:21.7988|Info|  Settimeout: id:22, (32) ms
2015-09-05 18:11:21.7988|Info|  Settimeout: id:23, (13) ms
2015-09-05 18:11:21.7988|Info|      Encerrado timer: id:21, (18:11:21.8028)
2015-09-05 18:11:21.8168|Info|      Executando timer: id:23, (18:11:21.8168)
2015-09-05 18:11:21.8208|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.8208|Info|  Settimeout: id:24, (32) ms
2015-09-05 18:11:21.8208|Info|  Settimeout: id:25, (32) ms
2015-09-05 18:11:21.8208|Info|  Settimeout: id:26, (64) ms
2015-09-05 18:11:21.8208|Info|      Encerrado timer: id:23, (18:11:21.8248)
2015-09-05 18:11:21.8348|Info|      Executando timer: id:22, (18:11:21.8348)
2015-09-05 18:11:21.8348|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.8348|Info|      Encerrado timer: id:22, (18:11:21.8368)
2015-09-05 18:11:21.8558|Info|      Executando timer: id:24, (18:11:21.8558)
2015-09-05 18:11:21.8558|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.8558|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:21.8558|Info|      Encerrado timer: id:24, (18:11:21.8578)
2015-09-05 18:11:21.8558|Info|      Executando timer: id:25, (18:11:21.8588)
2015-09-05 18:11:21.8558|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:21.8558|Info|      Encerrado timer: id:25, (18:11:21.8598)
2015-09-05 18:11:21.8899|Info|      Executando timer: id:26, (18:11:21.8899)
2015-09-05 18:11:21.8899|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 18:11:21.8899|Info|  Settimeout: id:27, (13) ms
2015-09-05 18:11:21.8899|Info|      Encerrado timer: id:26, (18:11:21.8919)
2015-09-05 18:11:21.9059|Info|      Executando timer: id:27, (18:11:21.9059)
2015-09-05 18:11:21.9059|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:21.9059|Info|  Settimeout: id:28, (128) ms
2015-09-05 18:11:21.9059|Info|  Settimeout: id:29, (64) ms
2015-09-05 18:11:21.9059|Info|  Settimeout: id:30, (96) ms
2015-09-05 18:11:22.0360|Info|  Settimeout: id:31, (128) ms
2015-09-05 18:11:22.0380|Info|  Settimeout: id:32, (64) ms
2015-09-05 18:11:22.1641|Info|  Settimeout: id:33, (128) ms
2015-09-05 18:11:22.1641|Info|  Settimeout: id:34, (64) ms
2015-09-05 18:11:22.2271|Info|  Settimeout: id:35, (1) ms
2015-09-05 18:11:22.2271|Info|      Encerrado timer: id:27, (18:11:22.2281)
2015-09-05 18:11:22.2271|Info|      Executando timer: id:30, (18:11:22.2291)
2015-09-05 18:11:22.2271|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:22.2271|Info|  Settimeout: id:36, (86) ms
2015-09-05 18:11:22.2271|Info|      Encerrado timer: id:30, (18:11:22.2371)
2015-09-05 18:11:22.2271|Info|      Executando timer: id:35, (18:11:22.2381)
2015-09-05 18:11:22.2271|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 18:11:22.2271|Info|  Settimeout: id:37, (13) ms
2015-09-05 18:11:22.2421|Info|      Encerrado timer: id:35, (18:11:22.2421)
2015-09-05 18:11:22.2421|Info|      Executando timer: id:34, (18:11:22.2421)
2015-09-05 18:11:22.2421|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:22.2421|Info|  Settimeout: id:38, (45) ms
2015-09-05 18:11:22.2421|Info|      Encerrado timer: id:34, (18:11:22.2461)
2015-09-05 18:11:22.2421|Info|      Executando timer: id:37, (18:11:22.2551)
2015-09-05 18:11:22.2561|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.2561|Info|  Settimeout: id:39, (64) ms
2015-09-05 18:11:22.2561|Info|  Settimeout: id:40, (32) ms
2015-09-05 18:11:22.2561|Info|  Settimeout: id:41, (128) ms
2015-09-05 18:11:22.2561|Info|      Encerrado timer: id:37, (18:11:22.2611)
2015-09-05 18:11:22.2921|Info|      Executando timer: id:38, (18:11:22.2921)
2015-09-05 18:11:22.2921|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:22.2921|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:22.2921|Info|      Encerrado timer: id:38, (18:11:22.2951)
2015-09-05 18:11:22.2921|Info|      Executando timer: id:40, (18:11:22.2951)
2015-09-05 18:11:22.2921|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:22.2921|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:22.2921|Info|      Encerrado timer: id:40, (18:11:22.2982)
2015-09-05 18:11:22.3242|Info|      Executando timer: id:36, (18:11:22.3242)
2015-09-05 18:11:22.3242|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:22.3242|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:22.3242|Info|      Encerrado timer: id:36, (18:11:22.3272)
2015-09-05 18:11:22.3902|Info|      Executando timer: id:41, (18:11:22.3902)
2015-09-05 18:11:22.3902|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:11:22.3902|Info|  Settimeout: id:42, (13) ms
2015-09-05 18:11:22.3902|Info|      Encerrado timer: id:41, (18:11:22.3922)
2015-09-05 18:11:22.4062|Info|      Executando timer: id:42, (18:11:22.4062)
2015-09-05 18:11:22.4062|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.4062|Info|  Settimeout: id:43, (32) ms
2015-09-05 18:11:22.4062|Info|  Settimeout: id:44, (63) ms
2015-09-05 18:11:22.4713|Info|  Settimeout: id:45, (64) ms
2015-09-05 18:11:22.4713|Info|      Encerrado timer: id:42, (18:11:22.4723)
2015-09-05 18:11:22.5373|Info|      Executando timer: id:45, (18:11:22.5373)
2015-09-05 18:11:22.5373|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 18:11:22.5373|Info|  Settimeout: id:46, (13) ms
2015-09-05 18:11:22.5373|Info|      Encerrado timer: id:45, (18:11:22.5403)
2015-09-05 18:11:22.5543|Info|      Executando timer: id:46, (18:11:22.5543)
2015-09-05 18:11:22.5543|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.5543|Info|  Settimeout: id:47, (1) ms
2015-09-05 18:11:22.5543|Info|  Settimeout: id:48, (32) ms
2015-09-05 18:11:22.5543|Info|      Encerrado timer: id:46, (18:11:22.5633)
2015-09-05 18:11:22.5543|Info|      Executando timer: id:47, (18:11:22.5643)
2015-09-05 18:11:22.5543|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:11:22.5543|Info|      Encerrado timer: id:47, (18:11:22.5663)
2015-09-05 18:11:22.5964|Info|      Executando timer: id:48, (18:11:22.5964)
2015-09-05 18:11:22.5964|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:11:22.5964|Info|  Settimeout: id:49, (13) ms
2015-09-05 18:11:22.5964|Info|      Encerrado timer: id:48, (18:11:22.5994)
2015-09-05 18:11:22.6134|Info|      Executando timer: id:49, (18:11:22.6134)
2015-09-05 18:11:22.6134|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.6134|Info|  Settimeout: id:50, (1) ms
2015-09-05 18:11:22.6174|Info|  Settimeout: id:51, (32) ms
2015-09-05 18:11:22.6174|Info|      Encerrado timer: id:49, (18:11:22.6184)
2015-09-05 18:11:22.6174|Info|      Executando timer: id:50, (18:11:22.6194)
2015-09-05 18:11:22.6174|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:11:22.6174|Info|      Encerrado timer: id:50, (18:11:22.6214)
2015-09-05 18:11:22.6514|Info|      Executando timer: id:51, (18:11:22.6514)
2015-09-05 18:11:22.6514|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:11:22.6514|Info|  Settimeout: id:52, (13) ms
2015-09-05 18:11:22.6514|Info|      Encerrado timer: id:51, (18:11:22.6544)
2015-09-05 18:11:22.6684|Info|      Executando timer: id:52, (18:11:22.6684)
2015-09-05 18:11:22.6684|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.6684|Info|  Settimeout: id:53, (1) ms
2015-09-05 18:11:22.6684|Info|  Settimeout: id:54, (32) ms
2015-09-05 18:11:22.6684|Info|      Encerrado timer: id:52, (18:11:22.6734)
2015-09-05 18:11:22.7064|Info|      Executando timer: id:54, (18:11:22.7064)
2015-09-05 18:11:22.7064|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:11:22.7064|Info|  Settimeout: id:55, (13) ms
2015-09-05 18:11:22.7154|Info|      Encerrado timer: id:54, (18:11:22.7154)
2015-09-05 18:11:22.7295|Info|      Executando timer: id:55, (18:11:22.7295)
2015-09-05 18:11:22.7295|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.7295|Info|  Settimeout: id:56, (32) ms
2015-09-05 18:11:22.7295|Info|  Settimeout: id:57, (1) ms
2015-09-05 18:11:22.7295|Info|  Settimeout: id:58, (64) ms
2015-09-05 18:11:22.7295|Info|      Encerrado timer: id:55, (18:11:22.7345)
2015-09-05 18:11:22.7295|Info|      Executando timer: id:57, (18:11:22.7355)
2015-09-05 18:11:22.7295|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 18:11:22.7295|Info|      Encerrado timer: id:57, (18:11:22.7365)
2015-09-05 18:11:22.7655|Info|      Executando timer: id:56, (18:11:22.7655)
2015-09-05 18:11:22.7655|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:11:22.7655|Info|      Encerrado timer: id:56, (18:11:22.7675)
2015-09-05 18:11:22.7995|Info|      Executando timer: id:58, (18:11:22.7995)
2015-09-05 18:11:22.7995|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:11:22.7995|Info|  Settimeout: id:59, (13) ms
2015-09-05 18:11:22.7995|Info|      Encerrado timer: id:58, (18:11:22.8015)
2015-09-05 18:11:22.8155|Info|      Executando timer: id:59, (18:11:22.8155)
2015-09-05 18:11:22.8155|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.8155|Info|  Settimeout: id:60, (32) ms
2015-09-05 18:11:22.8155|Info|  Settimeout: id:61, (64) ms
2015-09-05 18:11:22.8195|Info|      Encerrado timer: id:59, (18:11:22.8195)
2015-09-05 18:11:22.8515|Info|      Executando timer: id:60, (18:11:22.8515)
2015-09-05 18:11:22.8515|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:11:22.8515|Info|      Encerrado timer: id:60, (18:11:22.8525)
2015-09-05 18:11:22.8846|Info|      Executando timer: id:61, (18:11:22.8846)
2015-09-05 18:11:22.8846|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:11:22.8846|Info|  Settimeout: id:62, (13) ms
2015-09-05 18:11:22.8846|Info|      Encerrado timer: id:61, (18:11:22.8876)
2015-09-05 18:11:22.9016|Info|      Executando timer: id:62, (18:11:22.9016)
2015-09-05 18:11:22.9016|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:22.9016|Info|  Settimeout: id:63, (32) ms
2015-09-05 18:11:22.9016|Info|  Settimeout: id:64, (64) ms
2015-09-05 18:11:22.9016|Info|      Encerrado timer: id:62, (18:11:22.9056)
2015-09-05 18:11:22.9706|Info|      Executando timer: id:64, (18:11:22.9706)
2015-09-05 18:11:22.9706|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:11:22.9706|Info|  Settimeout: id:65, (13) ms
2015-09-05 18:11:22.9706|Info|      Encerrado timer: id:64, (18:11:22.9726)
2015-09-05 18:11:22.9866|Info|      Executando timer: id:65, (18:11:22.9866)
2015-09-05 18:11:22.9866|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:25.8157|Info|  Settimeout: id:66, (13) ms
2015-09-05 18:11:25.8157|Info|      Encerrado timer: id:65, (18:11:25.8167)
2015-09-05 18:11:25.8307|Info|      Executando timer: id:66, (18:11:25.8307)
2015-09-05 18:11:25.8307|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 18:11:25.9568|Info|----------------------------------------
2015-09-05 18:11:25.9568|Info|lodash.isNil
2015-09-05 18:11:25.9598|Info|----------------------------------------
2015-09-05 18:11:25.9598|Info| FAIL - should work with nulls from another realm
2015-09-05 18:11:25.9598|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:11:26.3190|Info|  Settimeout: id:67, (32) ms
2015-09-05 18:11:26.3190|Info|      Encerrado timer: id:66, (18:11:26.3200)
2015-09-05 18:11:26.3530|Info|      Executando timer: id:67, (18:11:26.3530)
2015-09-05 18:11:26.3530|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 18:11:26.3530|Info|  Settimeout: id:68, (13) ms
2015-09-05 18:11:26.3530|Info|      Encerrado timer: id:67, (18:11:26.3560)
2015-09-05 18:11:26.3700|Info|      Executando timer: id:68, (18:11:26.3700)
2015-09-05 18:11:26.3700|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:26.5742|Info|  Settimeout: id:69, (32) ms
2015-09-05 18:11:26.5742|Info|  Settimeout: id:70, (64) ms
2015-09-05 18:11:26.5742|Info|      Encerrado timer: id:68, (18:11:26.5772)
2015-09-05 18:11:26.6082|Info|      Executando timer: id:69, (18:11:26.6082)
2015-09-05 18:11:26.6082|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:26.6082|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:26.6082|Info|      Encerrado timer: id:69, (18:11:26.6102)
2015-09-05 18:11:26.6412|Info|      Executando timer: id:70, (18:11:26.6412)
2015-09-05 18:11:26.6412|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 18:11:26.6412|Info|  Settimeout: id:71, (13) ms
2015-09-05 18:11:26.6412|Info|      Encerrado timer: id:70, (18:11:26.6432)
2015-09-05 18:11:26.6572|Info|      Executando timer: id:71, (18:11:26.6572)
2015-09-05 18:11:26.6572|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:26.6572|Info|  Settimeout: id:72, (32) ms
2015-09-05 18:11:26.6572|Info|  Settimeout: id:73, (64) ms
2015-09-05 18:11:26.6633|Info|      Encerrado timer: id:71, (18:11:26.6633)
2015-09-05 18:11:26.6933|Info|      Executando timer: id:72, (18:11:26.6933)
2015-09-05 18:11:26.6943|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:26.6943|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:26.6943|Info|      Encerrado timer: id:72, (18:11:26.6963)
2015-09-05 18:11:26.7283|Info|      Executando timer: id:73, (18:11:26.7283)
2015-09-05 18:11:26.7283|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 18:11:26.7283|Info|  Settimeout: id:74, (32) ms
2015-09-05 18:11:26.7283|Info|  Settimeout: id:75, (13) ms
2015-09-05 18:11:26.7283|Info|      Encerrado timer: id:73, (18:11:26.7333)
2015-09-05 18:11:26.7473|Info|      Executando timer: id:75, (18:11:26.7473)
2015-09-05 18:11:26.7473|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:26.7473|Info|  Settimeout: id:76, (32) ms
2015-09-05 18:11:26.7573|Info|  Settimeout: id:77, (64) ms
2015-09-05 18:11:26.7573|Info|      Encerrado timer: id:75, (18:11:26.7583)
2015-09-05 18:11:26.7573|Info|      Executando timer: id:74, (18:11:26.7643)
2015-09-05 18:11:26.7573|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:26.7573|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:26.7573|Info|      Encerrado timer: id:74, (18:11:26.7673)
2015-09-05 18:11:26.7903|Info|      Executando timer: id:76, (18:11:26.7903)
2015-09-05 18:11:26.7903|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:26.7903|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:26.7903|Info|      Encerrado timer: id:76, (18:11:26.7933)
2015-09-05 18:11:26.8234|Info|      Executando timer: id:77, (18:11:26.8234)
2015-09-05 18:11:26.8234|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:11:26.8234|Info|  Settimeout: id:78, (13) ms
2015-09-05 18:11:26.8234|Info|      Encerrado timer: id:77, (18:11:26.8264)
2015-09-05 18:11:26.8404|Info|      Executando timer: id:78, (18:11:26.8404)
2015-09-05 18:11:26.8404|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:26.8404|Info|  Settimeout: id:79, (64) ms
2015-09-05 18:11:26.8404|Info|      Encerrado timer: id:78, (18:11:26.8434)
2015-09-05 18:11:26.9084|Info|      Executando timer: id:79, (18:11:26.9084)
2015-09-05 18:11:26.9084|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:11:26.9084|Info|  Settimeout: id:80, (13) ms
2015-09-05 18:11:26.9084|Info|      Encerrado timer: id:79, (18:11:26.9104)
2015-09-05 18:11:26.9244|Info|      Executando timer: id:80, (18:11:26.9244)
2015-09-05 18:11:26.9244|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:26.9244|Info|  Settimeout: id:81, (32) ms
2015-09-05 18:11:26.9585|Info|  Settimeout: id:82, (32) ms
2015-09-05 18:11:26.9905|Info|  Settimeout: id:83, (32) ms
2015-09-05 18:11:27.0225|Info|  Settimeout: id:84, (32) ms
2015-09-05 18:11:27.0545|Info|  Settimeout: id:85, (32) ms
2015-09-05 18:11:27.0956|Info|  Settimeout: id:86, (32) ms
2015-09-05 18:11:27.1276|Info|  Settimeout: id:87, (32) ms
2015-09-05 18:11:27.1596|Info|  Settimeout: id:88, (32) ms
2015-09-05 18:11:27.1916|Info|  Settimeout: id:89, (32) ms
2015-09-05 18:11:27.2237|Info|  Settimeout: id:90, (32) ms
2015-09-05 18:11:27.2467|Info|  Settimeout: id:91, (1) ms
2015-09-05 18:11:27.2467|Info|      Encerrado timer: id:80, (18:11:27.2477)
2015-09-05 18:11:27.2467|Info|      Executando timer: id:91, (18:11:27.2497)
2015-09-05 18:11:27.2467|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:11:27.2467|Info|  Settimeout: id:92, (13) ms
2015-09-05 18:11:27.2467|Info|      Encerrado timer: id:91, (18:11:27.2537)
2015-09-05 18:11:27.2577|Info|      Executando timer: id:90, (18:11:27.2577)
2015-09-05 18:11:27.2577|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:27.2577|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:27.2577|Info|      Encerrado timer: id:90, (18:11:27.2607)
2015-09-05 18:11:27.2577|Info|      Executando timer: id:92, (18:11:27.2677)
2015-09-05 18:11:27.2577|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:27.2577|Info|  Settimeout: id:93, (32) ms
2015-09-05 18:11:27.3027|Info|  Settimeout: id:94, (32) ms
2015-09-05 18:11:27.3347|Info|  Settimeout: id:95, (32) ms
2015-09-05 18:11:27.3668|Info|  Settimeout: id:96, (32) ms
2015-09-05 18:11:27.3988|Info|  Settimeout: id:97, (32) ms
2015-09-05 18:11:27.4308|Info|  Settimeout: id:98, (32) ms
2015-09-05 18:11:27.4628|Info|  Settimeout: id:99, (32) ms
2015-09-05 18:11:27.4948|Info|  Settimeout: id:100, (32) ms
2015-09-05 18:11:27.5269|Info|  Settimeout: id:101, (32) ms
2015-09-05 18:11:27.5589|Info|  Settimeout: id:102, (32) ms
2015-09-05 18:11:27.5909|Info|  Settimeout: id:103, (1) ms
2015-09-05 18:11:27.5909|Info|      Encerrado timer: id:92, (18:11:27.5919)
2015-09-05 18:11:27.5909|Info|      Executando timer: id:102, (18:11:27.5979)
2015-09-05 18:11:27.5909|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:27.5999|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:27.5999|Info|      Encerrado timer: id:102, (18:11:27.6009)
2015-09-05 18:11:27.5999|Info|      Executando timer: id:103, (18:11:27.6009)
2015-09-05 18:11:27.5999|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:11:27.5999|Info|  Settimeout: id:104, (13) ms
2015-09-05 18:11:27.5999|Info|      Encerrado timer: id:103, (18:11:27.6039)
2015-09-05 18:11:27.6169|Info|      Executando timer: id:104, (18:11:27.6169)
2015-09-05 18:11:27.6169|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:27.6169|Info|  Settimeout: id:105, (32) ms
2015-09-05 18:11:27.6169|Info|  Settimeout: id:106, (128) ms
2015-09-05 18:11:27.6169|Info|      Encerrado timer: id:104, (18:11:27.6219)
2015-09-05 18:11:27.6540|Info|      Executando timer: id:105, (18:11:27.6540)
2015-09-05 18:11:27.6540|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:27.6540|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:27.6540|Info|      Encerrado timer: id:105, (18:11:27.6570)
2015-09-05 18:11:27.7510|Info|      Executando timer: id:106, (18:11:27.7510)
2015-09-05 18:11:27.7510|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:11:27.7510|Info|  Settimeout: id:107, (13) ms
2015-09-05 18:11:27.7510|Info|      Encerrado timer: id:106, (18:11:27.7530)
2015-09-05 18:11:27.7670|Info|      Executando timer: id:107, (18:11:27.7670)
2015-09-05 18:11:27.7670|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:27.7670|Info|  Settimeout: id:108, (32) ms
2015-09-05 18:11:27.7670|Info|  Settimeout: id:109, (64) ms
2015-09-05 18:11:27.7720|Info|  Settimeout: id:110, (64) ms
2015-09-05 18:11:27.7720|Info|  Settimeout: id:111, (256) ms
2015-09-05 18:11:27.7720|Info|      Encerrado timer: id:107, (18:11:27.7730)
2015-09-05 18:11:27.8031|Info|      Executando timer: id:108, (18:11:27.8031)
2015-09-05 18:11:27.8031|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:27.8031|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:27.8031|Info|      Encerrado timer: id:108, (18:11:27.8061)
2015-09-05 18:11:27.8371|Info|      Executando timer: id:110, (18:11:27.8371)
2015-09-05 18:11:27.8371|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:27.8371|Info|      Encerrado timer: id:110, (18:11:27.8381)
2015-09-05 18:11:27.8371|Info|      Executando timer: id:109, (18:11:27.8391)
2015-09-05 18:11:27.8371|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:27.8371|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:27.8371|Info|      Encerrado timer: id:109, (18:11:27.8411)
2015-09-05 18:11:28.0302|Info|      Executando timer: id:111, (18:11:28.0302)
2015-09-05 18:11:28.0302|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 18:11:28.0302|Info|  Settimeout: id:112, (13) ms
2015-09-05 18:11:28.0302|Info|      Encerrado timer: id:111, (18:11:28.0322)
2015-09-05 18:11:28.0462|Info|      Executando timer: id:112, (18:11:28.0462)
2015-09-05 18:11:28.0462|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.0462|Info|  Settimeout: id:113, (64) ms
2015-09-05 18:11:28.0462|Info|  Settimeout: id:114, (96) ms
2015-09-05 18:11:28.0462|Info|  Settimeout: id:115, (192) ms
2015-09-05 18:11:28.0462|Info|      Encerrado timer: id:112, (18:11:28.0512)
2015-09-05 18:11:28.1133|Info|      Executando timer: id:113, (18:11:28.1133)
2015-09-05 18:11:28.1133|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:28.1133|Info|      Encerrado timer: id:113, (18:11:28.1153)
2015-09-05 18:11:28.1463|Info|      Executando timer: id:114, (18:11:28.1463)
2015-09-05 18:11:28.1473|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 18:11:28.1473|Info|  Settimeout: id:116, (64) ms
2015-09-05 18:11:28.1473|Info|      Encerrado timer: id:114, (18:11:28.1503)
2015-09-05 18:11:28.2154|Info|      Executando timer: id:116, (18:11:28.2154)
2015-09-05 18:11:28.2154|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:28.2154|Info|      Encerrado timer: id:116, (18:11:28.2174)
2015-09-05 18:11:28.2434|Info|      Executando timer: id:115, (18:11:28.2434)
2015-09-05 18:11:28.2434|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 18:11:28.2434|Info|  Settimeout: id:117, (13) ms
2015-09-05 18:11:28.2434|Info|      Encerrado timer: id:115, (18:11:28.2464)
2015-09-05 18:11:28.2604|Info|      Executando timer: id:117, (18:11:28.2604)
2015-09-05 18:11:28.2604|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.2604|Info|  Settimeout: id:118, (0) ms
2015-09-05 18:11:28.2604|Info|  Settimeout: id:119, (32) ms
2015-09-05 18:11:28.2604|Info|      Encerrado timer: id:117, (18:11:28.2654)
2015-09-05 18:11:28.2604|Info|      Executando timer: id:118, (18:11:28.2704)
2015-09-05 18:11:28.2604|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.2724|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:28.2724|Info|      Encerrado timer: id:118, (18:11:28.2734)
2015-09-05 18:11:28.2984|Info|      Executando timer: id:119, (18:11:28.2984)
2015-09-05 18:11:28.2984|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:11:28.2984|Info|  Settimeout: id:120, (0) ms
2015-09-05 18:11:28.2984|Info|  Settimeout: id:121, (13) ms
2015-09-05 18:11:28.2984|Info|      Encerrado timer: id:119, (18:11:28.3024)
2015-09-05 18:11:28.2984|Info|      Executando timer: id:120, (18:11:28.3024)
2015-09-05 18:11:28.3034|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.3034|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:28.3034|Info|      Encerrado timer: id:120, (18:11:28.3044)
2015-09-05 18:11:28.3034|Info|      Executando timer: id:121, (18:11:28.3164)
2015-09-05 18:11:28.3034|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.3194|Info|  Settimeout: id:122, (32) ms
2015-09-05 18:11:28.3194|Info|  Settimeout: id:123, (64) ms
2015-09-05 18:11:28.3194|Info|      Encerrado timer: id:121, (18:11:28.3204)
2015-09-05 18:11:28.3525|Info|      Executando timer: id:122, (18:11:28.3525)
2015-09-05 18:11:28.3525|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.3525|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:28.3525|Info|      Encerrado timer: id:122, (18:11:28.3545)
2015-09-05 18:11:28.3855|Info|      Executando timer: id:123, (18:11:28.3855)
2015-09-05 18:11:28.3855|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:11:28.3855|Info|  Settimeout: id:124, (13) ms
2015-09-05 18:11:28.3855|Info|      Encerrado timer: id:123, (18:11:28.3875)
2015-09-05 18:11:28.4015|Info|      Executando timer: id:124, (18:11:28.4015)
2015-09-05 18:11:28.4015|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.4015|Info|  Settimeout: id:125, (32) ms
2015-09-05 18:11:28.4015|Info|  Settimeout: id:126, (256) ms
2015-09-05 18:11:28.4015|Info|      Encerrado timer: id:124, (18:11:28.4045)
2015-09-05 18:11:28.4365|Info|      Executando timer: id:125, (18:11:28.4365)
2015-09-05 18:11:28.4365|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.4365|Info|  Settimeout: id:127, (32) ms
2015-09-05 18:11:28.4365|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:11:28.4365|Info|      Encerrado timer: id:125, (18:11:28.4395)
2015-09-05 18:11:28.4715|Info|      Executando timer: id:127, (18:11:28.4715)
2015-09-05 18:11:28.4715|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.4715|Info|  Settimeout: id:128, (32) ms
2015-09-05 18:11:28.4755|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:11:28.4755|Info|      Encerrado timer: id:127, (18:11:28.4765)
2015-09-05 18:11:28.5086|Info|      Executando timer: id:128, (18:11:28.5086)
2015-09-05 18:11:28.5086|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.5086|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:28.5086|Info|      Encerrado timer: id:128, (18:11:28.5116)
2015-09-05 18:11:28.6617|Info|      Executando timer: id:126, (18:11:28.6617)
2015-09-05 18:11:28.6627|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:11:28.6627|Info|  Settimeout: id:129, (13) ms
2015-09-05 18:11:28.6627|Info|      Encerrado timer: id:126, (18:11:28.6647)
2015-09-05 18:11:28.6787|Info|      Executando timer: id:129, (18:11:28.6787)
2015-09-05 18:11:28.6787|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.6787|Info|  Settimeout: id:130, (32) ms
2015-09-05 18:11:28.6787|Info|  Settimeout: id:131, (64) ms
2015-09-05 18:11:28.6787|Info|      Encerrado timer: id:129, (18:11:28.6887)
2015-09-05 18:11:28.7207|Info|      Executando timer: id:130, (18:11:28.7207)
2015-09-05 18:11:28.7207|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.7207|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:28.7207|Info|      Encerrado timer: id:130, (18:11:28.7227)
2015-09-05 18:11:28.7537|Info|      Executando timer: id:131, (18:11:28.7537)
2015-09-05 18:11:28.7537|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:11:28.7537|Info|  Settimeout: id:132, (32) ms
2015-09-05 18:11:28.7567|Info|  Settimeout: id:133, (13) ms
2015-09-05 18:11:28.7567|Info|      Encerrado timer: id:131, (18:11:28.7577)
2015-09-05 18:11:28.7718|Info|      Executando timer: id:133, (18:11:28.7718)
2015-09-05 18:11:28.7718|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.7718|Info|  Settimeout: id:134, (32) ms
2015-09-05 18:11:28.7718|Info|  Settimeout: id:135, (64) ms
2015-09-05 18:11:28.7718|Info|      Encerrado timer: id:133, (18:11:28.7768)
2015-09-05 18:11:28.7898|Info|      Executando timer: id:132, (18:11:28.7898)
2015-09-05 18:11:28.7898|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.7898|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:28.7898|Info|      Encerrado timer: id:132, (18:11:28.7928)
2015-09-05 18:11:28.8418|Info|      Executando timer: id:135, (18:11:28.8418)
2015-09-05 18:11:28.8418|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:11:28.8418|Info|  Settimeout: id:136, (13) ms
2015-09-05 18:11:28.8418|Info|      Encerrado timer: id:135, (18:11:28.8438)
2015-09-05 18:11:28.8578|Info|      Executando timer: id:136, (18:11:28.8578)
2015-09-05 18:11:28.8578|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.8578|Info|  Settimeout: id:137, (32) ms
2015-09-05 18:11:28.8578|Info|  Settimeout: id:138, (32) ms
2015-09-05 18:11:28.8578|Info|  Settimeout: id:139, (64) ms
2015-09-05 18:11:28.8578|Info|      Encerrado timer: id:136, (18:11:28.8618)
2015-09-05 18:11:28.8938|Info|      Executando timer: id:138, (18:11:28.8938)
2015-09-05 18:11:28.8938|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:11:28.8988|Info|      Encerrado timer: id:138, (18:11:28.8988)
2015-09-05 18:11:28.9269|Info|      Executando timer: id:139, (18:11:28.9269)
2015-09-05 18:11:28.9269|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:11:28.9289|Info|  Settimeout: id:140, (13) ms
2015-09-05 18:11:28.9289|Info|      Encerrado timer: id:139, (18:11:28.9299)
2015-09-05 18:11:28.9289|Info|      Executando timer: id:140, (18:11:28.9429)
2015-09-05 18:11:28.9439|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.9439|Info|  Settimeout: id:141, (32) ms
2015-09-05 18:11:28.9439|Info|      Encerrado timer: id:140, (18:11:28.9479)
2015-09-05 18:11:28.9809|Info|      Executando timer: id:141, (18:11:28.9809)
2015-09-05 18:11:28.9809|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:11:28.9809|Info|  Settimeout: id:142, (13) ms
2015-09-05 18:11:28.9809|Info|      Encerrado timer: id:141, (18:11:28.9849)
2015-09-05 18:11:28.9989|Info|      Executando timer: id:142, (18:11:28.9989)
2015-09-05 18:11:28.9989|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:28.9989|Info|  Settimeout: id:143, (32) ms
2015-09-05 18:11:28.9989|Info|  Settimeout: id:144, (64) ms
2015-09-05 18:11:28.9989|Info|      Encerrado timer: id:142, (18:11:29.0039)
2015-09-05 18:11:29.0359|Info|      Executando timer: id:143, (18:11:29.0359)
2015-09-05 18:11:29.0359|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:29.0359|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:29.0379|Info|      Encerrado timer: id:143, (18:11:29.0379)
2015-09-05 18:11:29.0690|Info|      Executando timer: id:144, (18:11:29.0690)
2015-09-05 18:11:29.0690|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:11:29.0690|Info|  Settimeout: id:145, (13) ms
2015-09-05 18:11:29.0690|Info|      Encerrado timer: id:144, (18:11:29.0720)
2015-09-05 18:11:29.0860|Info|      Executando timer: id:145, (18:11:29.0860)
2015-09-05 18:11:29.0860|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:29.0860|Info|  Settimeout: id:146, (32) ms
2015-09-05 18:11:29.0860|Info|  Settimeout: id:147, (256) ms
2015-09-05 18:11:29.0860|Info|      Encerrado timer: id:145, (18:11:29.0910)
2015-09-05 18:11:29.1220|Info|      Executando timer: id:146, (18:11:29.1220)
2015-09-05 18:11:29.1220|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:29.1220|Info|  Settimeout: id:148, (32) ms
2015-09-05 18:11:29.1220|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:11:29.1220|Info|      Encerrado timer: id:146, (18:11:29.1250)
2015-09-05 18:11:29.1580|Info|      Executando timer: id:148, (18:11:29.1580)
2015-09-05 18:11:29.1580|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:11:29.1580|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:11:29.1580|Info|      Encerrado timer: id:148, (18:11:29.1600)
2015-09-05 18:11:29.3472|Info|      Executando timer: id:147, (18:11:29.3472)
2015-09-05 18:11:29.3472|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:11:29.3472|Info|  Settimeout: id:149, (13) ms
2015-09-05 18:11:29.3502|Info|      Encerrado timer: id:147, (18:11:29.3502)
2015-09-05 18:11:29.3502|Info|      Executando timer: id:149, (18:11:29.3642)
2015-09-05 18:11:29.3502|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:29.3722|Info|  Settimeout: id:150, (64) ms
2015-09-05 18:11:29.3722|Info|      Encerrado timer: id:149, (18:11:29.3732)
2015-09-05 18:11:29.4382|Info|      Executando timer: id:150, (18:11:29.4382)
2015-09-05 18:11:29.4382|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:11:29.4382|Info|  Settimeout: id:151, (13) ms
2015-09-05 18:11:29.4382|Info|      Encerrado timer: id:150, (18:11:29.4402)
2015-09-05 18:11:29.4542|Info|      Executando timer: id:151, (18:11:29.4542)
2015-09-05 18:11:29.4542|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:29.4542|Info|  Settimeout: id:152, (32) ms
2015-09-05 18:11:29.4542|Info|  Settimeout: id:153, (64) ms
2015-09-05 18:11:29.4542|Info|      Encerrado timer: id:151, (18:11:29.4572)
2015-09-05 18:11:29.5223|Info|      Executando timer: id:153, (18:11:29.5223)
2015-09-05 18:11:29.5223|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:11:29.5223|Info|  Settimeout: id:154, (13) ms
2015-09-05 18:11:29.5223|Info|      Encerrado timer: id:153, (18:11:29.5253)
2015-09-05 18:11:29.5393|Info|      Executando timer: id:154, (18:11:29.5393)
2015-09-05 18:11:29.5393|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:29.5393|Info|  Settimeout: id:155, (64) ms
2015-09-05 18:11:29.5393|Info|      Encerrado timer: id:154, (18:11:29.5413)
2015-09-05 18:11:29.6063|Info|      Executando timer: id:155, (18:11:29.6063)
2015-09-05 18:11:29.6063|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:11:29.6063|Info|  Settimeout: id:156, (13) ms
2015-09-05 18:11:29.6063|Info|      Encerrado timer: id:155, (18:11:29.6093)
2015-09-05 18:11:29.6234|Info|      Executando timer: id:156, (18:11:29.6234)
2015-09-05 18:11:29.6234|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:11:29.7424|Info|----------------------------------------
2015-09-05 18:11:29.7424|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:11:29.7424|Info|    Finished in 8605 milliseconds.
2015-09-05 18:11:29.7424|Info|----------------------------------------
2015-09-05 18:11:29.7424|Info|      Encerrado timer: id:156, (18:11:29.7514)
2015-09-05 18:11:29.7424|Info|Encerrando os testes
2015-09-05 18:11:29.7424|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:11:29.7424|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:11:29.7565|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:14:04.3583|Info|Iniciando os testes
2015-09-05 18:14:04.8106|Info|  Settimeout: id:0, (13) ms
2015-09-05 18:14:04.8296|Info|      Executando timer: id:0, (18:14:04.8286)
2015-09-05 18:14:04.8596|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:04.9007|Info|  Settimeout: id:1, (13) ms
2015-09-05 18:14:04.9007|Info|      Encerrado timer: id:0, (18:14:04.9017)
2015-09-05 18:14:04.9157|Info|      Executando timer: id:1, (18:14:04.9157)
2015-09-05 18:14:04.9157|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.0037|Info|  Settimeout: id:2, (32) ms
2015-09-05 18:14:05.0037|Info|  Settimeout: id:3, (96) ms
2015-09-05 18:14:05.0077|Info|      Encerrado timer: id:1, (18:14:05.0077)
2015-09-05 18:14:05.0388|Info|      Executando timer: id:2, (18:14:05.0388)
2015-09-05 18:14:05.0388|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.0388|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.0388|Info|      Encerrado timer: id:2, (18:14:05.0408)
2015-09-05 18:14:05.1048|Info|      Executando timer: id:3, (18:14:05.1048)
2015-09-05 18:14:05.1048|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:05.1048|Info|  Settimeout: id:4, (13) ms
2015-09-05 18:14:05.1048|Info|      Encerrado timer: id:3, (18:14:05.1078)
2015-09-05 18:14:05.1218|Info|      Executando timer: id:4, (18:14:05.1218)
2015-09-05 18:14:05.1218|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.1218|Info|  Settimeout: id:5, (32) ms
2015-09-05 18:14:05.1218|Info|  Settimeout: id:6, (64) ms
2015-09-05 18:14:05.1218|Info|  Settimeout: id:7, (128) ms
2015-09-05 18:14:05.1218|Info|      Encerrado timer: id:4, (18:14:05.1268)
2015-09-05 18:14:05.1579|Info|      Executando timer: id:5, (18:14:05.1579)
2015-09-05 18:14:05.1579|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.1579|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.1579|Info|      Encerrado timer: id:5, (18:14:05.1599)
2015-09-05 18:14:05.1909|Info|      Executando timer: id:6, (18:14:05.1909)
2015-09-05 18:14:05.1909|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 18:14:05.1909|Info|  Settimeout: id:8, (32) ms
2015-09-05 18:14:05.1909|Info|      Encerrado timer: id:6, (18:14:05.1929)
2015-09-05 18:14:05.2259|Info|      Executando timer: id:8, (18:14:05.2259)
2015-09-05 18:14:05.2259|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.2259|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.2259|Info|      Encerrado timer: id:8, (18:14:05.2289)
2015-09-05 18:14:05.2559|Info|      Executando timer: id:7, (18:14:05.2559)
2015-09-05 18:14:05.2569|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 18:14:05.2569|Info|  Settimeout: id:9, (32) ms
2015-09-05 18:14:05.2569|Info|  Settimeout: id:10, (13) ms
2015-09-05 18:14:05.2569|Info|      Encerrado timer: id:7, (18:14:05.2609)
2015-09-05 18:14:05.2739|Info|      Executando timer: id:10, (18:14:05.2739)
2015-09-05 18:14:05.2739|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.2739|Info|  Settimeout: id:11, (32) ms
2015-09-05 18:14:05.2739|Info|  Settimeout: id:12, (64) ms
2015-09-05 18:14:05.2739|Info|      Encerrado timer: id:10, (18:14:05.2789)
2015-09-05 18:14:05.2920|Info|      Executando timer: id:9, (18:14:05.2920)
2015-09-05 18:14:05.2920|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.2920|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.2920|Info|      Encerrado timer: id:9, (18:14:05.2950)
2015-09-05 18:14:05.3110|Info|      Executando timer: id:11, (18:14:05.3110)
2015-09-05 18:14:05.3110|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.3110|Info|      Encerrado timer: id:11, (18:14:05.3130)
2015-09-05 18:14:05.3440|Info|      Executando timer: id:12, (18:14:05.3440)
2015-09-05 18:14:05.3440|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 18:14:05.3440|Info|  Settimeout: id:13, (32) ms
2015-09-05 18:14:05.3440|Info|  Settimeout: id:14, (13) ms
2015-09-05 18:14:05.3440|Info|      Encerrado timer: id:12, (18:14:05.3470)
2015-09-05 18:14:05.3610|Info|      Executando timer: id:14, (18:14:05.3610)
2015-09-05 18:14:05.3610|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.3610|Info|  Settimeout: id:15, (32) ms
2015-09-05 18:14:05.3610|Info|  Settimeout: id:16, (64) ms
2015-09-05 18:14:05.3610|Info|      Encerrado timer: id:14, (18:14:05.3650)
2015-09-05 18:14:05.3790|Info|      Executando timer: id:13, (18:14:05.3790)
2015-09-05 18:14:05.3790|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.3790|Info|      Encerrado timer: id:13, (18:14:05.3800)
2015-09-05 18:14:05.3960|Info|      Executando timer: id:15, (18:14:05.3960)
2015-09-05 18:14:05.3970|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.3970|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.3970|Info|      Encerrado timer: id:15, (18:14:05.3980)
2015-09-05 18:14:05.4290|Info|      Executando timer: id:16, (18:14:05.4290)
2015-09-05 18:14:05.4290|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:05.4290|Info|  Settimeout: id:17, (13) ms
2015-09-05 18:14:05.4290|Info|      Encerrado timer: id:16, (18:14:05.4331)
2015-09-05 18:14:05.4471|Info|      Executando timer: id:17, (18:14:05.4471)
2015-09-05 18:14:05.4471|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.4471|Info|  Settimeout: id:18, (32) ms
2015-09-05 18:14:05.4471|Info|  Settimeout: id:19, (32) ms
2015-09-05 18:14:05.4471|Info|  Settimeout: id:20, (32) ms
2015-09-05 18:14:05.4471|Info|  Settimeout: id:21, (64) ms
2015-09-05 18:14:05.4471|Info|      Encerrado timer: id:17, (18:14:05.4531)
2015-09-05 18:14:05.4831|Info|      Executando timer: id:18, (18:14:05.4831)
2015-09-05 18:14:05.4831|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.4831|Info|      Encerrado timer: id:18, (18:14:05.4841)
2015-09-05 18:14:05.4831|Info|      Executando timer: id:20, (18:14:05.4851)
2015-09-05 18:14:05.4831|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.4831|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.4831|Info|      Encerrado timer: id:20, (18:14:05.4871)
2015-09-05 18:14:05.4831|Info|      Executando timer: id:19, (18:14:05.4881)
2015-09-05 18:14:05.4831|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.4831|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.4831|Info|      Encerrado timer: id:19, (18:14:05.4901)
2015-09-05 18:14:05.5181|Info|      Executando timer: id:21, (18:14:05.5181)
2015-09-05 18:14:05.5181|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 18:14:05.5181|Info|  Settimeout: id:22, (32) ms
2015-09-05 18:14:05.5181|Info|  Settimeout: id:23, (13) ms
2015-09-05 18:14:05.5181|Info|      Encerrado timer: id:21, (18:14:05.5211)
2015-09-05 18:14:05.5351|Info|      Executando timer: id:23, (18:14:05.5351)
2015-09-05 18:14:05.5411|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.5411|Info|  Settimeout: id:24, (32) ms
2015-09-05 18:14:05.5411|Info|  Settimeout: id:25, (32) ms
2015-09-05 18:14:05.5411|Info|  Settimeout: id:26, (64) ms
2015-09-05 18:14:05.5411|Info|      Encerrado timer: id:23, (18:14:05.5461)
2015-09-05 18:14:05.5531|Info|      Executando timer: id:22, (18:14:05.5531)
2015-09-05 18:14:05.5531|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.5531|Info|      Encerrado timer: id:22, (18:14:05.5551)
2015-09-05 18:14:05.5772|Info|      Executando timer: id:24, (18:14:05.5772)
2015-09-05 18:14:05.5772|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.5772|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:05.5772|Info|      Encerrado timer: id:24, (18:14:05.5802)
2015-09-05 18:14:05.5772|Info|      Executando timer: id:25, (18:14:05.5802)
2015-09-05 18:14:05.5772|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.5772|Info|      Encerrado timer: id:25, (18:14:05.5832)
2015-09-05 18:14:05.6112|Info|      Executando timer: id:26, (18:14:05.6112)
2015-09-05 18:14:05.6112|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 18:14:05.6112|Info|  Settimeout: id:27, (13) ms
2015-09-05 18:14:05.6112|Info|      Encerrado timer: id:26, (18:14:05.6132)
2015-09-05 18:14:05.6272|Info|      Executando timer: id:27, (18:14:05.6272)
2015-09-05 18:14:05.6272|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.6272|Info|  Settimeout: id:28, (128) ms
2015-09-05 18:14:05.6272|Info|  Settimeout: id:29, (64) ms
2015-09-05 18:14:05.6272|Info|  Settimeout: id:30, (96) ms
2015-09-05 18:14:05.7573|Info|  Settimeout: id:31, (128) ms
2015-09-05 18:14:05.7573|Info|  Settimeout: id:32, (64) ms
2015-09-05 18:14:05.8854|Info|  Settimeout: id:33, (128) ms
2015-09-05 18:14:05.8854|Info|  Settimeout: id:34, (64) ms
2015-09-05 18:14:05.9484|Info|  Settimeout: id:35, (1) ms
2015-09-05 18:14:05.9484|Info|      Encerrado timer: id:27, (18:14:05.9494)
2015-09-05 18:14:05.9484|Info|      Executando timer: id:30, (18:14:05.9494)
2015-09-05 18:14:05.9484|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.9484|Info|  Settimeout: id:36, (92) ms
2015-09-05 18:14:05.9484|Info|      Encerrado timer: id:30, (18:14:05.9524)
2015-09-05 18:14:05.9484|Info|      Executando timer: id:35, (18:14:05.9524)
2015-09-05 18:14:05.9484|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 18:14:05.9484|Info|  Settimeout: id:37, (13) ms
2015-09-05 18:14:05.9484|Info|      Encerrado timer: id:35, (18:14:05.9554)
2015-09-05 18:14:05.9484|Info|      Executando timer: id:34, (18:14:05.9564)
2015-09-05 18:14:05.9484|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:05.9484|Info|  Settimeout: id:38, (53) ms
2015-09-05 18:14:05.9594|Info|      Encerrado timer: id:34, (18:14:05.9594)
2015-09-05 18:14:05.9594|Info|      Executando timer: id:37, (18:14:05.9694)
2015-09-05 18:14:05.9594|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:05.9594|Info|  Settimeout: id:39, (64) ms
2015-09-05 18:14:05.9594|Info|  Settimeout: id:40, (32) ms
2015-09-05 18:14:05.9594|Info|  Settimeout: id:41, (128) ms
2015-09-05 18:14:05.9774|Info|      Encerrado timer: id:37, (18:14:05.9774)
2015-09-05 18:14:06.0065|Info|      Executando timer: id:40, (18:14:06.0065)
2015-09-05 18:14:06.0065|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:06.0065|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:06.0065|Info|      Encerrado timer: id:40, (18:14:06.0095)
2015-09-05 18:14:06.0065|Info|      Executando timer: id:38, (18:14:06.0135)
2015-09-05 18:14:06.0065|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:06.0065|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:06.0065|Info|      Encerrado timer: id:38, (18:14:06.0155)
2015-09-05 18:14:06.0445|Info|      Executando timer: id:36, (18:14:06.0445)
2015-09-05 18:14:06.0445|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:06.0445|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:06.0445|Info|      Encerrado timer: id:36, (18:14:06.0465)
2015-09-05 18:14:06.1065|Info|      Executando timer: id:41, (18:14:06.1065)
2015-09-05 18:14:06.1065|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:06.1065|Info|  Settimeout: id:42, (13) ms
2015-09-05 18:14:06.1065|Info|      Encerrado timer: id:41, (18:14:06.1095)
2015-09-05 18:14:06.1235|Info|      Executando timer: id:42, (18:14:06.1235)
2015-09-05 18:14:06.1235|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.1235|Info|  Settimeout: id:43, (32) ms
2015-09-05 18:14:06.1235|Info|  Settimeout: id:44, (62) ms
2015-09-05 18:14:06.1886|Info|  Settimeout: id:45, (64) ms
2015-09-05 18:14:06.1886|Info|      Encerrado timer: id:42, (18:14:06.1896)
2015-09-05 18:14:06.2546|Info|      Executando timer: id:45, (18:14:06.2546)
2015-09-05 18:14:06.2546|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 18:14:06.2566|Info|  Settimeout: id:46, (13) ms
2015-09-05 18:14:06.2566|Info|      Encerrado timer: id:45, (18:14:06.2576)
2015-09-05 18:14:06.2566|Info|      Executando timer: id:46, (18:14:06.2716)
2015-09-05 18:14:06.2726|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.2726|Info|  Settimeout: id:47, (1) ms
2015-09-05 18:14:06.2726|Info|  Settimeout: id:48, (32) ms
2015-09-05 18:14:06.2726|Info|      Encerrado timer: id:46, (18:14:06.2787)
2015-09-05 18:14:06.2726|Info|      Executando timer: id:47, (18:14:06.2797)
2015-09-05 18:14:06.2726|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:06.2726|Info|      Encerrado timer: id:47, (18:14:06.2807)
2015-09-05 18:14:06.3117|Info|      Executando timer: id:48, (18:14:06.3117)
2015-09-05 18:14:06.3117|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:06.3117|Info|  Settimeout: id:49, (13) ms
2015-09-05 18:14:06.3117|Info|      Encerrado timer: id:48, (18:14:06.3147)
2015-09-05 18:14:06.3287|Info|      Executando timer: id:49, (18:14:06.3287)
2015-09-05 18:14:06.3287|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.3287|Info|  Settimeout: id:50, (1) ms
2015-09-05 18:14:06.3287|Info|  Settimeout: id:51, (32) ms
2015-09-05 18:14:06.3287|Info|      Encerrado timer: id:49, (18:14:06.3317)
2015-09-05 18:14:06.3287|Info|      Executando timer: id:50, (18:14:06.3337)
2015-09-05 18:14:06.3287|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:06.3347|Info|      Encerrado timer: id:50, (18:14:06.3347)
2015-09-05 18:14:06.3647|Info|      Executando timer: id:51, (18:14:06.3647)
2015-09-05 18:14:06.3647|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:14:06.3657|Info|  Settimeout: id:52, (13) ms
2015-09-05 18:14:06.3657|Info|      Encerrado timer: id:51, (18:14:06.3667)
2015-09-05 18:14:06.3657|Info|      Executando timer: id:52, (18:14:06.3807)
2015-09-05 18:14:06.3657|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.3817|Info|  Settimeout: id:53, (1) ms
2015-09-05 18:14:06.3817|Info|  Settimeout: id:54, (32) ms
2015-09-05 18:14:06.3817|Info|      Encerrado timer: id:52, (18:14:06.3847)
2015-09-05 18:14:06.4178|Info|      Executando timer: id:54, (18:14:06.4178)
2015-09-05 18:14:06.4178|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:06.4178|Info|  Settimeout: id:55, (13) ms
2015-09-05 18:14:06.4178|Info|      Encerrado timer: id:54, (18:14:06.4218)
2015-09-05 18:14:06.4348|Info|      Executando timer: id:55, (18:14:06.4348)
2015-09-05 18:14:06.4348|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.4348|Info|  Settimeout: id:56, (32) ms
2015-09-05 18:14:06.4348|Info|  Settimeout: id:57, (1) ms
2015-09-05 18:14:06.4348|Info|  Settimeout: id:58, (64) ms
2015-09-05 18:14:06.4348|Info|      Encerrado timer: id:55, (18:14:06.4408)
2015-09-05 18:14:06.4348|Info|      Executando timer: id:57, (18:14:06.4418)
2015-09-05 18:14:06.4348|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 18:14:06.4438|Info|      Encerrado timer: id:57, (18:14:06.4438)
2015-09-05 18:14:06.4718|Info|      Executando timer: id:56, (18:14:06.4718)
2015-09-05 18:14:06.4718|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:06.4718|Info|      Encerrado timer: id:56, (18:14:06.4738)
2015-09-05 18:14:06.5058|Info|      Executando timer: id:58, (18:14:06.5058)
2015-09-05 18:14:06.5058|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:06.5068|Info|  Settimeout: id:59, (13) ms
2015-09-05 18:14:06.5068|Info|      Encerrado timer: id:58, (18:14:06.5078)
2015-09-05 18:14:06.5218|Info|      Executando timer: id:59, (18:14:06.5218)
2015-09-05 18:14:06.5218|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.5218|Info|  Settimeout: id:60, (32) ms
2015-09-05 18:14:06.5218|Info|  Settimeout: id:61, (64) ms
2015-09-05 18:14:06.5218|Info|      Encerrado timer: id:59, (18:14:06.5258)
2015-09-05 18:14:06.5569|Info|      Executando timer: id:60, (18:14:06.5569)
2015-09-05 18:14:06.5569|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:06.5569|Info|      Encerrado timer: id:60, (18:14:06.5619)
2015-09-05 18:14:06.5899|Info|      Executando timer: id:61, (18:14:06.5899)
2015-09-05 18:14:06.5899|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:14:06.5899|Info|  Settimeout: id:62, (13) ms
2015-09-05 18:14:06.5899|Info|      Encerrado timer: id:61, (18:14:06.5929)
2015-09-05 18:14:06.6069|Info|      Executando timer: id:62, (18:14:06.6069)
2015-09-05 18:14:06.6069|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:06.6069|Info|  Settimeout: id:63, (32) ms
2015-09-05 18:14:06.6069|Info|  Settimeout: id:64, (64) ms
2015-09-05 18:14:06.6069|Info|      Encerrado timer: id:62, (18:14:06.6109)
2015-09-05 18:14:06.6759|Info|      Executando timer: id:64, (18:14:06.6759)
2015-09-05 18:14:06.6759|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:06.6779|Info|  Settimeout: id:65, (13) ms
2015-09-05 18:14:06.6779|Info|      Encerrado timer: id:64, (18:14:06.6789)
2015-09-05 18:14:06.6779|Info|      Executando timer: id:65, (18:14:06.6929)
2015-09-05 18:14:06.6939|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:09.4959|Info|  Settimeout: id:66, (13) ms
2015-09-05 18:14:09.4959|Info|      Encerrado timer: id:65, (18:14:09.4969)
2015-09-05 18:14:09.5109|Info|      Executando timer: id:66, (18:14:09.5109)
2015-09-05 18:14:09.5109|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 18:14:09.7351|Info|----------------------------------------
2015-09-05 18:14:09.7351|Info|lodash.isNil
2015-09-05 18:14:09.7351|Info|----------------------------------------
2015-09-05 18:14:09.7351|Info| FAIL - should work with nulls from another realm
2015-09-05 18:14:09.7411|Info|    FAIL | OK | Died on test #1     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3: The best overloaded method match for 'Otimizacao.Javascript.JavascriptHelper.Escrever(string, object, object)' has some invalid arguments
2015-09-05 18:14:09.7411|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:14:10.0864|Info|  Settimeout: id:67, (32) ms
2015-09-05 18:14:10.0864|Info|      Encerrado timer: id:66, (18:14:10.0874)
2015-09-05 18:14:10.1204|Info|      Executando timer: id:67, (18:14:10.1204)
2015-09-05 18:14:10.1204|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 18:14:10.1204|Info|  Settimeout: id:68, (13) ms
2015-09-05 18:14:10.1204|Info|      Encerrado timer: id:67, (18:14:10.1234)
2015-09-05 18:14:10.1374|Info|      Executando timer: id:68, (18:14:10.1374)
2015-09-05 18:14:10.1374|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:10.3415|Info|  Settimeout: id:69, (32) ms
2015-09-05 18:14:10.3415|Info|  Settimeout: id:70, (64) ms
2015-09-05 18:14:10.3415|Info|      Encerrado timer: id:68, (18:14:10.3435)
2015-09-05 18:14:10.3756|Info|      Executando timer: id:69, (18:14:10.3756)
2015-09-05 18:14:10.3756|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:10.3756|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:10.3756|Info|      Encerrado timer: id:69, (18:14:10.3776)
2015-09-05 18:14:10.4086|Info|      Executando timer: id:70, (18:14:10.4086)
2015-09-05 18:14:10.4086|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 18:14:10.4086|Info|  Settimeout: id:71, (13) ms
2015-09-05 18:14:10.4086|Info|      Encerrado timer: id:70, (18:14:10.4116)
2015-09-05 18:14:10.4256|Info|      Executando timer: id:71, (18:14:10.4256)
2015-09-05 18:14:10.4256|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:10.4286|Info|  Settimeout: id:72, (32) ms
2015-09-05 18:14:10.4286|Info|  Settimeout: id:73, (64) ms
2015-09-05 18:14:10.4286|Info|      Encerrado timer: id:71, (18:14:10.4316)
2015-09-05 18:14:10.4626|Info|      Executando timer: id:72, (18:14:10.4626)
2015-09-05 18:14:10.4626|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:10.4626|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:10.4626|Info|      Encerrado timer: id:72, (18:14:10.4646)
2015-09-05 18:14:10.4956|Info|      Executando timer: id:73, (18:14:10.4956)
2015-09-05 18:14:10.4956|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 18:14:10.4956|Info|  Settimeout: id:74, (32) ms
2015-09-05 18:14:10.4956|Info|  Settimeout: id:75, (13) ms
2015-09-05 18:14:10.4956|Info|      Encerrado timer: id:73, (18:14:10.4997)
2015-09-05 18:14:10.5137|Info|      Executando timer: id:75, (18:14:10.5137)
2015-09-05 18:14:10.5137|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:10.5137|Info|  Settimeout: id:76, (32) ms
2015-09-05 18:14:10.5137|Info|  Settimeout: id:77, (64) ms
2015-09-05 18:14:10.5227|Info|      Encerrado timer: id:75, (18:14:10.5227)
2015-09-05 18:14:10.5227|Info|      Executando timer: id:74, (18:14:10.5317)
2015-09-05 18:14:10.5227|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:10.5227|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:10.5227|Info|      Encerrado timer: id:74, (18:14:10.5337)
2015-09-05 18:14:10.5547|Info|      Executando timer: id:76, (18:14:10.5547)
2015-09-05 18:14:10.5547|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:10.5547|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:10.5547|Info|      Encerrado timer: id:76, (18:14:10.5577)
2015-09-05 18:14:10.5877|Info|      Executando timer: id:77, (18:14:10.5877)
2015-09-05 18:14:10.5877|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:10.5877|Info|  Settimeout: id:78, (13) ms
2015-09-05 18:14:10.5877|Info|      Encerrado timer: id:77, (18:14:10.5917)
2015-09-05 18:14:10.6057|Info|      Executando timer: id:78, (18:14:10.6057)
2015-09-05 18:14:10.6057|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:10.6057|Info|  Settimeout: id:79, (64) ms
2015-09-05 18:14:10.6057|Info|      Encerrado timer: id:78, (18:14:10.6077)
2015-09-05 18:14:10.6728|Info|      Executando timer: id:79, (18:14:10.6728)
2015-09-05 18:14:10.6728|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:10.6728|Info|  Settimeout: id:80, (13) ms
2015-09-05 18:14:10.6728|Info|      Encerrado timer: id:79, (18:14:10.6768)
2015-09-05 18:14:10.6908|Info|      Executando timer: id:80, (18:14:10.6908)
2015-09-05 18:14:10.6908|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:10.6908|Info|  Settimeout: id:81, (32) ms
2015-09-05 18:14:10.7248|Info|  Settimeout: id:82, (32) ms
2015-09-05 18:14:10.7568|Info|  Settimeout: id:83, (32) ms
2015-09-05 18:14:10.7889|Info|  Settimeout: id:84, (32) ms
2015-09-05 18:14:10.8209|Info|  Settimeout: id:85, (32) ms
2015-09-05 18:14:10.8529|Info|  Settimeout: id:86, (32) ms
2015-09-05 18:14:10.8849|Info|  Settimeout: id:87, (32) ms
2015-09-05 18:14:10.9169|Info|  Settimeout: id:88, (32) ms
2015-09-05 18:14:10.9490|Info|  Settimeout: id:89, (32) ms
2015-09-05 18:14:10.9810|Info|  Settimeout: id:90, (32) ms
2015-09-05 18:14:11.0130|Info|  Settimeout: id:91, (1) ms
2015-09-05 18:14:11.0130|Info|      Encerrado timer: id:80, (18:14:11.0150)
2015-09-05 18:14:11.0130|Info|      Executando timer: id:91, (18:14:11.0170)
2015-09-05 18:14:11.0130|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:14:11.0130|Info|  Settimeout: id:92, (13) ms
2015-09-05 18:14:11.0130|Info|      Encerrado timer: id:91, (18:14:11.0200)
2015-09-05 18:14:11.0340|Info|      Executando timer: id:92, (18:14:11.0340)
2015-09-05 18:14:11.0340|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:11.0340|Info|  Settimeout: id:93, (32) ms
2015-09-05 18:14:11.0681|Info|  Settimeout: id:94, (32) ms
2015-09-05 18:14:11.1001|Info|  Settimeout: id:95, (32) ms
2015-09-05 18:14:11.1321|Info|  Settimeout: id:96, (32) ms
2015-09-05 18:14:11.1641|Info|  Settimeout: id:97, (32) ms
2015-09-05 18:14:11.1961|Info|  Settimeout: id:98, (32) ms
2015-09-05 18:14:11.2282|Info|  Settimeout: id:99, (32) ms
2015-09-05 18:14:11.2602|Info|  Settimeout: id:100, (32) ms
2015-09-05 18:14:11.2922|Info|  Settimeout: id:101, (32) ms
2015-09-05 18:14:11.3242|Info|  Settimeout: id:102, (32) ms
2015-09-05 18:14:11.3563|Info|  Settimeout: id:103, (1) ms
2015-09-05 18:14:11.3563|Info|      Encerrado timer: id:92, (18:14:11.3573)
2015-09-05 18:14:11.3563|Info|      Executando timer: id:103, (18:14:11.3593)
2015-09-05 18:14:11.3563|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:14:11.3563|Info|  Settimeout: id:104, (13) ms
2015-09-05 18:14:11.3563|Info|      Encerrado timer: id:103, (18:14:11.3623)
2015-09-05 18:14:11.3763|Info|      Executando timer: id:104, (18:14:11.3763)
2015-09-05 18:14:11.3763|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:11.3763|Info|  Settimeout: id:105, (31) ms
2015-09-05 18:14:11.3763|Info|  Settimeout: id:106, (128) ms
2015-09-05 18:14:11.3813|Info|      Encerrado timer: id:104, (18:14:11.3813)
2015-09-05 18:14:11.4123|Info|      Executando timer: id:105, (18:14:11.4123)
2015-09-05 18:14:11.4123|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:11.4123|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:11.4123|Info|      Encerrado timer: id:105, (18:14:11.4143)
2015-09-05 18:14:11.5104|Info|      Executando timer: id:106, (18:14:11.5104)
2015-09-05 18:14:11.5104|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:11.5104|Info|  Settimeout: id:107, (13) ms
2015-09-05 18:14:11.5104|Info|      Encerrado timer: id:106, (18:14:11.5124)
2015-09-05 18:14:11.5264|Info|      Executando timer: id:107, (18:14:11.5264)
2015-09-05 18:14:11.5264|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:11.5264|Info|  Settimeout: id:108, (32) ms
2015-09-05 18:14:11.5264|Info|  Settimeout: id:109, (64) ms
2015-09-05 18:14:11.5264|Info|  Settimeout: id:110, (64) ms
2015-09-05 18:14:11.5264|Info|  Settimeout: id:111, (256) ms
2015-09-05 18:14:11.5264|Info|      Encerrado timer: id:107, (18:14:11.5334)
2015-09-05 18:14:11.5624|Info|      Executando timer: id:108, (18:14:11.5624)
2015-09-05 18:14:11.5624|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:11.5624|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:11.5624|Info|      Encerrado timer: id:108, (18:14:11.5644)
2015-09-05 18:14:11.5964|Info|      Executando timer: id:109, (18:14:11.5964)
2015-09-05 18:14:11.5964|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:11.5964|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:11.5964|Info|      Encerrado timer: id:109, (18:14:11.5984)
2015-09-05 18:14:11.5964|Info|      Executando timer: id:110, (18:14:11.5994)
2015-09-05 18:14:11.5964|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:11.6004|Info|      Encerrado timer: id:110, (18:14:11.6004)
2015-09-05 18:14:11.7896|Info|      Executando timer: id:111, (18:14:11.7896)
2015-09-05 18:14:11.7896|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:11.7896|Info|  Settimeout: id:112, (13) ms
2015-09-05 18:14:11.7896|Info|      Encerrado timer: id:111, (18:14:11.7916)
2015-09-05 18:14:11.8056|Info|      Executando timer: id:112, (18:14:11.8056)
2015-09-05 18:14:11.8056|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:11.8056|Info|  Settimeout: id:113, (64) ms
2015-09-05 18:14:11.8056|Info|  Settimeout: id:114, (96) ms
2015-09-05 18:14:11.8056|Info|  Settimeout: id:115, (192) ms
2015-09-05 18:14:11.8056|Info|      Encerrado timer: id:112, (18:14:11.8106)
2015-09-05 18:14:11.8736|Info|      Executando timer: id:113, (18:14:11.8736)
2015-09-05 18:14:11.8736|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:11.8736|Info|      Encerrado timer: id:113, (18:14:11.8746)
2015-09-05 18:14:11.9067|Info|      Executando timer: id:114, (18:14:11.9067)
2015-09-05 18:14:11.9067|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 18:14:11.9067|Info|  Settimeout: id:116, (64) ms
2015-09-05 18:14:11.9067|Info|      Encerrado timer: id:114, (18:14:11.9087)
2015-09-05 18:14:11.9737|Info|      Executando timer: id:116, (18:14:11.9737)
2015-09-05 18:14:11.9737|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:11.9757|Info|      Encerrado timer: id:116, (18:14:11.9757)
2015-09-05 18:14:12.0037|Info|      Executando timer: id:115, (18:14:12.0037)
2015-09-05 18:14:12.0037|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 18:14:12.0077|Info|  Settimeout: id:117, (13) ms
2015-09-05 18:14:12.0077|Info|      Encerrado timer: id:115, (18:14:12.0087)
2015-09-05 18:14:12.0227|Info|      Executando timer: id:117, (18:14:12.0227)
2015-09-05 18:14:12.0227|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.0227|Info|  Settimeout: id:118, (0) ms
2015-09-05 18:14:12.0227|Info|  Settimeout: id:119, (32) ms
2015-09-05 18:14:12.0227|Info|      Encerrado timer: id:117, (18:14:12.0267)
2015-09-05 18:14:12.0227|Info|      Executando timer: id:118, (18:14:12.0267)
2015-09-05 18:14:12.0227|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.0227|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.0227|Info|      Encerrado timer: id:118, (18:14:12.0297)
2015-09-05 18:14:12.0598|Info|      Executando timer: id:119, (18:14:12.0598)
2015-09-05 18:14:12.0598|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:12.0598|Info|  Settimeout: id:120, (0) ms
2015-09-05 18:14:12.0598|Info|  Settimeout: id:121, (13) ms
2015-09-05 18:14:12.0598|Info|      Encerrado timer: id:119, (18:14:12.0628)
2015-09-05 18:14:12.0598|Info|      Executando timer: id:120, (18:14:12.0628)
2015-09-05 18:14:12.0598|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.0598|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.0598|Info|      Encerrado timer: id:120, (18:14:12.0658)
2015-09-05 18:14:12.0768|Info|      Executando timer: id:121, (18:14:12.0768)
2015-09-05 18:14:12.0768|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.0768|Info|  Settimeout: id:122, (32) ms
2015-09-05 18:14:12.0768|Info|  Settimeout: id:123, (64) ms
2015-09-05 18:14:12.0768|Info|      Encerrado timer: id:121, (18:14:12.0798)
2015-09-05 18:14:12.1118|Info|      Executando timer: id:122, (18:14:12.1118)
2015-09-05 18:14:12.1118|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.1118|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.1118|Info|      Encerrado timer: id:122, (18:14:12.1148)
2015-09-05 18:14:12.1448|Info|      Executando timer: id:123, (18:14:12.1448)
2015-09-05 18:14:12.1448|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:14:12.1468|Info|  Settimeout: id:124, (13) ms
2015-09-05 18:14:12.1468|Info|      Encerrado timer: id:123, (18:14:12.1478)
2015-09-05 18:14:12.1468|Info|      Executando timer: id:124, (18:14:12.1618)
2015-09-05 18:14:12.1628|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.1628|Info|  Settimeout: id:125, (32) ms
2015-09-05 18:14:12.1628|Info|  Settimeout: id:126, (256) ms
2015-09-05 18:14:12.1628|Info|      Encerrado timer: id:124, (18:14:12.1668)
2015-09-05 18:14:12.1979|Info|      Executando timer: id:125, (18:14:12.1979)
2015-09-05 18:14:12.1979|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.1979|Info|  Settimeout: id:127, (32) ms
2015-09-05 18:14:12.1979|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:14:12.1979|Info|      Encerrado timer: id:125, (18:14:12.2019)
2015-09-05 18:14:12.2339|Info|      Executando timer: id:127, (18:14:12.2339)
2015-09-05 18:14:12.2339|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.2339|Info|  Settimeout: id:128, (32) ms
2015-09-05 18:14:12.2419|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:14:12.2419|Info|      Encerrado timer: id:127, (18:14:12.2419)
2015-09-05 18:14:12.2739|Info|      Executando timer: id:128, (18:14:12.2739)
2015-09-05 18:14:12.2739|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.2739|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.2739|Info|      Encerrado timer: id:128, (18:14:12.2759)
2015-09-05 18:14:12.4240|Info|      Executando timer: id:126, (18:14:12.4240)
2015-09-05 18:14:12.4240|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:14:12.4240|Info|  Settimeout: id:129, (13) ms
2015-09-05 18:14:12.4240|Info|      Encerrado timer: id:126, (18:14:12.4270)
2015-09-05 18:14:12.4410|Info|      Executando timer: id:129, (18:14:12.4410)
2015-09-05 18:14:12.4410|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.4490|Info|  Settimeout: id:130, (32) ms
2015-09-05 18:14:12.4490|Info|  Settimeout: id:131, (64) ms
2015-09-05 18:14:12.4490|Info|      Encerrado timer: id:129, (18:14:12.4510)
2015-09-05 18:14:12.4831|Info|      Executando timer: id:130, (18:14:12.4831)
2015-09-05 18:14:12.4831|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.4831|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.4831|Info|      Encerrado timer: id:130, (18:14:12.4851)
2015-09-05 18:14:12.5161|Info|      Executando timer: id:131, (18:14:12.5161)
2015-09-05 18:14:12.5161|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:12.5161|Info|  Settimeout: id:132, (32) ms
2015-09-05 18:14:12.5161|Info|  Settimeout: id:133, (13) ms
2015-09-05 18:14:12.5161|Info|      Encerrado timer: id:131, (18:14:12.5201)
2015-09-05 18:14:12.5341|Info|      Executando timer: id:133, (18:14:12.5341)
2015-09-05 18:14:12.5341|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.5341|Info|  Settimeout: id:134, (32) ms
2015-09-05 18:14:12.5381|Info|  Settimeout: id:135, (64) ms
2015-09-05 18:14:12.5381|Info|      Encerrado timer: id:133, (18:14:12.5391)
2015-09-05 18:14:12.5381|Info|      Executando timer: id:132, (18:14:12.5521)
2015-09-05 18:14:12.5531|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.5531|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.5531|Info|      Encerrado timer: id:132, (18:14:12.5561)
2015-09-05 18:14:12.6041|Info|      Executando timer: id:135, (18:14:12.6041)
2015-09-05 18:14:12.6041|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:14:12.6041|Info|  Settimeout: id:136, (13) ms
2015-09-05 18:14:12.6041|Info|      Encerrado timer: id:135, (18:14:12.6081)
2015-09-05 18:14:12.6222|Info|      Executando timer: id:136, (18:14:12.6222)
2015-09-05 18:14:12.6222|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.6222|Info|  Settimeout: id:137, (32) ms
2015-09-05 18:14:12.6222|Info|  Settimeout: id:138, (32) ms
2015-09-05 18:14:12.6222|Info|  Settimeout: id:139, (64) ms
2015-09-05 18:14:12.6222|Info|      Encerrado timer: id:136, (18:14:12.6282)
2015-09-05 18:14:12.6602|Info|      Executando timer: id:138, (18:14:12.6602)
2015-09-05 18:14:12.6602|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:12.6602|Info|      Encerrado timer: id:138, (18:14:12.6622)
2015-09-05 18:14:12.6932|Info|      Executando timer: id:139, (18:14:12.6932)
2015-09-05 18:14:12.6942|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:12.6942|Info|  Settimeout: id:140, (13) ms
2015-09-05 18:14:12.6942|Info|      Encerrado timer: id:139, (18:14:12.6952)
2015-09-05 18:14:12.7092|Info|      Executando timer: id:140, (18:14:12.7092)
2015-09-05 18:14:12.7092|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.7092|Info|  Settimeout: id:141, (32) ms
2015-09-05 18:14:12.7092|Info|      Encerrado timer: id:140, (18:14:12.7122)
2015-09-05 18:14:12.7452|Info|      Executando timer: id:141, (18:14:12.7452)
2015-09-05 18:14:12.7452|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:12.7452|Info|  Settimeout: id:142, (13) ms
2015-09-05 18:14:12.7452|Info|      Encerrado timer: id:141, (18:14:12.7482)
2015-09-05 18:14:12.7623|Info|      Executando timer: id:142, (18:14:12.7623)
2015-09-05 18:14:12.7623|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.7623|Info|  Settimeout: id:143, (32) ms
2015-09-05 18:14:12.7623|Info|  Settimeout: id:144, (64) ms
2015-09-05 18:14:12.7623|Info|      Encerrado timer: id:142, (18:14:12.7663)
2015-09-05 18:14:12.7983|Info|      Executando timer: id:143, (18:14:12.7983)
2015-09-05 18:14:12.7983|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:12.7983|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.7983|Info|      Encerrado timer: id:143, (18:14:12.8003)
2015-09-05 18:14:12.8313|Info|      Executando timer: id:144, (18:14:12.8313)
2015-09-05 18:14:12.8313|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:14:12.8313|Info|  Settimeout: id:145, (13) ms
2015-09-05 18:14:12.8343|Info|      Encerrado timer: id:144, (18:14:12.8343)
2015-09-05 18:14:12.8343|Info|      Executando timer: id:145, (18:14:12.8483)
2015-09-05 18:14:12.8343|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:12.8503|Info|  Settimeout: id:146, (32) ms
2015-09-05 18:14:12.8503|Info|  Settimeout: id:147, (256) ms
2015-09-05 18:14:12.8503|Info|      Encerrado timer: id:145, (18:14:12.8533)
2015-09-05 18:14:12.8843|Info|      Executando timer: id:146, (18:14:12.8843)
2015-09-05 18:14:12.8843|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:12.8843|Info|  Settimeout: id:148, (32) ms
2015-09-05 18:14:12.8843|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:14:12.8843|Info|      Encerrado timer: id:146, (18:14:12.8893)
2015-09-05 18:14:12.9204|Info|      Executando timer: id:148, (18:14:12.9204)
2015-09-05 18:14:12.9204|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:12.9204|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:12.9204|Info|      Encerrado timer: id:148, (18:14:12.9234)
2015-09-05 18:14:13.1105|Info|      Executando timer: id:147, (18:14:13.1105)
2015-09-05 18:14:13.1105|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:14:13.1105|Info|  Settimeout: id:149, (13) ms
2015-09-05 18:14:13.1105|Info|      Encerrado timer: id:147, (18:14:13.1125)
2015-09-05 18:14:13.1265|Info|      Executando timer: id:149, (18:14:13.1265)
2015-09-05 18:14:13.1265|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:13.1335|Info|  Settimeout: id:150, (64) ms
2015-09-05 18:14:13.1335|Info|      Encerrado timer: id:149, (18:14:13.1345)
2015-09-05 18:14:13.1996|Info|      Executando timer: id:150, (18:14:13.1996)
2015-09-05 18:14:13.1996|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:13.1996|Info|  Settimeout: id:151, (13) ms
2015-09-05 18:14:13.1996|Info|      Encerrado timer: id:150, (18:14:13.2026)
2015-09-05 18:14:13.2166|Info|      Executando timer: id:151, (18:14:13.2166)
2015-09-05 18:14:13.2166|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:13.2166|Info|  Settimeout: id:152, (32) ms
2015-09-05 18:14:13.2166|Info|  Settimeout: id:153, (64) ms
2015-09-05 18:14:13.2166|Info|      Encerrado timer: id:151, (18:14:13.2246)
2015-09-05 18:14:13.2896|Info|      Executando timer: id:153, (18:14:13.2896)
2015-09-05 18:14:13.2896|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:14:13.2896|Info|  Settimeout: id:154, (13) ms
2015-09-05 18:14:13.2896|Info|      Encerrado timer: id:153, (18:14:13.2916)
2015-09-05 18:14:13.3056|Info|      Executando timer: id:154, (18:14:13.3056)
2015-09-05 18:14:13.3056|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:13.3056|Info|  Settimeout: id:155, (64) ms
2015-09-05 18:14:13.3056|Info|      Encerrado timer: id:154, (18:14:13.3086)
2015-09-05 18:14:13.3737|Info|      Executando timer: id:155, (18:14:13.3737)
2015-09-05 18:14:13.3737|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:13.3737|Info|  Settimeout: id:156, (13) ms
2015-09-05 18:14:13.3737|Info|      Encerrado timer: id:155, (18:14:13.3757)
2015-09-05 18:14:13.3897|Info|      Executando timer: id:156, (18:14:13.3897)
2015-09-05 18:14:13.3897|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:13.5498|Info|----------------------------------------
2015-09-05 18:14:13.5498|Info|    PASS: 4449  FAIL: 2  TOTAL: 4451
2015-09-05 18:14:13.5498|Info|    Finished in 8687 milliseconds.
2015-09-05 18:14:13.5498|Info|----------------------------------------
2015-09-05 18:14:13.5598|Info|      Encerrado timer: id:156, (18:14:13.5598)
2015-09-05 18:14:13.5598|Info|Encerrando os testes
2015-09-05 18:14:13.5598|Info|Total:4451, Sucesso: 4449, Falha: 2
2015-09-05 18:14:13.5598|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:14:13.5598|Info|FAILED: lodash.isNil: should work with nulls from another realm: Died on test #1     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3: The best overloaded method match for 'Otimizacao.Javascript.JavascriptHelper.Escrever(string, object, object)' has some invalid arguments, , Error: The best overloaded method match for 'Otimizacao.Javascript.JavascriptHelper.Escrever(string, object, object)' has some invalid arguments
    at Error (native)
    at console.log (Script Document:9:44)
    at Object.<anonymous> (V8Runtime:lodashTest:7766:11)
    at Object.Test.run (V8Runtime:Qunit:894:28)
    at V8Runtime:Qunit:1023:11
    at process (V8Runtime:Qunit:583:24)
    at Array.next (V8Runtime:Qunit:570:3)
    at Script Document [122]:1:24
2015-09-05 18:14:13.5598|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:14:47.9473|Info|Iniciando os testes
2015-09-05 18:14:48.4036|Info|  Settimeout: id:0, (13) ms
2015-09-05 18:14:48.4226|Info|      Executando timer: id:0, (18:14:48.4216)
2015-09-05 18:14:48.4426|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:48.4726|Info|  Settimeout: id:1, (13) ms
2015-09-05 18:14:48.4726|Info|      Encerrado timer: id:0, (18:14:48.4736)
2015-09-05 18:14:48.4876|Info|      Executando timer: id:1, (18:14:48.4876)
2015-09-05 18:14:48.4876|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:48.5907|Info|  Settimeout: id:2, (32) ms
2015-09-05 18:14:48.5907|Info|  Settimeout: id:3, (96) ms
2015-09-05 18:14:48.5907|Info|      Encerrado timer: id:1, (18:14:48.5937)
2015-09-05 18:14:48.6247|Info|      Executando timer: id:2, (18:14:48.6247)
2015-09-05 18:14:48.6247|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.6247|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:48.6247|Info|      Encerrado timer: id:2, (18:14:48.6267)
2015-09-05 18:14:48.6908|Info|      Executando timer: id:3, (18:14:48.6908)
2015-09-05 18:14:48.6908|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:48.6908|Info|  Settimeout: id:4, (13) ms
2015-09-05 18:14:48.6938|Info|      Encerrado timer: id:3, (18:14:48.6938)
2015-09-05 18:14:48.6938|Info|      Executando timer: id:4, (18:14:48.7078)
2015-09-05 18:14:48.6938|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:48.7108|Info|  Settimeout: id:5, (32) ms
2015-09-05 18:14:48.7108|Info|  Settimeout: id:6, (64) ms
2015-09-05 18:14:48.7108|Info|  Settimeout: id:7, (128) ms
2015-09-05 18:14:48.7108|Info|      Encerrado timer: id:4, (18:14:48.7138)
2015-09-05 18:14:48.7448|Info|      Executando timer: id:5, (18:14:48.7448)
2015-09-05 18:14:48.7448|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.7448|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:48.7448|Info|      Encerrado timer: id:5, (18:14:48.7478)
2015-09-05 18:14:48.7778|Info|      Executando timer: id:6, (18:14:48.7778)
2015-09-05 18:14:48.7778|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 18:14:48.7778|Info|  Settimeout: id:8, (32) ms
2015-09-05 18:14:48.7778|Info|      Encerrado timer: id:6, (18:14:48.7808)
2015-09-05 18:14:48.8139|Info|      Executando timer: id:8, (18:14:48.8139)
2015-09-05 18:14:48.8139|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.8139|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:48.8219|Info|      Encerrado timer: id:8, (18:14:48.8219)
2015-09-05 18:14:48.8429|Info|      Executando timer: id:7, (18:14:48.8429)
2015-09-05 18:14:48.8429|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 18:14:48.8429|Info|  Settimeout: id:9, (32) ms
2015-09-05 18:14:48.8429|Info|  Settimeout: id:10, (13) ms
2015-09-05 18:14:48.8429|Info|      Encerrado timer: id:7, (18:14:48.8469)
2015-09-05 18:14:48.8609|Info|      Executando timer: id:10, (18:14:48.8609)
2015-09-05 18:14:48.8609|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:48.8609|Info|  Settimeout: id:11, (32) ms
2015-09-05 18:14:48.8609|Info|  Settimeout: id:12, (64) ms
2015-09-05 18:14:48.8609|Info|      Encerrado timer: id:10, (18:14:48.8649)
2015-09-05 18:14:48.8789|Info|      Executando timer: id:9, (18:14:48.8789)
2015-09-05 18:14:48.8789|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.8789|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:48.8789|Info|      Encerrado timer: id:9, (18:14:48.8809)
2015-09-05 18:14:48.8969|Info|      Executando timer: id:11, (18:14:48.8969)
2015-09-05 18:14:48.8969|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.8969|Info|      Encerrado timer: id:11, (18:14:48.8979)
2015-09-05 18:14:48.9300|Info|      Executando timer: id:12, (18:14:48.9300)
2015-09-05 18:14:48.9300|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 18:14:48.9300|Info|  Settimeout: id:13, (32) ms
2015-09-05 18:14:48.9300|Info|  Settimeout: id:14, (13) ms
2015-09-05 18:14:48.9300|Info|      Encerrado timer: id:12, (18:14:48.9340)
2015-09-05 18:14:48.9480|Info|      Executando timer: id:14, (18:14:48.9480)
2015-09-05 18:14:48.9480|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:48.9480|Info|  Settimeout: id:15, (32) ms
2015-09-05 18:14:48.9480|Info|  Settimeout: id:16, (64) ms
2015-09-05 18:14:48.9480|Info|      Encerrado timer: id:14, (18:14:48.9520)
2015-09-05 18:14:48.9660|Info|      Executando timer: id:13, (18:14:48.9660)
2015-09-05 18:14:48.9660|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.9660|Info|      Encerrado timer: id:13, (18:14:48.9670)
2015-09-05 18:14:48.9840|Info|      Executando timer: id:15, (18:14:48.9840)
2015-09-05 18:14:48.9840|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:48.9840|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:48.9840|Info|      Encerrado timer: id:15, (18:14:48.9860)
2015-09-05 18:14:49.0170|Info|      Executando timer: id:16, (18:14:49.0170)
2015-09-05 18:14:49.0170|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:49.0170|Info|  Settimeout: id:17, (13) ms
2015-09-05 18:14:49.0170|Info|      Encerrado timer: id:16, (18:14:49.0200)
2015-09-05 18:14:49.0340|Info|      Executando timer: id:17, (18:14:49.0340)
2015-09-05 18:14:49.0340|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.0340|Info|  Settimeout: id:18, (32) ms
2015-09-05 18:14:49.0340|Info|  Settimeout: id:19, (32) ms
2015-09-05 18:14:49.0390|Info|  Settimeout: id:20, (32) ms
2015-09-05 18:14:49.0390|Info|  Settimeout: id:21, (64) ms
2015-09-05 18:14:49.0390|Info|      Encerrado timer: id:17, (18:14:49.0410)
2015-09-05 18:14:49.0701|Info|      Executando timer: id:18, (18:14:49.0701)
2015-09-05 18:14:49.0701|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.0701|Info|      Encerrado timer: id:18, (18:14:49.0721)
2015-09-05 18:14:49.0701|Info|      Executando timer: id:20, (18:14:49.0731)
2015-09-05 18:14:49.0701|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.0701|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:49.0701|Info|      Encerrado timer: id:20, (18:14:49.0761)
2015-09-05 18:14:49.0701|Info|      Executando timer: id:19, (18:14:49.0771)
2015-09-05 18:14:49.0701|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.0701|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:49.0701|Info|      Encerrado timer: id:19, (18:14:49.0801)
2015-09-05 18:14:49.1061|Info|      Executando timer: id:21, (18:14:49.1061)
2015-09-05 18:14:49.1061|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 18:14:49.1061|Info|  Settimeout: id:22, (32) ms
2015-09-05 18:14:49.1061|Info|  Settimeout: id:23, (13) ms
2015-09-05 18:14:49.1061|Info|      Encerrado timer: id:21, (18:14:49.1111)
2015-09-05 18:14:49.1251|Info|      Executando timer: id:23, (18:14:49.1251)
2015-09-05 18:14:49.1251|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.1321|Info|  Settimeout: id:24, (32) ms
2015-09-05 18:14:49.1321|Info|  Settimeout: id:25, (32) ms
2015-09-05 18:14:49.1321|Info|  Settimeout: id:26, (64) ms
2015-09-05 18:14:49.1321|Info|      Encerrado timer: id:23, (18:14:49.1351)
2015-09-05 18:14:49.1321|Info|      Executando timer: id:22, (18:14:49.1431)
2015-09-05 18:14:49.1321|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.1321|Info|      Encerrado timer: id:22, (18:14:49.1451)
2015-09-05 18:14:49.1661|Info|      Executando timer: id:24, (18:14:49.1661)
2015-09-05 18:14:49.1661|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.1661|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:49.1661|Info|      Encerrado timer: id:24, (18:14:49.1691)
2015-09-05 18:14:49.1661|Info|      Executando timer: id:25, (18:14:49.1701)
2015-09-05 18:14:49.1661|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.1661|Info|      Encerrado timer: id:25, (18:14:49.1721)
2015-09-05 18:14:49.2001|Info|      Executando timer: id:26, (18:14:49.2001)
2015-09-05 18:14:49.2001|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 18:14:49.2001|Info|  Settimeout: id:27, (13) ms
2015-09-05 18:14:49.2001|Info|      Encerrado timer: id:26, (18:14:49.2021)
2015-09-05 18:14:49.2162|Info|      Executando timer: id:27, (18:14:49.2162)
2015-09-05 18:14:49.2162|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.2162|Info|  Settimeout: id:28, (128) ms
2015-09-05 18:14:49.2162|Info|  Settimeout: id:29, (64) ms
2015-09-05 18:14:49.2162|Info|  Settimeout: id:30, (96) ms
2015-09-05 18:14:49.3462|Info|  Settimeout: id:31, (128) ms
2015-09-05 18:14:49.3462|Info|  Settimeout: id:32, (64) ms
2015-09-05 18:14:49.4743|Info|  Settimeout: id:33, (128) ms
2015-09-05 18:14:49.4753|Info|  Settimeout: id:34, (64) ms
2015-09-05 18:14:49.5384|Info|  Settimeout: id:35, (1) ms
2015-09-05 18:14:49.5384|Info|      Encerrado timer: id:27, (18:14:49.5394)
2015-09-05 18:14:49.5384|Info|      Executando timer: id:30, (18:14:49.5404)
2015-09-05 18:14:49.5384|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.5384|Info|  Settimeout: id:36, (92) ms
2015-09-05 18:14:49.5384|Info|      Encerrado timer: id:30, (18:14:49.5434)
2015-09-05 18:14:49.5384|Info|      Executando timer: id:34, (18:14:49.5434)
2015-09-05 18:14:49.5384|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.5384|Info|  Settimeout: id:37, (57) ms
2015-09-05 18:14:49.5384|Info|      Encerrado timer: id:34, (18:14:49.5464)
2015-09-05 18:14:49.5384|Info|      Executando timer: id:35, (18:14:49.5464)
2015-09-05 18:14:49.5384|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 18:14:49.5384|Info|  Settimeout: id:38, (13) ms
2015-09-05 18:14:49.5384|Info|      Encerrado timer: id:35, (18:14:49.5494)
2015-09-05 18:14:49.5634|Info|      Executando timer: id:38, (18:14:49.5634)
2015-09-05 18:14:49.5634|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.5634|Info|  Settimeout: id:39, (64) ms
2015-09-05 18:14:49.5634|Info|  Settimeout: id:40, (32) ms
2015-09-05 18:14:49.5634|Info|  Settimeout: id:41, (128) ms
2015-09-05 18:14:49.5694|Info|      Encerrado timer: id:38, (18:14:49.5694)
2015-09-05 18:14:49.6014|Info|      Executando timer: id:40, (18:14:49.6014)
2015-09-05 18:14:49.6014|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.6014|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:49.6014|Info|      Encerrado timer: id:40, (18:14:49.6044)
2015-09-05 18:14:49.6014|Info|      Executando timer: id:33, (18:14:49.6054)
2015-09-05 18:14:49.6014|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:49.6014|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:49.6014|Info|      Encerrado timer: id:33, (18:14:49.6084)
2015-09-05 18:14:49.6355|Info|      Executando timer: id:36, (18:14:49.6355)
2015-09-05 18:14:49.6355|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:49.6355|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:49.6355|Info|      Encerrado timer: id:36, (18:14:49.6385)
2015-09-05 18:14:49.6985|Info|      Executando timer: id:41, (18:14:49.6985)
2015-09-05 18:14:49.6985|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:49.6985|Info|  Settimeout: id:42, (13) ms
2015-09-05 18:14:49.6985|Info|      Encerrado timer: id:41, (18:14:49.7015)
2015-09-05 18:14:49.7155|Info|      Executando timer: id:42, (18:14:49.7155)
2015-09-05 18:14:49.7155|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.7155|Info|  Settimeout: id:43, (32) ms
2015-09-05 18:14:49.7155|Info|  Settimeout: id:44, (63) ms
2015-09-05 18:14:49.7806|Info|  Settimeout: id:45, (64) ms
2015-09-05 18:14:49.7806|Info|      Encerrado timer: id:42, (18:14:49.7816)
2015-09-05 18:14:49.8466|Info|      Executando timer: id:45, (18:14:49.8466)
2015-09-05 18:14:49.8466|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 18:14:49.8466|Info|  Settimeout: id:46, (13) ms
2015-09-05 18:14:49.8466|Info|      Encerrado timer: id:45, (18:14:49.8496)
2015-09-05 18:14:49.8636|Info|      Executando timer: id:46, (18:14:49.8636)
2015-09-05 18:14:49.8636|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.8686|Info|  Settimeout: id:47, (1) ms
2015-09-05 18:14:49.8686|Info|  Settimeout: id:48, (32) ms
2015-09-05 18:14:49.8686|Info|      Encerrado timer: id:46, (18:14:49.8696)
2015-09-05 18:14:49.8686|Info|      Executando timer: id:47, (18:14:49.8706)
2015-09-05 18:14:49.8686|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:49.8686|Info|      Encerrado timer: id:47, (18:14:49.8726)
2015-09-05 18:14:49.9026|Info|      Executando timer: id:48, (18:14:49.9026)
2015-09-05 18:14:49.9026|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:49.9026|Info|  Settimeout: id:49, (13) ms
2015-09-05 18:14:49.9026|Info|      Encerrado timer: id:48, (18:14:49.9046)
2015-09-05 18:14:49.9187|Info|      Executando timer: id:49, (18:14:49.9187)
2015-09-05 18:14:49.9187|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.9187|Info|  Settimeout: id:50, (1) ms
2015-09-05 18:14:49.9187|Info|  Settimeout: id:51, (32) ms
2015-09-05 18:14:49.9187|Info|      Encerrado timer: id:49, (18:14:49.9217)
2015-09-05 18:14:49.9187|Info|      Executando timer: id:50, (18:14:49.9227)
2015-09-05 18:14:49.9187|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:49.9187|Info|      Encerrado timer: id:50, (18:14:49.9247)
2015-09-05 18:14:49.9547|Info|      Executando timer: id:51, (18:14:49.9547)
2015-09-05 18:14:49.9547|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:14:49.9617|Info|  Settimeout: id:52, (13) ms
2015-09-05 18:14:49.9617|Info|      Encerrado timer: id:51, (18:14:49.9627)
2015-09-05 18:14:49.9767|Info|      Executando timer: id:52, (18:14:49.9767)
2015-09-05 18:14:49.9767|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:49.9767|Info|  Settimeout: id:53, (1) ms
2015-09-05 18:14:49.9767|Info|  Settimeout: id:54, (32) ms
2015-09-05 18:14:49.9767|Info|      Encerrado timer: id:52, (18:14:49.9817)
2015-09-05 18:14:50.0147|Info|      Executando timer: id:54, (18:14:50.0147)
2015-09-05 18:14:50.0147|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:50.0147|Info|  Settimeout: id:55, (13) ms
2015-09-05 18:14:50.0147|Info|      Encerrado timer: id:54, (18:14:50.0177)
2015-09-05 18:14:50.0317|Info|      Executando timer: id:55, (18:14:50.0317)
2015-09-05 18:14:50.0317|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:50.0317|Info|  Settimeout: id:56, (32) ms
2015-09-05 18:14:50.0317|Info|  Settimeout: id:57, (1) ms
2015-09-05 18:14:50.0317|Info|  Settimeout: id:58, (64) ms
2015-09-05 18:14:50.0317|Info|      Encerrado timer: id:55, (18:14:50.0357)
2015-09-05 18:14:50.0317|Info|      Executando timer: id:57, (18:14:50.0367)
2015-09-05 18:14:50.0317|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 18:14:50.0377|Info|      Encerrado timer: id:57, (18:14:50.0377)
2015-09-05 18:14:50.0668|Info|      Executando timer: id:56, (18:14:50.0668)
2015-09-05 18:14:50.0668|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:50.0668|Info|      Encerrado timer: id:56, (18:14:50.0678)
2015-09-05 18:14:50.1008|Info|      Executando timer: id:58, (18:14:50.1008)
2015-09-05 18:14:50.1008|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:50.1008|Info|  Settimeout: id:59, (13) ms
2015-09-05 18:14:50.1008|Info|      Encerrado timer: id:58, (18:14:50.1028)
2015-09-05 18:14:50.1168|Info|      Executando timer: id:59, (18:14:50.1168)
2015-09-05 18:14:50.1168|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:50.1168|Info|  Settimeout: id:60, (32) ms
2015-09-05 18:14:50.1168|Info|  Settimeout: id:61, (64) ms
2015-09-05 18:14:50.1168|Info|      Encerrado timer: id:59, (18:14:50.1208)
2015-09-05 18:14:50.1528|Info|      Executando timer: id:60, (18:14:50.1528)
2015-09-05 18:14:50.1528|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:14:50.1528|Info|      Encerrado timer: id:60, (18:14:50.1538)
2015-09-05 18:14:50.1858|Info|      Executando timer: id:61, (18:14:50.1858)
2015-09-05 18:14:50.1858|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:14:50.1858|Info|  Settimeout: id:62, (13) ms
2015-09-05 18:14:50.1858|Info|      Encerrado timer: id:61, (18:14:50.1878)
2015-09-05 18:14:50.2019|Info|      Executando timer: id:62, (18:14:50.2019)
2015-09-05 18:14:50.2019|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:50.2019|Info|  Settimeout: id:63, (32) ms
2015-09-05 18:14:50.2019|Info|  Settimeout: id:64, (64) ms
2015-09-05 18:14:50.2019|Info|      Encerrado timer: id:62, (18:14:50.2059)
2015-09-05 18:14:50.2709|Info|      Executando timer: id:64, (18:14:50.2709)
2015-09-05 18:14:50.2719|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:14:50.2719|Info|  Settimeout: id:65, (13) ms
2015-09-05 18:14:50.2719|Info|      Encerrado timer: id:64, (18:14:50.2749)
2015-09-05 18:14:50.2889|Info|      Executando timer: id:65, (18:14:50.2889)
2015-09-05 18:14:50.2889|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:53.0249|Info|  Settimeout: id:66, (13) ms
2015-09-05 18:14:53.0249|Info|      Encerrado timer: id:65, (18:14:53.0259)
2015-09-05 18:14:53.0399|Info|      Executando timer: id:66, (18:14:53.0399)
2015-09-05 18:14:53.0399|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 18:14:53.1469|Info|_._object=[undefined]
2015-09-05 18:14:53.1469|Info|----------------------------------------
2015-09-05 18:14:53.1469|Info|lodash.isNil
2015-09-05 18:14:53.1469|Info|----------------------------------------
2015-09-05 18:14:53.1469|Info| FAIL - should work with nulls from another realm
2015-09-05 18:14:53.1469|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:14:53.4962|Info|  Settimeout: id:67, (32) ms
2015-09-05 18:14:53.4962|Info|      Encerrado timer: id:66, (18:14:53.4972)
2015-09-05 18:14:53.5302|Info|      Executando timer: id:67, (18:14:53.5302)
2015-09-05 18:14:53.5302|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 18:14:53.5302|Info|  Settimeout: id:68, (13) ms
2015-09-05 18:14:53.5302|Info|      Encerrado timer: id:67, (18:14:53.5332)
2015-09-05 18:14:53.5472|Info|      Executando timer: id:68, (18:14:53.5472)
2015-09-05 18:14:53.5472|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:53.7374|Info|  Settimeout: id:69, (32) ms
2015-09-05 18:14:53.7374|Info|  Settimeout: id:70, (64) ms
2015-09-05 18:14:53.7414|Info|      Encerrado timer: id:68, (18:14:53.7414)
2015-09-05 18:14:53.7714|Info|      Executando timer: id:69, (18:14:53.7714)
2015-09-05 18:14:53.7724|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:53.7724|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:53.7724|Info|      Encerrado timer: id:69, (18:14:53.7744)
2015-09-05 18:14:53.8054|Info|      Executando timer: id:70, (18:14:53.8054)
2015-09-05 18:14:53.8054|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 18:14:53.8054|Info|  Settimeout: id:71, (13) ms
2015-09-05 18:14:53.8054|Info|      Encerrado timer: id:70, (18:14:53.8084)
2015-09-05 18:14:53.8224|Info|      Executando timer: id:71, (18:14:53.8224)
2015-09-05 18:14:53.8224|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:53.8224|Info|  Settimeout: id:72, (32) ms
2015-09-05 18:14:53.8224|Info|  Settimeout: id:73, (64) ms
2015-09-05 18:14:53.8224|Info|      Encerrado timer: id:71, (18:14:53.8274)
2015-09-05 18:14:53.8595|Info|      Executando timer: id:72, (18:14:53.8595)
2015-09-05 18:14:53.8595|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:53.8595|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:53.8595|Info|      Encerrado timer: id:72, (18:14:53.8615)
2015-09-05 18:14:53.8925|Info|      Executando timer: id:73, (18:14:53.8925)
2015-09-05 18:14:53.8925|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 18:14:53.8925|Info|  Settimeout: id:74, (32) ms
2015-09-05 18:14:53.8925|Info|  Settimeout: id:75, (13) ms
2015-09-05 18:14:53.8925|Info|      Encerrado timer: id:73, (18:14:53.8955)
2015-09-05 18:14:53.9095|Info|      Executando timer: id:75, (18:14:53.9095)
2015-09-05 18:14:53.9095|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:53.9145|Info|  Settimeout: id:76, (32) ms
2015-09-05 18:14:53.9145|Info|  Settimeout: id:77, (64) ms
2015-09-05 18:14:53.9145|Info|      Encerrado timer: id:75, (18:14:53.9155)
2015-09-05 18:14:53.9145|Info|      Executando timer: id:74, (18:14:53.9275)
2015-09-05 18:14:53.9285|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:53.9285|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:53.9285|Info|      Encerrado timer: id:74, (18:14:53.9305)
2015-09-05 18:14:53.9475|Info|      Executando timer: id:76, (18:14:53.9475)
2015-09-05 18:14:53.9475|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:53.9475|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:53.9475|Info|      Encerrado timer: id:76, (18:14:53.9505)
2015-09-05 18:14:53.9805|Info|      Executando timer: id:77, (18:14:53.9805)
2015-09-05 18:14:53.9805|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:53.9805|Info|  Settimeout: id:78, (13) ms
2015-09-05 18:14:53.9805|Info|      Encerrado timer: id:77, (18:14:53.9845)
2015-09-05 18:14:53.9986|Info|      Executando timer: id:78, (18:14:53.9986)
2015-09-05 18:14:53.9986|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:53.9986|Info|  Settimeout: id:79, (64) ms
2015-09-05 18:14:53.9986|Info|      Encerrado timer: id:78, (18:14:54.0006)
2015-09-05 18:14:54.0656|Info|      Executando timer: id:79, (18:14:54.0656)
2015-09-05 18:14:54.0656|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:54.0656|Info|  Settimeout: id:80, (13) ms
2015-09-05 18:14:54.0656|Info|      Encerrado timer: id:79, (18:14:54.0676)
2015-09-05 18:14:54.0816|Info|      Executando timer: id:80, (18:14:54.0816)
2015-09-05 18:14:54.0816|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:54.0816|Info|  Settimeout: id:81, (32) ms
2015-09-05 18:14:54.1156|Info|  Settimeout: id:82, (32) ms
2015-09-05 18:14:54.1477|Info|  Settimeout: id:83, (32) ms
2015-09-05 18:14:54.1797|Info|  Settimeout: id:84, (32) ms
2015-09-05 18:14:54.2117|Info|  Settimeout: id:85, (32) ms
2015-09-05 18:14:54.2437|Info|  Settimeout: id:86, (32) ms
2015-09-05 18:14:54.2758|Info|  Settimeout: id:87, (32) ms
2015-09-05 18:14:54.3078|Info|  Settimeout: id:88, (32) ms
2015-09-05 18:14:54.3398|Info|  Settimeout: id:89, (32) ms
2015-09-05 18:14:54.3718|Info|  Settimeout: id:90, (32) ms
2015-09-05 18:14:54.4038|Info|  Settimeout: id:91, (1) ms
2015-09-05 18:14:54.4038|Info|      Encerrado timer: id:80, (18:14:54.4048)
2015-09-05 18:14:54.4038|Info|      Executando timer: id:90, (18:14:54.4058)
2015-09-05 18:14:54.4038|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:54.4038|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:54.4038|Info|      Encerrado timer: id:90, (18:14:54.4088)
2015-09-05 18:14:54.4038|Info|      Executando timer: id:91, (18:14:54.4098)
2015-09-05 18:14:54.4038|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:14:54.4038|Info|  Settimeout: id:92, (13) ms
2015-09-05 18:14:54.4038|Info|      Encerrado timer: id:91, (18:14:54.4118)
2015-09-05 18:14:54.4259|Info|      Executando timer: id:92, (18:14:54.4259)
2015-09-05 18:14:54.4259|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:54.4259|Info|  Settimeout: id:93, (32) ms
2015-09-05 18:14:54.4599|Info|  Settimeout: id:94, (32) ms
2015-09-05 18:14:54.4919|Info|  Settimeout: id:95, (32) ms
2015-09-05 18:14:54.5239|Info|  Settimeout: id:96, (32) ms
2015-09-05 18:14:54.5560|Info|  Settimeout: id:97, (32) ms
2015-09-05 18:14:54.5880|Info|  Settimeout: id:98, (32) ms
2015-09-05 18:14:54.6200|Info|  Settimeout: id:99, (32) ms
2015-09-05 18:14:54.6520|Info|  Settimeout: id:100, (32) ms
2015-09-05 18:14:54.6840|Info|  Settimeout: id:101, (32) ms
2015-09-05 18:14:54.7161|Info|  Settimeout: id:102, (32) ms
2015-09-05 18:14:54.7481|Info|  Settimeout: id:103, (1) ms
2015-09-05 18:14:54.7481|Info|      Encerrado timer: id:92, (18:14:54.7491)
2015-09-05 18:14:54.7481|Info|      Executando timer: id:102, (18:14:54.7501)
2015-09-05 18:14:54.7481|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:54.7481|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:54.7481|Info|      Encerrado timer: id:102, (18:14:54.7521)
2015-09-05 18:14:54.7481|Info|      Executando timer: id:103, (18:14:54.7531)
2015-09-05 18:14:54.7481|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:14:54.7481|Info|  Settimeout: id:104, (13) ms
2015-09-05 18:14:54.7561|Info|      Encerrado timer: id:103, (18:14:54.7561)
2015-09-05 18:14:54.7561|Info|      Executando timer: id:104, (18:14:54.7701)
2015-09-05 18:14:54.7561|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:54.7721|Info|  Settimeout: id:105, (32) ms
2015-09-05 18:14:54.7721|Info|  Settimeout: id:106, (128) ms
2015-09-05 18:14:54.7721|Info|      Encerrado timer: id:104, (18:14:54.7741)
2015-09-05 18:14:54.8061|Info|      Executando timer: id:105, (18:14:54.8061)
2015-09-05 18:14:54.8061|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:54.8061|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:54.8061|Info|      Encerrado timer: id:105, (18:14:54.8091)
2015-09-05 18:14:54.9032|Info|      Executando timer: id:106, (18:14:54.9032)
2015-09-05 18:14:54.9032|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:54.9032|Info|  Settimeout: id:107, (13) ms
2015-09-05 18:14:54.9032|Info|      Encerrado timer: id:106, (18:14:54.9072)
2015-09-05 18:14:54.9212|Info|      Executando timer: id:107, (18:14:54.9212)
2015-09-05 18:14:54.9212|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:54.9212|Info|  Settimeout: id:108, (32) ms
2015-09-05 18:14:54.9212|Info|  Settimeout: id:109, (64) ms
2015-09-05 18:14:54.9212|Info|  Settimeout: id:110, (64) ms
2015-09-05 18:14:54.9282|Info|  Settimeout: id:111, (256) ms
2015-09-05 18:14:54.9282|Info|      Encerrado timer: id:107, (18:14:54.9292)
2015-09-05 18:14:54.9582|Info|      Executando timer: id:108, (18:14:54.9582)
2015-09-05 18:14:54.9592|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:54.9592|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:54.9592|Info|      Encerrado timer: id:108, (18:14:54.9612)
2015-09-05 18:14:54.9913|Info|      Executando timer: id:109, (18:14:54.9913)
2015-09-05 18:14:54.9913|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:54.9913|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:54.9913|Info|      Encerrado timer: id:109, (18:14:54.9943)
2015-09-05 18:14:54.9913|Info|      Executando timer: id:110, (18:14:54.9943)
2015-09-05 18:14:54.9913|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:54.9913|Info|      Encerrado timer: id:110, (18:14:54.9963)
2015-09-05 18:14:55.1864|Info|      Executando timer: id:111, (18:14:55.1864)
2015-09-05 18:14:55.1864|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 18:14:55.1864|Info|  Settimeout: id:112, (13) ms
2015-09-05 18:14:55.1864|Info|      Encerrado timer: id:111, (18:14:55.1884)
2015-09-05 18:14:55.2024|Info|      Executando timer: id:112, (18:14:55.2024)
2015-09-05 18:14:55.2024|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:55.2024|Info|  Settimeout: id:113, (64) ms
2015-09-05 18:14:55.2024|Info|  Settimeout: id:114, (96) ms
2015-09-05 18:14:55.2024|Info|  Settimeout: id:115, (192) ms
2015-09-05 18:14:55.2024|Info|      Encerrado timer: id:112, (18:14:55.2084)
2015-09-05 18:14:55.2705|Info|      Executando timer: id:113, (18:14:55.2705)
2015-09-05 18:14:55.2705|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:55.2725|Info|      Encerrado timer: id:113, (18:14:55.2725)
2015-09-05 18:14:55.3045|Info|      Executando timer: id:114, (18:14:55.3045)
2015-09-05 18:14:55.3045|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 18:14:55.3045|Info|  Settimeout: id:116, (64) ms
2015-09-05 18:14:55.3045|Info|      Encerrado timer: id:114, (18:14:55.3085)
2015-09-05 18:14:55.3735|Info|      Executando timer: id:116, (18:14:55.3735)
2015-09-05 18:14:55.3735|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:55.3735|Info|      Encerrado timer: id:116, (18:14:55.3755)
2015-09-05 18:14:55.4016|Info|      Executando timer: id:115, (18:14:55.4016)
2015-09-05 18:14:55.4016|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 18:14:55.4016|Info|  Settimeout: id:117, (13) ms
2015-09-05 18:14:55.4016|Info|      Encerrado timer: id:115, (18:14:55.4046)
2015-09-05 18:14:55.4186|Info|      Executando timer: id:117, (18:14:55.4186)
2015-09-05 18:14:55.4186|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:55.4186|Info|  Settimeout: id:118, (0) ms
2015-09-05 18:14:55.4186|Info|  Settimeout: id:119, (32) ms
2015-09-05 18:14:55.4186|Info|      Encerrado timer: id:117, (18:14:55.4236)
2015-09-05 18:14:55.4186|Info|      Executando timer: id:118, (18:14:55.4236)
2015-09-05 18:14:55.4186|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.4186|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:55.4186|Info|      Encerrado timer: id:118, (18:14:55.4266)
2015-09-05 18:14:55.4566|Info|      Executando timer: id:119, (18:14:55.4566)
2015-09-05 18:14:55.4566|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:55.4566|Info|  Settimeout: id:120, (0) ms
2015-09-05 18:14:55.4606|Info|  Settimeout: id:121, (13) ms
2015-09-05 18:14:55.4606|Info|      Encerrado timer: id:119, (18:14:55.4616)
2015-09-05 18:14:55.4606|Info|      Executando timer: id:120, (18:14:55.4626)
2015-09-05 18:14:55.4606|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.4606|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:55.4606|Info|      Encerrado timer: id:120, (18:14:55.4656)
2015-09-05 18:14:55.4756|Info|      Executando timer: id:121, (18:14:55.4756)
2015-09-05 18:14:55.4756|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:55.4756|Info|  Settimeout: id:122, (32) ms
2015-09-05 18:14:55.4756|Info|  Settimeout: id:123, (64) ms
2015-09-05 18:14:55.4756|Info|      Encerrado timer: id:121, (18:14:55.4806)
2015-09-05 18:14:55.5116|Info|      Executando timer: id:122, (18:14:55.5116)
2015-09-05 18:14:55.5116|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.5116|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:55.5116|Info|      Encerrado timer: id:122, (18:14:55.5146)
2015-09-05 18:14:55.5457|Info|      Executando timer: id:123, (18:14:55.5457)
2015-09-05 18:14:55.5457|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:14:55.5457|Info|  Settimeout: id:124, (13) ms
2015-09-05 18:14:55.5457|Info|      Encerrado timer: id:123, (18:14:55.5487)
2015-09-05 18:14:55.5627|Info|      Executando timer: id:124, (18:14:55.5627)
2015-09-05 18:14:55.5627|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:55.5627|Info|  Settimeout: id:125, (32) ms
2015-09-05 18:14:55.5627|Info|  Settimeout: id:126, (256) ms
2015-09-05 18:14:55.5627|Info|      Encerrado timer: id:124, (18:14:55.5657)
2015-09-05 18:14:55.5977|Info|      Executando timer: id:125, (18:14:55.5977)
2015-09-05 18:14:55.5977|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.5977|Info|  Settimeout: id:127, (32) ms
2015-09-05 18:14:55.6007|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:14:55.6007|Info|      Encerrado timer: id:125, (18:14:55.6017)
2015-09-05 18:14:55.6337|Info|      Executando timer: id:127, (18:14:55.6337)
2015-09-05 18:14:55.6337|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.6337|Info|  Settimeout: id:128, (32) ms
2015-09-05 18:14:55.6337|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:14:55.6337|Info|      Encerrado timer: id:127, (18:14:55.6377)
2015-09-05 18:14:55.6697|Info|      Executando timer: id:128, (18:14:55.6697)
2015-09-05 18:14:55.6697|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.6697|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:55.6697|Info|      Encerrado timer: id:128, (18:14:55.6717)
2015-09-05 18:14:55.8229|Info|      Executando timer: id:126, (18:14:55.8229)
2015-09-05 18:14:55.8229|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:14:55.8229|Info|  Settimeout: id:129, (13) ms
2015-09-05 18:14:55.8229|Info|      Encerrado timer: id:126, (18:14:55.8269)
2015-09-05 18:14:55.8409|Info|      Executando timer: id:129, (18:14:55.8409)
2015-09-05 18:14:55.8409|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:55.8509|Info|  Settimeout: id:130, (32) ms
2015-09-05 18:14:55.8509|Info|  Settimeout: id:131, (64) ms
2015-09-05 18:14:55.8509|Info|      Encerrado timer: id:129, (18:14:55.8529)
2015-09-05 18:14:55.8849|Info|      Executando timer: id:130, (18:14:55.8849)
2015-09-05 18:14:55.8849|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.8849|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:55.8849|Info|      Encerrado timer: id:130, (18:14:55.8879)
2015-09-05 18:14:55.9179|Info|      Executando timer: id:131, (18:14:55.9179)
2015-09-05 18:14:55.9179|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:55.9179|Info|  Settimeout: id:132, (32) ms
2015-09-05 18:14:55.9179|Info|  Settimeout: id:133, (13) ms
2015-09-05 18:14:55.9179|Info|      Encerrado timer: id:131, (18:14:55.9239)
2015-09-05 18:14:55.9369|Info|      Executando timer: id:133, (18:14:55.9369)
2015-09-05 18:14:55.9369|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:55.9369|Info|  Settimeout: id:134, (32) ms
2015-09-05 18:14:55.9369|Info|  Settimeout: id:135, (64) ms
2015-09-05 18:14:55.9369|Info|      Encerrado timer: id:133, (18:14:55.9429)
2015-09-05 18:14:55.9539|Info|      Executando timer: id:132, (18:14:55.9539)
2015-09-05 18:14:55.9539|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:55.9539|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:55.9539|Info|      Encerrado timer: id:132, (18:14:55.9559)
2015-09-05 18:14:56.0080|Info|      Executando timer: id:135, (18:14:56.0080)
2015-09-05 18:14:56.0080|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:14:56.0080|Info|  Settimeout: id:136, (13) ms
2015-09-05 18:14:56.0080|Info|      Encerrado timer: id:135, (18:14:56.0110)
2015-09-05 18:14:56.0240|Info|      Executando timer: id:136, (18:14:56.0240)
2015-09-05 18:14:56.0240|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.0240|Info|  Settimeout: id:137, (32) ms
2015-09-05 18:14:56.0240|Info|  Settimeout: id:138, (32) ms
2015-09-05 18:14:56.0240|Info|  Settimeout: id:139, (64) ms
2015-09-05 18:14:56.0240|Info|      Encerrado timer: id:136, (18:14:56.0290)
2015-09-05 18:14:56.0610|Info|      Executando timer: id:138, (18:14:56.0610)
2015-09-05 18:14:56.0610|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:14:56.0610|Info|      Encerrado timer: id:138, (18:14:56.0630)
2015-09-05 18:14:56.0940|Info|      Executando timer: id:139, (18:14:56.0940)
2015-09-05 18:14:56.0940|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:56.0940|Info|  Settimeout: id:140, (13) ms
2015-09-05 18:14:56.0940|Info|      Encerrado timer: id:139, (18:14:56.0960)
2015-09-05 18:14:56.1101|Info|      Executando timer: id:140, (18:14:56.1101)
2015-09-05 18:14:56.1101|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.1161|Info|  Settimeout: id:141, (32) ms
2015-09-05 18:14:56.1161|Info|      Encerrado timer: id:140, (18:14:56.1171)
2015-09-05 18:14:56.1491|Info|      Executando timer: id:141, (18:14:56.1491)
2015-09-05 18:14:56.1491|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:56.1491|Info|  Settimeout: id:142, (13) ms
2015-09-05 18:14:56.1491|Info|      Encerrado timer: id:141, (18:14:56.1521)
2015-09-05 18:14:56.1661|Info|      Executando timer: id:142, (18:14:56.1661)
2015-09-05 18:14:56.1661|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.1661|Info|  Settimeout: id:143, (32) ms
2015-09-05 18:14:56.1661|Info|  Settimeout: id:144, (64) ms
2015-09-05 18:14:56.1661|Info|      Encerrado timer: id:142, (18:14:56.1701)
2015-09-05 18:14:56.2021|Info|      Executando timer: id:143, (18:14:56.2021)
2015-09-05 18:14:56.2021|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:56.2021|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:56.2021|Info|      Encerrado timer: id:143, (18:14:56.2041)
2015-09-05 18:14:56.2351|Info|      Executando timer: id:144, (18:14:56.2351)
2015-09-05 18:14:56.2351|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:14:56.2351|Info|  Settimeout: id:145, (13) ms
2015-09-05 18:14:56.2351|Info|      Encerrado timer: id:144, (18:14:56.2371)
2015-09-05 18:14:56.2512|Info|      Executando timer: id:145, (18:14:56.2512)
2015-09-05 18:14:56.2512|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.2512|Info|  Settimeout: id:146, (32) ms
2015-09-05 18:14:56.2512|Info|  Settimeout: id:147, (256) ms
2015-09-05 18:14:56.2512|Info|      Encerrado timer: id:145, (18:14:56.2542)
2015-09-05 18:14:56.2862|Info|      Executando timer: id:146, (18:14:56.2862)
2015-09-05 18:14:56.2862|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:56.2882|Info|  Settimeout: id:148, (32) ms
2015-09-05 18:14:56.2882|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:14:56.2882|Info|      Encerrado timer: id:146, (18:14:56.2902)
2015-09-05 18:14:56.3222|Info|      Executando timer: id:148, (18:14:56.3222)
2015-09-05 18:14:56.3222|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:14:56.3222|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:14:56.3222|Info|      Encerrado timer: id:148, (18:14:56.3262)
2015-09-05 18:14:56.5113|Info|      Executando timer: id:147, (18:14:56.5113)
2015-09-05 18:14:56.5113|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:14:56.5113|Info|  Settimeout: id:149, (13) ms
2015-09-05 18:14:56.5113|Info|      Encerrado timer: id:147, (18:14:56.5133)
2015-09-05 18:14:56.5274|Info|      Executando timer: id:149, (18:14:56.5274)
2015-09-05 18:14:56.5274|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.5274|Info|  Settimeout: id:150, (64) ms
2015-09-05 18:14:56.5274|Info|      Encerrado timer: id:149, (18:14:56.5364)
2015-09-05 18:14:56.6014|Info|      Executando timer: id:150, (18:14:56.6014)
2015-09-05 18:14:56.6014|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:14:56.6014|Info|  Settimeout: id:151, (13) ms
2015-09-05 18:14:56.6014|Info|      Encerrado timer: id:150, (18:14:56.6034)
2015-09-05 18:14:56.6174|Info|      Executando timer: id:151, (18:14:56.6174)
2015-09-05 18:14:56.6174|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.6174|Info|  Settimeout: id:152, (32) ms
2015-09-05 18:14:56.6174|Info|  Settimeout: id:153, (64) ms
2015-09-05 18:14:56.6174|Info|      Encerrado timer: id:151, (18:14:56.6204)
2015-09-05 18:14:56.6855|Info|      Executando timer: id:153, (18:14:56.6855)
2015-09-05 18:14:56.6855|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:14:56.6855|Info|  Settimeout: id:154, (13) ms
2015-09-05 18:14:56.6855|Info|      Encerrado timer: id:153, (18:14:56.6895)
2015-09-05 18:14:56.7035|Info|      Executando timer: id:154, (18:14:56.7035)
2015-09-05 18:14:56.7035|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.7035|Info|  Settimeout: id:155, (64) ms
2015-09-05 18:14:56.7035|Info|      Encerrado timer: id:154, (18:14:56.7065)
2015-09-05 18:14:56.7715|Info|      Executando timer: id:155, (18:14:56.7715)
2015-09-05 18:14:56.7725|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:14:56.7725|Info|  Settimeout: id:156, (13) ms
2015-09-05 18:14:56.7725|Info|      Encerrado timer: id:155, (18:14:56.7755)
2015-09-05 18:14:56.7895|Info|      Executando timer: id:156, (18:14:56.7895)
2015-09-05 18:14:56.7895|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:14:56.9206|Info|----------------------------------------
2015-09-05 18:14:56.9206|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:14:56.9206|Info|    Finished in 8475 milliseconds.
2015-09-05 18:14:56.9206|Info|----------------------------------------
2015-09-05 18:14:56.9336|Info|      Encerrado timer: id:156, (18:14:56.9336)
2015-09-05 18:14:56.9336|Info|Encerrando os testes
2015-09-05 18:14:56.9336|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:14:56.9336|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:14:56.9336|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:26:35.1437|Info|Iniciando os testes
2015-09-05 18:26:35.6480|Info|  Settimeout: id:0, (13) ms
2015-09-05 18:26:35.6681|Info|      Executando timer: id:0, (18:26:35.6671)
2015-09-05 18:26:35.7001|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:35.7431|Info|  Settimeout: id:1, (13) ms
2015-09-05 18:26:35.7431|Info|      Encerrado timer: id:0, (18:26:35.7441)
2015-09-05 18:26:35.7581|Info|      Executando timer: id:1, (18:26:35.7581)
2015-09-05 18:26:35.7581|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:35.8562|Info|  Settimeout: id:2, (32) ms
2015-09-05 18:26:35.8562|Info|  Settimeout: id:3, (96) ms
2015-09-05 18:26:35.8562|Info|      Encerrado timer: id:1, (18:26:35.8602)
2015-09-05 18:26:35.8902|Info|      Executando timer: id:2, (18:26:35.8902)
2015-09-05 18:26:35.8902|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:35.8902|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:35.8902|Info|      Encerrado timer: id:2, (18:26:35.8942)
2015-09-05 18:26:35.9573|Info|      Executando timer: id:3, (18:26:35.9573)
2015-09-05 18:26:35.9573|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:26:35.9593|Info|  Settimeout: id:4, (13) ms
2015-09-05 18:26:35.9593|Info|      Encerrado timer: id:3, (18:26:35.9613)
2015-09-05 18:26:35.9753|Info|      Executando timer: id:4, (18:26:35.9753)
2015-09-05 18:26:35.9753|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:35.9753|Info|  Settimeout: id:5, (32) ms
2015-09-05 18:26:35.9753|Info|  Settimeout: id:6, (64) ms
2015-09-05 18:26:35.9753|Info|  Settimeout: id:7, (128) ms
2015-09-05 18:26:35.9753|Info|      Encerrado timer: id:4, (18:26:35.9813)
2015-09-05 18:26:36.0133|Info|      Executando timer: id:5, (18:26:36.0133)
2015-09-05 18:26:36.0133|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.0133|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.0133|Info|      Encerrado timer: id:5, (18:26:36.0153)
2015-09-05 18:26:36.0453|Info|      Executando timer: id:6, (18:26:36.0453)
2015-09-05 18:26:36.0453|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 18:26:36.0453|Info|  Settimeout: id:8, (32) ms
2015-09-05 18:26:36.0453|Info|      Encerrado timer: id:6, (18:26:36.0493)
2015-09-05 18:26:36.0814|Info|      Executando timer: id:8, (18:26:36.0814)
2015-09-05 18:26:36.0814|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.0814|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.0814|Info|      Encerrado timer: id:8, (18:26:36.0834)
2015-09-05 18:26:36.1104|Info|      Executando timer: id:7, (18:26:36.1104)
2015-09-05 18:26:36.1104|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 18:26:36.1104|Info|  Settimeout: id:9, (32) ms
2015-09-05 18:26:36.1104|Info|  Settimeout: id:10, (13) ms
2015-09-05 18:26:36.1104|Info|      Encerrado timer: id:7, (18:26:36.1144)
2015-09-05 18:26:36.1284|Info|      Executando timer: id:10, (18:26:36.1284)
2015-09-05 18:26:36.1284|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.1284|Info|  Settimeout: id:11, (32) ms
2015-09-05 18:26:36.1314|Info|  Settimeout: id:12, (64) ms
2015-09-05 18:26:36.1314|Info|      Encerrado timer: id:10, (18:26:36.1324)
2015-09-05 18:26:36.1314|Info|      Executando timer: id:9, (18:26:36.1464)
2015-09-05 18:26:36.1474|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.1474|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.1474|Info|      Encerrado timer: id:9, (18:26:36.1484)
2015-09-05 18:26:36.1644|Info|      Executando timer: id:11, (18:26:36.1644)
2015-09-05 18:26:36.1644|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.1644|Info|      Encerrado timer: id:11, (18:26:36.1664)
2015-09-05 18:26:36.1974|Info|      Executando timer: id:12, (18:26:36.1974)
2015-09-05 18:26:36.1974|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 18:26:36.1974|Info|  Settimeout: id:13, (32) ms
2015-09-05 18:26:36.1974|Info|  Settimeout: id:14, (13) ms
2015-09-05 18:26:36.1974|Info|      Encerrado timer: id:12, (18:26:36.2014)
2015-09-05 18:26:36.2154|Info|      Executando timer: id:14, (18:26:36.2154)
2015-09-05 18:26:36.2154|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.2154|Info|  Settimeout: id:15, (32) ms
2015-09-05 18:26:36.2154|Info|  Settimeout: id:16, (64) ms
2015-09-05 18:26:36.2154|Info|      Encerrado timer: id:14, (18:26:36.2195)
2015-09-05 18:26:36.2335|Info|      Executando timer: id:13, (18:26:36.2335)
2015-09-05 18:26:36.2335|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.2335|Info|      Encerrado timer: id:13, (18:26:36.2345)
2015-09-05 18:26:36.2515|Info|      Executando timer: id:15, (18:26:36.2515)
2015-09-05 18:26:36.2515|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.2515|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.2515|Info|      Encerrado timer: id:15, (18:26:36.2535)
2015-09-05 18:26:36.2845|Info|      Executando timer: id:16, (18:26:36.2845)
2015-09-05 18:26:36.2875|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:26:36.2875|Info|  Settimeout: id:17, (13) ms
2015-09-05 18:26:36.2875|Info|      Encerrado timer: id:16, (18:26:36.2895)
2015-09-05 18:26:36.3035|Info|      Executando timer: id:17, (18:26:36.3035)
2015-09-05 18:26:36.3035|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.3035|Info|  Settimeout: id:18, (32) ms
2015-09-05 18:26:36.3035|Info|  Settimeout: id:19, (32) ms
2015-09-05 18:26:36.3035|Info|  Settimeout: id:20, (32) ms
2015-09-05 18:26:36.3035|Info|  Settimeout: id:21, (64) ms
2015-09-05 18:26:36.3035|Info|      Encerrado timer: id:17, (18:26:36.3145)
2015-09-05 18:26:36.3425|Info|      Executando timer: id:18, (18:26:36.3425)
2015-09-05 18:26:36.3425|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.3425|Info|      Encerrado timer: id:18, (18:26:36.3455)
2015-09-05 18:26:36.3425|Info|      Executando timer: id:20, (18:26:36.3465)
2015-09-05 18:26:36.3425|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.3425|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.3425|Info|      Encerrado timer: id:20, (18:26:36.3495)
2015-09-05 18:26:36.3425|Info|      Executando timer: id:19, (18:26:36.3495)
2015-09-05 18:26:36.3505|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.3505|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.3505|Info|      Encerrado timer: id:19, (18:26:36.3525)
2015-09-05 18:26:36.3796|Info|      Executando timer: id:21, (18:26:36.3796)
2015-09-05 18:26:36.3796|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 18:26:36.3826|Info|  Settimeout: id:22, (32) ms
2015-09-05 18:26:36.3826|Info|  Settimeout: id:23, (13) ms
2015-09-05 18:26:36.3826|Info|      Encerrado timer: id:21, (18:26:36.3846)
2015-09-05 18:26:36.3986|Info|      Executando timer: id:23, (18:26:36.3986)
2015-09-05 18:26:36.3986|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.3986|Info|  Settimeout: id:24, (32) ms
2015-09-05 18:26:36.3986|Info|  Settimeout: id:25, (32) ms
2015-09-05 18:26:36.3986|Info|  Settimeout: id:26, (64) ms
2015-09-05 18:26:36.3986|Info|      Encerrado timer: id:23, (18:26:36.4106)
2015-09-05 18:26:36.4166|Info|      Executando timer: id:22, (18:26:36.4166)
2015-09-05 18:26:36.4166|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.4166|Info|      Encerrado timer: id:22, (18:26:36.4186)
2015-09-05 18:26:36.4406|Info|      Executando timer: id:24, (18:26:36.4406)
2015-09-05 18:26:36.4406|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.4406|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.4406|Info|      Encerrado timer: id:24, (18:26:36.4426)
2015-09-05 18:26:36.4436|Info|      Executando timer: id:25, (18:26:36.4436)
2015-09-05 18:26:36.4436|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.4436|Info|      Encerrado timer: id:25, (18:26:36.4456)
2015-09-05 18:26:36.4756|Info|      Executando timer: id:26, (18:26:36.4756)
2015-09-05 18:26:36.4756|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 18:26:36.4756|Info|  Settimeout: id:27, (13) ms
2015-09-05 18:26:36.4756|Info|      Encerrado timer: id:26, (18:26:36.4786)
2015-09-05 18:26:36.4927|Info|      Executando timer: id:27, (18:26:36.4927)
2015-09-05 18:26:36.4927|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.4927|Info|  Settimeout: id:28, (128) ms
2015-09-05 18:26:36.4927|Info|  Settimeout: id:29, (64) ms
2015-09-05 18:26:36.4927|Info|  Settimeout: id:30, (96) ms
2015-09-05 18:26:36.6247|Info|  Settimeout: id:31, (128) ms
2015-09-05 18:26:36.6247|Info|  Settimeout: id:32, (64) ms
2015-09-05 18:26:36.7528|Info|  Settimeout: id:33, (128) ms
2015-09-05 18:26:36.7528|Info|  Settimeout: id:34, (64) ms
2015-09-05 18:26:36.8149|Info|  Settimeout: id:35, (1) ms
2015-09-05 18:26:36.8149|Info|      Encerrado timer: id:27, (18:26:36.8159)
2015-09-05 18:26:36.8149|Info|      Executando timer: id:30, (18:26:36.8169)
2015-09-05 18:26:36.8149|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.8189|Info|  Settimeout: id:36, (92) ms
2015-09-05 18:26:36.8189|Info|      Encerrado timer: id:30, (18:26:36.8199)
2015-09-05 18:26:36.8189|Info|      Executando timer: id:35, (18:26:36.8199)
2015-09-05 18:26:36.8189|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 18:26:36.8189|Info|  Settimeout: id:37, (13) ms
2015-09-05 18:26:36.8189|Info|      Encerrado timer: id:35, (18:26:36.8289)
2015-09-05 18:26:36.8189|Info|      Executando timer: id:34, (18:26:36.8299)
2015-09-05 18:26:36.8189|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.8189|Info|  Settimeout: id:38, (47) ms
2015-09-05 18:26:36.8189|Info|      Encerrado timer: id:34, (18:26:36.8329)
2015-09-05 18:26:36.8429|Info|      Executando timer: id:37, (18:26:36.8429)
2015-09-05 18:26:36.8429|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.8429|Info|  Settimeout: id:39, (64) ms
2015-09-05 18:26:36.8429|Info|  Settimeout: id:40, (32) ms
2015-09-05 18:26:36.8429|Info|  Settimeout: id:41, (128) ms
2015-09-05 18:26:36.8429|Info|      Encerrado timer: id:37, (18:26:36.8479)
2015-09-05 18:26:36.8799|Info|      Executando timer: id:40, (18:26:36.8799)
2015-09-05 18:26:36.8799|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.8819|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.8819|Info|      Encerrado timer: id:40, (18:26:36.8829)
2015-09-05 18:26:36.8819|Info|      Executando timer: id:38, (18:26:36.8839)
2015-09-05 18:26:36.8819|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.8819|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.8819|Info|      Encerrado timer: id:38, (18:26:36.8859)
2015-09-05 18:26:36.9129|Info|      Executando timer: id:36, (18:26:36.9129)
2015-09-05 18:26:36.9129|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:36.9129|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:36.9129|Info|      Encerrado timer: id:36, (18:26:36.9159)
2015-09-05 18:26:36.9770|Info|      Executando timer: id:41, (18:26:36.9770)
2015-09-05 18:26:36.9770|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:26:36.9770|Info|  Settimeout: id:42, (13) ms
2015-09-05 18:26:36.9770|Info|      Encerrado timer: id:41, (18:26:36.9800)
2015-09-05 18:26:36.9940|Info|      Executando timer: id:42, (18:26:36.9940)
2015-09-05 18:26:36.9940|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:36.9940|Info|  Settimeout: id:43, (32) ms
2015-09-05 18:26:36.9940|Info|  Settimeout: id:44, (63) ms
2015-09-05 18:26:37.0600|Info|  Settimeout: id:45, (64) ms
2015-09-05 18:26:37.0600|Info|      Encerrado timer: id:42, (18:26:37.0610)
2015-09-05 18:26:37.1261|Info|      Executando timer: id:45, (18:26:37.1261)
2015-09-05 18:26:37.1261|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 18:26:37.1261|Info|  Settimeout: id:46, (13) ms
2015-09-05 18:26:37.1311|Info|      Encerrado timer: id:45, (18:26:37.1311)
2015-09-05 18:26:37.1311|Info|      Executando timer: id:46, (18:26:37.1451)
2015-09-05 18:26:37.1471|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:37.1471|Info|  Settimeout: id:47, (1) ms
2015-09-05 18:26:37.1471|Info|  Settimeout: id:48, (32) ms
2015-09-05 18:26:37.1471|Info|      Encerrado timer: id:46, (18:26:37.1621)
2015-09-05 18:26:37.1631|Info|      Executando timer: id:47, (18:26:37.1631)
2015-09-05 18:26:37.1631|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:26:37.1631|Info|      Encerrado timer: id:47, (18:26:37.1661)
2015-09-05 18:26:37.1951|Info|      Executando timer: id:48, (18:26:37.1951)
2015-09-05 18:26:37.1951|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:26:37.1951|Info|  Settimeout: id:49, (13) ms
2015-09-05 18:26:37.1951|Info|      Encerrado timer: id:48, (18:26:37.1981)
2015-09-05 18:26:37.2122|Info|      Executando timer: id:49, (18:26:37.2122)
2015-09-05 18:26:37.2122|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:37.2122|Info|  Settimeout: id:50, (1) ms
2015-09-05 18:26:37.2122|Info|  Settimeout: id:51, (32) ms
2015-09-05 18:26:37.2122|Info|      Encerrado timer: id:49, (18:26:37.2152)
2015-09-05 18:26:37.2122|Info|      Executando timer: id:50, (18:26:37.2162)
2015-09-05 18:26:37.2122|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:26:37.2122|Info|      Encerrado timer: id:50, (18:26:37.2182)
2015-09-05 18:26:37.2482|Info|      Executando timer: id:51, (18:26:37.2482)
2015-09-05 18:26:37.2482|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:26:37.2482|Info|  Settimeout: id:52, (13) ms
2015-09-05 18:26:37.2482|Info|      Encerrado timer: id:51, (18:26:37.2512)
2015-09-05 18:26:37.2652|Info|      Executando timer: id:52, (18:26:37.2652)
2015-09-05 18:26:37.2652|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:37.2652|Info|  Settimeout: id:53, (1) ms
2015-09-05 18:26:37.2652|Info|  Settimeout: id:54, (32) ms
2015-09-05 18:26:37.2652|Info|      Encerrado timer: id:52, (18:26:37.2692)
2015-09-05 18:26:37.3022|Info|      Executando timer: id:54, (18:26:37.3022)
2015-09-05 18:26:37.3032|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:26:37.3032|Info|  Settimeout: id:55, (13) ms
2015-09-05 18:26:37.3032|Info|      Encerrado timer: id:54, (18:26:37.3042)
2015-09-05 18:26:37.3032|Info|      Executando timer: id:55, (18:26:37.3182)
2015-09-05 18:26:37.3192|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:37.3192|Info|  Settimeout: id:56, (32) ms
2015-09-05 18:26:37.3192|Info|  Settimeout: id:57, (1) ms
2015-09-05 18:26:37.3192|Info|  Settimeout: id:58, (64) ms
2015-09-05 18:26:37.3192|Info|      Encerrado timer: id:55, (18:26:37.3232)
2015-09-05 18:26:37.3192|Info|      Executando timer: id:57, (18:26:37.3242)
2015-09-05 18:26:37.3192|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 18:26:37.3192|Info|      Encerrado timer: id:57, (18:26:37.3262)
2015-09-05 18:26:37.3543|Info|      Executando timer: id:56, (18:26:37.3543)
2015-09-05 18:26:37.3543|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:26:37.3543|Info|      Encerrado timer: id:56, (18:26:37.3553)
2015-09-05 18:26:37.3883|Info|      Executando timer: id:58, (18:26:37.3883)
2015-09-05 18:26:37.3883|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:26:37.3883|Info|  Settimeout: id:59, (13) ms
2015-09-05 18:26:37.3883|Info|      Encerrado timer: id:58, (18:26:37.3913)
2015-09-05 18:26:37.4053|Info|      Executando timer: id:59, (18:26:37.4053)
2015-09-05 18:26:37.4053|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:37.4053|Info|  Settimeout: id:60, (32) ms
2015-09-05 18:26:37.4053|Info|  Settimeout: id:61, (64) ms
2015-09-05 18:26:37.4053|Info|      Encerrado timer: id:59, (18:26:37.4113)
2015-09-05 18:26:37.4413|Info|      Executando timer: id:60, (18:26:37.4413)
2015-09-05 18:26:37.4413|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:26:37.4413|Info|      Encerrado timer: id:60, (18:26:37.4433)
2015-09-05 18:26:37.4763|Info|      Executando timer: id:61, (18:26:37.4763)
2015-09-05 18:26:37.4763|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:26:37.4763|Info|  Settimeout: id:62, (13) ms
2015-09-05 18:26:37.4763|Info|      Encerrado timer: id:61, (18:26:37.4803)
2015-09-05 18:26:37.4944|Info|      Executando timer: id:62, (18:26:37.4944)
2015-09-05 18:26:37.4944|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:37.4944|Info|  Settimeout: id:63, (32) ms
2015-09-05 18:26:37.4944|Info|  Settimeout: id:64, (64) ms
2015-09-05 18:26:37.4944|Info|      Encerrado timer: id:62, (18:26:37.4994)
2015-09-05 18:26:37.5644|Info|      Executando timer: id:64, (18:26:37.5644)
2015-09-05 18:26:37.5644|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:26:37.5644|Info|  Settimeout: id:65, (13) ms
2015-09-05 18:26:37.5644|Info|      Encerrado timer: id:64, (18:26:37.5674)
2015-09-05 18:26:37.5814|Info|      Executando timer: id:65, (18:26:37.5814)
2015-09-05 18:26:37.5814|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:40.8948|Info|  Settimeout: id:66, (13) ms
2015-09-05 18:26:40.8948|Info|      Encerrado timer: id:65, (18:26:40.8958)
2015-09-05 18:26:40.9098|Info|      Executando timer: id:66, (18:26:40.9098)
2015-09-05 18:26:40.9098|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 18:26:41.0319|Info|_._object=[undefined]
2015-09-05 18:26:41.0319|Info|----------------------------------------
2015-09-05 18:26:41.0319|Info|lodash.isNil
2015-09-05 18:26:41.0319|Info|----------------------------------------
2015-09-05 18:26:41.0319|Info| FAIL - should work with nulls from another realm
2015-09-05 18:26:41.0379|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:26:41.3941|Info|  Settimeout: id:67, (32) ms
2015-09-05 18:26:41.3941|Info|      Encerrado timer: id:66, (18:26:41.3951)
2015-09-05 18:26:41.4282|Info|      Executando timer: id:67, (18:26:41.4282)
2015-09-05 18:26:41.4282|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 18:26:41.4282|Info|  Settimeout: id:68, (13) ms
2015-09-05 18:26:41.4282|Info|      Encerrado timer: id:67, (18:26:41.4312)
2015-09-05 18:26:41.4452|Info|      Executando timer: id:68, (18:26:41.4452)
2015-09-05 18:26:41.4452|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:41.6503|Info|  Settimeout: id:69, (32) ms
2015-09-05 18:26:41.6503|Info|  Settimeout: id:70, (64) ms
2015-09-05 18:26:41.6503|Info|      Encerrado timer: id:68, (18:26:41.6523)
2015-09-05 18:26:41.6843|Info|      Executando timer: id:69, (18:26:41.6843)
2015-09-05 18:26:41.6843|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:41.6843|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:41.6843|Info|      Encerrado timer: id:69, (18:26:41.6863)
2015-09-05 18:26:41.7174|Info|      Executando timer: id:70, (18:26:41.7174)
2015-09-05 18:26:41.7174|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 18:26:41.7174|Info|  Settimeout: id:71, (13) ms
2015-09-05 18:26:41.7174|Info|      Encerrado timer: id:70, (18:26:41.7194)
2015-09-05 18:26:41.7334|Info|      Executando timer: id:71, (18:26:41.7334)
2015-09-05 18:26:41.7334|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:41.7334|Info|  Settimeout: id:72, (32) ms
2015-09-05 18:26:41.7334|Info|  Settimeout: id:73, (64) ms
2015-09-05 18:26:41.7334|Info|      Encerrado timer: id:71, (18:26:41.7384)
2015-09-05 18:26:41.7704|Info|      Executando timer: id:72, (18:26:41.7704)
2015-09-05 18:26:41.7704|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:41.7724|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:41.7724|Info|      Encerrado timer: id:72, (18:26:41.7734)
2015-09-05 18:26:41.8034|Info|      Executando timer: id:73, (18:26:41.8034)
2015-09-05 18:26:41.8034|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 18:26:41.8034|Info|  Settimeout: id:74, (32) ms
2015-09-05 18:26:41.8034|Info|  Settimeout: id:75, (13) ms
2015-09-05 18:26:41.8034|Info|      Encerrado timer: id:73, (18:26:41.8084)
2015-09-05 18:26:41.8224|Info|      Executando timer: id:75, (18:26:41.8224)
2015-09-05 18:26:41.8224|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:41.8224|Info|  Settimeout: id:76, (32) ms
2015-09-05 18:26:41.8224|Info|  Settimeout: id:77, (64) ms
2015-09-05 18:26:41.8224|Info|      Encerrado timer: id:75, (18:26:41.8324)
2015-09-05 18:26:41.8394|Info|      Executando timer: id:74, (18:26:41.8394)
2015-09-05 18:26:41.8394|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:41.8394|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:41.8394|Info|      Encerrado timer: id:74, (18:26:41.8424)
2015-09-05 18:26:41.8645|Info|      Executando timer: id:76, (18:26:41.8645)
2015-09-05 18:26:41.8655|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:41.8655|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:41.8655|Info|      Encerrado timer: id:76, (18:26:41.8675)
2015-09-05 18:26:41.8975|Info|      Executando timer: id:77, (18:26:41.8975)
2015-09-05 18:26:41.8975|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:26:41.8975|Info|  Settimeout: id:78, (13) ms
2015-09-05 18:26:41.8975|Info|      Encerrado timer: id:77, (18:26:41.9005)
2015-09-05 18:26:41.9145|Info|      Executando timer: id:78, (18:26:41.9145)
2015-09-05 18:26:41.9145|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:41.9145|Info|  Settimeout: id:79, (64) ms
2015-09-05 18:26:41.9145|Info|      Encerrado timer: id:78, (18:26:41.9175)
2015-09-05 18:26:41.9825|Info|      Executando timer: id:79, (18:26:41.9825)
2015-09-05 18:26:41.9825|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:26:41.9825|Info|  Settimeout: id:80, (13) ms
2015-09-05 18:26:41.9825|Info|      Encerrado timer: id:79, (18:26:41.9855)
2015-09-05 18:26:41.9996|Info|      Executando timer: id:80, (18:26:41.9996)
2015-09-05 18:26:41.9996|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:41.9996|Info|  Settimeout: id:81, (32) ms
2015-09-05 18:26:42.0336|Info|  Settimeout: id:82, (32) ms
2015-09-05 18:26:42.0656|Info|  Settimeout: id:83, (32) ms
2015-09-05 18:26:42.0976|Info|  Settimeout: id:84, (32) ms
2015-09-05 18:26:42.1297|Info|  Settimeout: id:85, (32) ms
2015-09-05 18:26:42.1617|Info|  Settimeout: id:86, (32) ms
2015-09-05 18:26:42.1937|Info|  Settimeout: id:87, (32) ms
2015-09-05 18:26:42.2257|Info|  Settimeout: id:88, (32) ms
2015-09-05 18:26:42.2577|Info|  Settimeout: id:89, (32) ms
2015-09-05 18:26:42.2898|Info|  Settimeout: id:90, (32) ms
2015-09-05 18:26:42.3218|Info|  Settimeout: id:91, (1) ms
2015-09-05 18:26:42.3218|Info|      Encerrado timer: id:80, (18:26:42.3228)
2015-09-05 18:26:42.3218|Info|      Executando timer: id:91, (18:26:42.3248)
2015-09-05 18:26:42.3218|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:26:42.3218|Info|  Settimeout: id:92, (13) ms
2015-09-05 18:26:42.3218|Info|      Encerrado timer: id:91, (18:26:42.3288)
2015-09-05 18:26:42.3428|Info|      Executando timer: id:92, (18:26:42.3428)
2015-09-05 18:26:42.3428|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:42.3428|Info|  Settimeout: id:93, (32) ms
2015-09-05 18:26:42.3778|Info|  Settimeout: id:94, (32) ms
2015-09-05 18:26:42.4098|Info|  Settimeout: id:95, (32) ms
2015-09-05 18:26:42.4419|Info|  Settimeout: id:96, (32) ms
2015-09-05 18:26:42.4739|Info|  Settimeout: id:97, (32) ms
2015-09-05 18:26:42.5059|Info|  Settimeout: id:98, (32) ms
2015-09-05 18:26:42.5379|Info|  Settimeout: id:99, (32) ms
2015-09-05 18:26:42.5700|Info|  Settimeout: id:100, (32) ms
2015-09-05 18:26:42.6020|Info|  Settimeout: id:101, (32) ms
2015-09-05 18:26:42.6340|Info|  Settimeout: id:102, (32) ms
2015-09-05 18:26:42.6650|Info|  Settimeout: id:103, (1) ms
2015-09-05 18:26:42.6650|Info|      Encerrado timer: id:92, (18:26:42.6660)
2015-09-05 18:26:42.6650|Info|      Executando timer: id:103, (18:26:42.6680)
2015-09-05 18:26:42.6650|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:26:42.6650|Info|  Settimeout: id:104, (13) ms
2015-09-05 18:26:42.6650|Info|      Encerrado timer: id:103, (18:26:42.6710)
2015-09-05 18:26:42.6650|Info|      Executando timer: id:102, (18:26:42.6720)
2015-09-05 18:26:42.6650|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:42.6650|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:42.6650|Info|      Encerrado timer: id:102, (18:26:42.6760)
2015-09-05 18:26:42.6850|Info|      Executando timer: id:104, (18:26:42.6850)
2015-09-05 18:26:42.6850|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:42.6850|Info|  Settimeout: id:105, (32) ms
2015-09-05 18:26:42.6850|Info|  Settimeout: id:106, (128) ms
2015-09-05 18:26:42.6850|Info|      Encerrado timer: id:104, (18:26:42.6900)
2015-09-05 18:26:42.7211|Info|      Executando timer: id:105, (18:26:42.7211)
2015-09-05 18:26:42.7211|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:42.7211|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:42.7211|Info|      Encerrado timer: id:105, (18:26:42.7231)
2015-09-05 18:26:42.8191|Info|      Executando timer: id:106, (18:26:42.8191)
2015-09-05 18:26:42.8191|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:26:42.8191|Info|  Settimeout: id:107, (13) ms
2015-09-05 18:26:42.8191|Info|      Encerrado timer: id:106, (18:26:42.8221)
2015-09-05 18:26:42.8362|Info|      Executando timer: id:107, (18:26:42.8362)
2015-09-05 18:26:42.8362|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:42.8362|Info|  Settimeout: id:108, (32) ms
2015-09-05 18:26:42.8362|Info|  Settimeout: id:109, (63) ms
2015-09-05 18:26:42.8362|Info|  Settimeout: id:110, (63) ms
2015-09-05 18:26:42.8362|Info|  Settimeout: id:111, (256) ms
2015-09-05 18:26:42.8362|Info|      Encerrado timer: id:107, (18:26:42.8422)
2015-09-05 18:26:42.8712|Info|      Executando timer: id:108, (18:26:42.8712)
2015-09-05 18:26:42.8712|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:42.8712|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:42.8712|Info|      Encerrado timer: id:108, (18:26:42.8732)
2015-09-05 18:26:42.9032|Info|      Executando timer: id:109, (18:26:42.9032)
2015-09-05 18:26:42.9032|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:42.9032|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:42.9032|Info|      Encerrado timer: id:109, (18:26:42.9062)
2015-09-05 18:26:42.9032|Info|      Executando timer: id:110, (18:26:42.9072)
2015-09-05 18:26:42.9032|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:42.9032|Info|      Encerrado timer: id:110, (18:26:42.9092)
2015-09-05 18:26:43.0983|Info|      Executando timer: id:111, (18:26:43.0983)
2015-09-05 18:26:43.0983|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 18:26:43.0983|Info|  Settimeout: id:112, (13) ms
2015-09-05 18:26:43.1003|Info|      Encerrado timer: id:111, (18:26:43.1003)
2015-09-05 18:26:43.1003|Info|      Executando timer: id:112, (18:26:43.1143)
2015-09-05 18:26:43.1003|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.1163|Info|  Settimeout: id:113, (64) ms
2015-09-05 18:26:43.1163|Info|  Settimeout: id:114, (96) ms
2015-09-05 18:26:43.1163|Info|  Settimeout: id:115, (192) ms
2015-09-05 18:26:43.1163|Info|      Encerrado timer: id:112, (18:26:43.1194)
2015-09-05 18:26:43.1824|Info|      Executando timer: id:113, (18:26:43.1824)
2015-09-05 18:26:43.1824|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:43.1824|Info|      Encerrado timer: id:113, (18:26:43.1844)
2015-09-05 18:26:43.2154|Info|      Executando timer: id:114, (18:26:43.2154)
2015-09-05 18:26:43.2154|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 18:26:43.2154|Info|  Settimeout: id:116, (64) ms
2015-09-05 18:26:43.2154|Info|      Encerrado timer: id:114, (18:26:43.2184)
2015-09-05 18:26:43.2835|Info|      Executando timer: id:116, (18:26:43.2835)
2015-09-05 18:26:43.2835|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:43.2835|Info|      Encerrado timer: id:116, (18:26:43.2855)
2015-09-05 18:26:43.3115|Info|      Executando timer: id:115, (18:26:43.3115)
2015-09-05 18:26:43.3115|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 18:26:43.3115|Info|  Settimeout: id:117, (13) ms
2015-09-05 18:26:43.3115|Info|      Encerrado timer: id:115, (18:26:43.3155)
2015-09-05 18:26:43.3295|Info|      Executando timer: id:117, (18:26:43.3295)
2015-09-05 18:26:43.3295|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.3295|Info|  Settimeout: id:118, (0) ms
2015-09-05 18:26:43.3295|Info|  Settimeout: id:119, (32) ms
2015-09-05 18:26:43.3295|Info|      Encerrado timer: id:117, (18:26:43.3335)
2015-09-05 18:26:43.3345|Info|      Executando timer: id:118, (18:26:43.3345)
2015-09-05 18:26:43.3345|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.3345|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:43.3345|Info|      Encerrado timer: id:118, (18:26:43.3365)
2015-09-05 18:26:43.3665|Info|      Executando timer: id:119, (18:26:43.3665)
2015-09-05 18:26:43.3665|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:26:43.3665|Info|  Settimeout: id:120, (0) ms
2015-09-05 18:26:43.3665|Info|  Settimeout: id:121, (13) ms
2015-09-05 18:26:43.3665|Info|      Encerrado timer: id:119, (18:26:43.3705)
2015-09-05 18:26:43.3665|Info|      Executando timer: id:120, (18:26:43.3715)
2015-09-05 18:26:43.3665|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.3665|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:43.3665|Info|      Encerrado timer: id:120, (18:26:43.3735)
2015-09-05 18:26:43.3845|Info|      Executando timer: id:121, (18:26:43.3845)
2015-09-05 18:26:43.3845|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.3845|Info|  Settimeout: id:122, (32) ms
2015-09-05 18:26:43.3845|Info|  Settimeout: id:123, (64) ms
2015-09-05 18:26:43.3845|Info|      Encerrado timer: id:121, (18:26:43.3885)
2015-09-05 18:26:43.4206|Info|      Executando timer: id:122, (18:26:43.4206)
2015-09-05 18:26:43.4206|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.4206|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:43.4206|Info|      Encerrado timer: id:122, (18:26:43.4226)
2015-09-05 18:26:43.4536|Info|      Executando timer: id:123, (18:26:43.4536)
2015-09-05 18:26:43.4536|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:26:43.4536|Info|  Settimeout: id:124, (13) ms
2015-09-05 18:26:43.4536|Info|      Encerrado timer: id:123, (18:26:43.4556)
2015-09-05 18:26:43.4696|Info|      Executando timer: id:124, (18:26:43.4696)
2015-09-05 18:26:43.4696|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.4696|Info|  Settimeout: id:125, (32) ms
2015-09-05 18:26:43.4696|Info|  Settimeout: id:126, (256) ms
2015-09-05 18:26:43.4696|Info|      Encerrado timer: id:124, (18:26:43.4726)
2015-09-05 18:26:43.5046|Info|      Executando timer: id:125, (18:26:43.5046)
2015-09-05 18:26:43.5046|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.5066|Info|  Settimeout: id:127, (32) ms
2015-09-05 18:26:43.5066|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:26:43.5066|Info|      Encerrado timer: id:125, (18:26:43.5086)
2015-09-05 18:26:43.5407|Info|      Executando timer: id:127, (18:26:43.5407)
2015-09-05 18:26:43.5407|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.5407|Info|  Settimeout: id:128, (32) ms
2015-09-05 18:26:43.5407|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:26:43.5407|Info|      Encerrado timer: id:127, (18:26:43.5457)
2015-09-05 18:26:43.5777|Info|      Executando timer: id:128, (18:26:43.5777)
2015-09-05 18:26:43.5777|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.5777|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:43.5777|Info|      Encerrado timer: id:128, (18:26:43.5817)
2015-09-05 18:26:43.7298|Info|      Executando timer: id:126, (18:26:43.7298)
2015-09-05 18:26:43.7298|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:26:43.7298|Info|  Settimeout: id:129, (13) ms
2015-09-05 18:26:43.7298|Info|      Encerrado timer: id:126, (18:26:43.7328)
2015-09-05 18:26:43.7468|Info|      Executando timer: id:129, (18:26:43.7468)
2015-09-05 18:26:43.7468|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.7468|Info|  Settimeout: id:130, (32) ms
2015-09-05 18:26:43.7568|Info|  Settimeout: id:131, (64) ms
2015-09-05 18:26:43.7568|Info|      Encerrado timer: id:129, (18:26:43.7578)
2015-09-05 18:26:43.7898|Info|      Executando timer: id:130, (18:26:43.7898)
2015-09-05 18:26:43.7898|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.7898|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:43.7898|Info|      Encerrado timer: id:130, (18:26:43.7918)
2015-09-05 18:26:43.8229|Info|      Executando timer: id:131, (18:26:43.8229)
2015-09-05 18:26:43.8229|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:26:43.8229|Info|  Settimeout: id:132, (32) ms
2015-09-05 18:26:43.8229|Info|  Settimeout: id:133, (13) ms
2015-09-05 18:26:43.8229|Info|      Encerrado timer: id:131, (18:26:43.8279)
2015-09-05 18:26:43.8419|Info|      Executando timer: id:133, (18:26:43.8419)
2015-09-05 18:26:43.8419|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.8419|Info|  Settimeout: id:134, (32) ms
2015-09-05 18:26:43.8419|Info|  Settimeout: id:135, (64) ms
2015-09-05 18:26:43.8419|Info|      Encerrado timer: id:133, (18:26:43.8479)
2015-09-05 18:26:43.8589|Info|      Executando timer: id:132, (18:26:43.8589)
2015-09-05 18:26:43.8589|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.8589|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:43.8589|Info|      Encerrado timer: id:132, (18:26:43.8619)
2015-09-05 18:26:43.9119|Info|      Executando timer: id:135, (18:26:43.9119)
2015-09-05 18:26:43.9129|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:26:43.9129|Info|  Settimeout: id:136, (13) ms
2015-09-05 18:26:43.9129|Info|      Encerrado timer: id:135, (18:26:43.9149)
2015-09-05 18:26:43.9289|Info|      Executando timer: id:136, (18:26:43.9289)
2015-09-05 18:26:43.9289|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:43.9289|Info|  Settimeout: id:137, (32) ms
2015-09-05 18:26:43.9289|Info|  Settimeout: id:138, (32) ms
2015-09-05 18:26:43.9289|Info|  Settimeout: id:139, (64) ms
2015-09-05 18:26:43.9289|Info|      Encerrado timer: id:136, (18:26:43.9329)
2015-09-05 18:26:43.9650|Info|      Executando timer: id:138, (18:26:43.9650)
2015-09-05 18:26:43.9650|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:26:43.9650|Info|      Encerrado timer: id:138, (18:26:43.9660)
2015-09-05 18:26:43.9980|Info|      Executando timer: id:139, (18:26:43.9980)
2015-09-05 18:26:43.9980|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:26:43.9980|Info|  Settimeout: id:140, (13) ms
2015-09-05 18:26:43.9980|Info|      Encerrado timer: id:139, (18:26:44.0010)
2015-09-05 18:26:44.0150|Info|      Executando timer: id:140, (18:26:44.0150)
2015-09-05 18:26:44.0150|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.0150|Info|  Settimeout: id:141, (32) ms
2015-09-05 18:26:44.0150|Info|      Encerrado timer: id:140, (18:26:44.0180)
2015-09-05 18:26:44.0510|Info|      Executando timer: id:141, (18:26:44.0510)
2015-09-05 18:26:44.0510|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:26:44.0540|Info|  Settimeout: id:142, (13) ms
2015-09-05 18:26:44.0540|Info|      Encerrado timer: id:141, (18:26:44.0550)
2015-09-05 18:26:44.0690|Info|      Executando timer: id:142, (18:26:44.0690)
2015-09-05 18:26:44.0690|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.0690|Info|  Settimeout: id:143, (32) ms
2015-09-05 18:26:44.0690|Info|  Settimeout: id:144, (64) ms
2015-09-05 18:26:44.0690|Info|      Encerrado timer: id:142, (18:26:44.0740)
2015-09-05 18:26:44.1061|Info|      Executando timer: id:143, (18:26:44.1061)
2015-09-05 18:26:44.1061|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:44.1061|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:44.1061|Info|      Encerrado timer: id:143, (18:26:44.1091)
2015-09-05 18:26:44.1391|Info|      Executando timer: id:144, (18:26:44.1391)
2015-09-05 18:26:44.1391|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:26:44.1391|Info|  Settimeout: id:145, (13) ms
2015-09-05 18:26:44.1391|Info|      Encerrado timer: id:144, (18:26:44.1421)
2015-09-05 18:26:44.1561|Info|      Executando timer: id:145, (18:26:44.1561)
2015-09-05 18:26:44.1561|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.1561|Info|  Settimeout: id:146, (32) ms
2015-09-05 18:26:44.1561|Info|  Settimeout: id:147, (256) ms
2015-09-05 18:26:44.1561|Info|      Encerrado timer: id:145, (18:26:44.1591)
2015-09-05 18:26:44.1911|Info|      Executando timer: id:146, (18:26:44.1911)
2015-09-05 18:26:44.1911|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:44.1911|Info|  Settimeout: id:148, (32) ms
2015-09-05 18:26:44.1951|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:26:44.1951|Info|      Encerrado timer: id:146, (18:26:44.1961)
2015-09-05 18:26:44.2271|Info|      Executando timer: id:148, (18:26:44.2271)
2015-09-05 18:26:44.2271|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:26:44.2271|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:26:44.2271|Info|      Encerrado timer: id:148, (18:26:44.2291)
2015-09-05 18:26:44.4163|Info|      Executando timer: id:147, (18:26:44.4163)
2015-09-05 18:26:44.4163|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:26:44.4163|Info|  Settimeout: id:149, (13) ms
2015-09-05 18:26:44.4163|Info|      Encerrado timer: id:147, (18:26:44.4203)
2015-09-05 18:26:44.4343|Info|      Executando timer: id:149, (18:26:44.4343)
2015-09-05 18:26:44.4343|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.4453|Info|  Settimeout: id:150, (64) ms
2015-09-05 18:26:44.4453|Info|      Encerrado timer: id:149, (18:26:44.4463)
2015-09-05 18:26:44.5113|Info|      Executando timer: id:150, (18:26:44.5113)
2015-09-05 18:26:44.5113|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:26:44.5113|Info|  Settimeout: id:151, (13) ms
2015-09-05 18:26:44.5113|Info|      Encerrado timer: id:150, (18:26:44.5143)
2015-09-05 18:26:44.5284|Info|      Executando timer: id:151, (18:26:44.5284)
2015-09-05 18:26:44.5284|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.5284|Info|  Settimeout: id:152, (32) ms
2015-09-05 18:26:44.5284|Info|  Settimeout: id:153, (64) ms
2015-09-05 18:26:44.5284|Info|      Encerrado timer: id:151, (18:26:44.5324)
2015-09-05 18:26:44.5964|Info|      Executando timer: id:153, (18:26:44.5964)
2015-09-05 18:26:44.5964|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:26:44.5964|Info|  Settimeout: id:154, (13) ms
2015-09-05 18:26:44.5964|Info|      Encerrado timer: id:153, (18:26:44.5984)
2015-09-05 18:26:44.6124|Info|      Executando timer: id:154, (18:26:44.6124)
2015-09-05 18:26:44.6124|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.6124|Info|  Settimeout: id:155, (64) ms
2015-09-05 18:26:44.6164|Info|      Encerrado timer: id:154, (18:26:44.6164)
2015-09-05 18:26:44.6815|Info|      Executando timer: id:155, (18:26:44.6815)
2015-09-05 18:26:44.6815|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:26:44.6815|Info|  Settimeout: id:156, (13) ms
2015-09-05 18:26:44.6815|Info|      Encerrado timer: id:155, (18:26:44.6835)
2015-09-05 18:26:44.6975|Info|      Executando timer: id:156, (18:26:44.6975)
2015-09-05 18:26:44.6975|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:26:44.8746|Info|----------------------------------------
2015-09-05 18:26:44.8746|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:26:44.8746|Info|    Finished in 9170 milliseconds.
2015-09-05 18:26:44.8816|Info|----------------------------------------
2015-09-05 18:26:44.8816|Info|      Encerrado timer: id:156, (18:26:44.8896)
2015-09-05 18:26:44.8816|Info|Encerrando os testes
2015-09-05 18:26:44.8816|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:26:44.8816|Info| 10 segundos para avaliar o individuo lodash.js
2015-09-05 18:26:44.8816|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:28:47.4647|Info|Iniciando os testes
2015-09-05 18:28:47.9390|Info|  Settimeout: id:0, (13) ms
2015-09-05 18:28:47.9590|Info|      Executando timer: id:0, (18:28:47.9580)
2015-09-05 18:28:47.9831|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.0141|Info|  Settimeout: id:1, (13) ms
2015-09-05 18:28:48.0141|Info|      Encerrado timer: id:0, (18:28:48.0161)
2015-09-05 18:28:48.0301|Info|      Executando timer: id:1, (18:28:48.0301)
2015-09-05 18:28:48.0301|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.1182|Info|  Settimeout: id:2, (32) ms
2015-09-05 18:28:48.1182|Info|  Settimeout: id:3, (96) ms
2015-09-05 18:28:48.1182|Info|      Encerrado timer: id:1, (18:28:48.1212)
2015-09-05 18:28:48.1522|Info|      Executando timer: id:2, (18:28:48.1522)
2015-09-05 18:28:48.1522|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.1522|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.1522|Info|      Encerrado timer: id:2, (18:28:48.1542)
2015-09-05 18:28:48.2182|Info|      Executando timer: id:3, (18:28:48.2182)
2015-09-05 18:28:48.2182|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:28:48.2182|Info|  Settimeout: id:4, (13) ms
2015-09-05 18:28:48.2182|Info|      Encerrado timer: id:3, (18:28:48.2212)
2015-09-05 18:28:48.2352|Info|      Executando timer: id:4, (18:28:48.2352)
2015-09-05 18:28:48.2352|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.2352|Info|  Settimeout: id:5, (32) ms
2015-09-05 18:28:48.2352|Info|  Settimeout: id:6, (64) ms
2015-09-05 18:28:48.2352|Info|  Settimeout: id:7, (128) ms
2015-09-05 18:28:48.2412|Info|      Encerrado timer: id:4, (18:28:48.2412)
2015-09-05 18:28:48.2723|Info|      Executando timer: id:5, (18:28:48.2723)
2015-09-05 18:28:48.2723|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.2723|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.2723|Info|      Encerrado timer: id:5, (18:28:48.2753)
2015-09-05 18:28:48.3053|Info|      Executando timer: id:6, (18:28:48.3053)
2015-09-05 18:28:48.3053|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 18:28:48.3053|Info|  Settimeout: id:8, (32) ms
2015-09-05 18:28:48.3053|Info|      Encerrado timer: id:6, (18:28:48.3073)
2015-09-05 18:28:48.3403|Info|      Executando timer: id:8, (18:28:48.3403)
2015-09-05 18:28:48.3403|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.3403|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.3403|Info|      Encerrado timer: id:8, (18:28:48.3423)
2015-09-05 18:28:48.3703|Info|      Executando timer: id:7, (18:28:48.3703)
2015-09-05 18:28:48.3703|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 18:28:48.3703|Info|  Settimeout: id:9, (32) ms
2015-09-05 18:28:48.3703|Info|  Settimeout: id:10, (13) ms
2015-09-05 18:28:48.3703|Info|      Encerrado timer: id:7, (18:28:48.3743)
2015-09-05 18:28:48.3883|Info|      Executando timer: id:10, (18:28:48.3883)
2015-09-05 18:28:48.3883|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.3883|Info|  Settimeout: id:11, (32) ms
2015-09-05 18:28:48.3883|Info|  Settimeout: id:12, (64) ms
2015-09-05 18:28:48.3883|Info|      Encerrado timer: id:10, (18:28:48.3924)
2015-09-05 18:28:48.4064|Info|      Executando timer: id:9, (18:28:48.4064)
2015-09-05 18:28:48.4064|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.4064|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.4064|Info|      Encerrado timer: id:9, (18:28:48.4084)
2015-09-05 18:28:48.4244|Info|      Executando timer: id:11, (18:28:48.4244)
2015-09-05 18:28:48.4244|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.4244|Info|      Encerrado timer: id:11, (18:28:48.4254)
2015-09-05 18:28:48.4574|Info|      Executando timer: id:12, (18:28:48.4574)
2015-09-05 18:28:48.4574|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 18:28:48.4654|Info|  Settimeout: id:13, (32) ms
2015-09-05 18:28:48.4654|Info|  Settimeout: id:14, (13) ms
2015-09-05 18:28:48.4654|Info|      Encerrado timer: id:12, (18:28:48.4674)
2015-09-05 18:28:48.4814|Info|      Executando timer: id:14, (18:28:48.4814)
2015-09-05 18:28:48.4814|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.4814|Info|  Settimeout: id:15, (32) ms
2015-09-05 18:28:48.4814|Info|  Settimeout: id:16, (64) ms
2015-09-05 18:28:48.4814|Info|      Encerrado timer: id:14, (18:28:48.4864)
2015-09-05 18:28:48.4994|Info|      Executando timer: id:13, (18:28:48.4994)
2015-09-05 18:28:48.4994|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.4994|Info|      Encerrado timer: id:13, (18:28:48.5014)
2015-09-05 18:28:48.5174|Info|      Executando timer: id:15, (18:28:48.5174)
2015-09-05 18:28:48.5174|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.5174|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.5174|Info|      Encerrado timer: id:15, (18:28:48.5204)
2015-09-05 18:28:48.5515|Info|      Executando timer: id:16, (18:28:48.5515)
2015-09-05 18:28:48.5535|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:28:48.5535|Info|  Settimeout: id:17, (13) ms
2015-09-05 18:28:48.5535|Info|      Encerrado timer: id:16, (18:28:48.5555)
2015-09-05 18:28:48.5695|Info|      Executando timer: id:17, (18:28:48.5695)
2015-09-05 18:28:48.5695|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.5695|Info|  Settimeout: id:18, (32) ms
2015-09-05 18:28:48.5695|Info|  Settimeout: id:19, (32) ms
2015-09-05 18:28:48.5695|Info|  Settimeout: id:20, (32) ms
2015-09-05 18:28:48.5695|Info|  Settimeout: id:21, (64) ms
2015-09-05 18:28:48.5695|Info|      Encerrado timer: id:17, (18:28:48.5745)
2015-09-05 18:28:48.6045|Info|      Executando timer: id:18, (18:28:48.6045)
2015-09-05 18:28:48.6045|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.6045|Info|      Encerrado timer: id:18, (18:28:48.6055)
2015-09-05 18:28:48.6045|Info|      Executando timer: id:20, (18:28:48.6065)
2015-09-05 18:28:48.6045|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.6045|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.6045|Info|      Encerrado timer: id:20, (18:28:48.6085)
2015-09-05 18:28:48.6045|Info|      Executando timer: id:19, (18:28:48.6095)
2015-09-05 18:28:48.6045|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.6045|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.6045|Info|      Encerrado timer: id:19, (18:28:48.6115)
2015-09-05 18:28:48.6395|Info|      Executando timer: id:21, (18:28:48.6395)
2015-09-05 18:28:48.6395|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 18:28:48.6395|Info|  Settimeout: id:22, (32) ms
2015-09-05 18:28:48.6395|Info|  Settimeout: id:23, (13) ms
2015-09-05 18:28:48.6395|Info|      Encerrado timer: id:21, (18:28:48.6425)
2015-09-05 18:28:48.6565|Info|      Executando timer: id:23, (18:28:48.6565)
2015-09-05 18:28:48.6565|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.6565|Info|  Settimeout: id:24, (32) ms
2015-09-05 18:28:48.6625|Info|  Settimeout: id:25, (32) ms
2015-09-05 18:28:48.6625|Info|  Settimeout: id:26, (64) ms
2015-09-05 18:28:48.6625|Info|      Encerrado timer: id:23, (18:28:48.6645)
2015-09-05 18:28:48.6625|Info|      Executando timer: id:22, (18:28:48.6746)
2015-09-05 18:28:48.6625|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.6625|Info|      Encerrado timer: id:22, (18:28:48.6756)
2015-09-05 18:28:48.6956|Info|      Executando timer: id:24, (18:28:48.6956)
2015-09-05 18:28:48.6956|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.6956|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:48.6956|Info|      Encerrado timer: id:24, (18:28:48.6986)
2015-09-05 18:28:48.6956|Info|      Executando timer: id:25, (18:28:48.6986)
2015-09-05 18:28:48.6956|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:48.6956|Info|      Encerrado timer: id:25, (18:28:48.7006)
2015-09-05 18:28:48.7296|Info|      Executando timer: id:26, (18:28:48.7296)
2015-09-05 18:28:48.7296|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 18:28:48.7296|Info|  Settimeout: id:27, (13) ms
2015-09-05 18:28:48.7296|Info|      Encerrado timer: id:26, (18:28:48.7326)
2015-09-05 18:28:48.7466|Info|      Executando timer: id:27, (18:28:48.7466)
2015-09-05 18:28:48.7466|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:48.7466|Info|  Settimeout: id:28, (128) ms
2015-09-05 18:28:48.7466|Info|  Settimeout: id:29, (64) ms
2015-09-05 18:28:48.7466|Info|  Settimeout: id:30, (96) ms
2015-09-05 18:28:48.8787|Info|  Settimeout: id:31, (128) ms
2015-09-05 18:28:48.8787|Info|  Settimeout: id:32, (64) ms
2015-09-05 18:28:49.0068|Info|  Settimeout: id:33, (128) ms
2015-09-05 18:28:49.0068|Info|  Settimeout: id:34, (64) ms
2015-09-05 18:28:49.0698|Info|  Settimeout: id:35, (1) ms
2015-09-05 18:28:49.0698|Info|      Encerrado timer: id:27, (18:28:49.0708)
2015-09-05 18:28:49.0698|Info|      Executando timer: id:30, (18:28:49.0718)
2015-09-05 18:28:49.0698|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:49.0698|Info|  Settimeout: id:36, (92) ms
2015-09-05 18:28:49.0698|Info|      Encerrado timer: id:30, (18:28:49.0748)
2015-09-05 18:28:49.0698|Info|      Executando timer: id:35, (18:28:49.0758)
2015-09-05 18:28:49.0698|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 18:28:49.0698|Info|  Settimeout: id:37, (13) ms
2015-09-05 18:28:49.0698|Info|      Encerrado timer: id:35, (18:28:49.0788)
2015-09-05 18:28:49.0698|Info|      Executando timer: id:34, (18:28:49.0798)
2015-09-05 18:28:49.0698|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:49.0698|Info|  Settimeout: id:38, (52) ms
2015-09-05 18:28:49.0878|Info|      Encerrado timer: id:34, (18:28:49.0878)
2015-09-05 18:28:49.0878|Info|      Executando timer: id:37, (18:28:49.0929)
2015-09-05 18:28:49.0878|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.0878|Info|  Settimeout: id:39, (64) ms
2015-09-05 18:28:49.0878|Info|  Settimeout: id:40, (32) ms
2015-09-05 18:28:49.0878|Info|  Settimeout: id:41, (128) ms
2015-09-05 18:28:49.0878|Info|      Encerrado timer: id:37, (18:28:49.0989)
2015-09-05 18:28:49.1309|Info|      Executando timer: id:40, (18:28:49.1309)
2015-09-05 18:28:49.1319|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:49.1319|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:49.1319|Info|      Encerrado timer: id:40, (18:28:49.1349)
2015-09-05 18:28:49.1319|Info|      Executando timer: id:33, (18:28:49.1369)
2015-09-05 18:28:49.1319|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:49.1319|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:49.1319|Info|      Encerrado timer: id:33, (18:28:49.1399)
2015-09-05 18:28:49.1679|Info|      Executando timer: id:36, (18:28:49.1679)
2015-09-05 18:28:49.1679|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:49.1679|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:49.1679|Info|      Encerrado timer: id:36, (18:28:49.1709)
2015-09-05 18:28:49.2279|Info|      Executando timer: id:41, (18:28:49.2279)
2015-09-05 18:28:49.2279|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:28:49.2279|Info|  Settimeout: id:42, (13) ms
2015-09-05 18:28:49.2279|Info|      Encerrado timer: id:41, (18:28:49.2299)
2015-09-05 18:28:49.2440|Info|      Executando timer: id:42, (18:28:49.2440)
2015-09-05 18:28:49.2440|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.2440|Info|  Settimeout: id:43, (32) ms
2015-09-05 18:28:49.2440|Info|  Settimeout: id:44, (62) ms
2015-09-05 18:28:49.3090|Info|  Settimeout: id:45, (64) ms
2015-09-05 18:28:49.3090|Info|      Encerrado timer: id:42, (18:28:49.3100)
2015-09-05 18:28:49.3751|Info|      Executando timer: id:45, (18:28:49.3751)
2015-09-05 18:28:49.3751|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 18:28:49.3751|Info|  Settimeout: id:46, (13) ms
2015-09-05 18:28:49.3751|Info|      Encerrado timer: id:45, (18:28:49.3781)
2015-09-05 18:28:49.3921|Info|      Executando timer: id:46, (18:28:49.3921)
2015-09-05 18:28:49.3921|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.4001|Info|  Settimeout: id:47, (1) ms
2015-09-05 18:28:49.4001|Info|  Settimeout: id:48, (32) ms
2015-09-05 18:28:49.4001|Info|      Encerrado timer: id:46, (18:28:49.4021)
2015-09-05 18:28:49.4001|Info|      Executando timer: id:47, (18:28:49.4031)
2015-09-05 18:28:49.4001|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:28:49.4001|Info|      Encerrado timer: id:47, (18:28:49.4051)
2015-09-05 18:28:49.4351|Info|      Executando timer: id:48, (18:28:49.4351)
2015-09-05 18:28:49.4351|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:28:49.4351|Info|  Settimeout: id:49, (13) ms
2015-09-05 18:28:49.4351|Info|      Encerrado timer: id:48, (18:28:49.4381)
2015-09-05 18:28:49.4521|Info|      Executando timer: id:49, (18:28:49.4521)
2015-09-05 18:28:49.4521|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.4521|Info|  Settimeout: id:50, (1) ms
2015-09-05 18:28:49.4521|Info|  Settimeout: id:51, (32) ms
2015-09-05 18:28:49.4521|Info|      Encerrado timer: id:49, (18:28:49.4551)
2015-09-05 18:28:49.4521|Info|      Executando timer: id:50, (18:28:49.4571)
2015-09-05 18:28:49.4521|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:28:49.4521|Info|      Encerrado timer: id:50, (18:28:49.4581)
2015-09-05 18:28:49.4881|Info|      Executando timer: id:51, (18:28:49.4881)
2015-09-05 18:28:49.4881|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:28:49.4881|Info|  Settimeout: id:52, (13) ms
2015-09-05 18:28:49.4881|Info|      Encerrado timer: id:51, (18:28:49.4901)
2015-09-05 18:28:49.5041|Info|      Executando timer: id:52, (18:28:49.5041)
2015-09-05 18:28:49.5041|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.5041|Info|  Settimeout: id:53, (1) ms
2015-09-05 18:28:49.5071|Info|  Settimeout: id:54, (32) ms
2015-09-05 18:28:49.5071|Info|      Encerrado timer: id:52, (18:28:49.5081)
2015-09-05 18:28:49.5412|Info|      Executando timer: id:54, (18:28:49.5412)
2015-09-05 18:28:49.5412|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:28:49.5412|Info|  Settimeout: id:55, (13) ms
2015-09-05 18:28:49.5412|Info|      Encerrado timer: id:54, (18:28:49.5432)
2015-09-05 18:28:49.5572|Info|      Executando timer: id:55, (18:28:49.5572)
2015-09-05 18:28:49.5572|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.5572|Info|  Settimeout: id:56, (32) ms
2015-09-05 18:28:49.5572|Info|  Settimeout: id:57, (1) ms
2015-09-05 18:28:49.5572|Info|  Settimeout: id:58, (64) ms
2015-09-05 18:28:49.5572|Info|      Encerrado timer: id:55, (18:28:49.5612)
2015-09-05 18:28:49.5572|Info|      Executando timer: id:57, (18:28:49.5622)
2015-09-05 18:28:49.5572|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 18:28:49.5572|Info|      Encerrado timer: id:57, (18:28:49.5672)
2015-09-05 18:28:49.5922|Info|      Executando timer: id:56, (18:28:49.5922)
2015-09-05 18:28:49.5922|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:28:49.5922|Info|      Encerrado timer: id:56, (18:28:49.5942)
2015-09-05 18:28:49.6262|Info|      Executando timer: id:58, (18:28:49.6262)
2015-09-05 18:28:49.6262|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:28:49.6262|Info|  Settimeout: id:59, (13) ms
2015-09-05 18:28:49.6262|Info|      Encerrado timer: id:58, (18:28:49.6292)
2015-09-05 18:28:49.6432|Info|      Executando timer: id:59, (18:28:49.6432)
2015-09-05 18:28:49.6432|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.6432|Info|  Settimeout: id:60, (32) ms
2015-09-05 18:28:49.6472|Info|  Settimeout: id:61, (64) ms
2015-09-05 18:28:49.6472|Info|      Encerrado timer: id:59, (18:28:49.6492)
2015-09-05 18:28:49.6803|Info|      Executando timer: id:60, (18:28:49.6803)
2015-09-05 18:28:49.6803|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 18:28:49.6803|Info|      Encerrado timer: id:60, (18:28:49.6813)
2015-09-05 18:28:49.7143|Info|      Executando timer: id:61, (18:28:49.7143)
2015-09-05 18:28:49.7143|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 18:28:49.7143|Info|  Settimeout: id:62, (13) ms
2015-09-05 18:28:49.7143|Info|      Encerrado timer: id:61, (18:28:49.7173)
2015-09-05 18:28:49.7313|Info|      Executando timer: id:62, (18:28:49.7313)
2015-09-05 18:28:49.7313|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:49.7313|Info|  Settimeout: id:63, (32) ms
2015-09-05 18:28:49.7313|Info|  Settimeout: id:64, (64) ms
2015-09-05 18:28:49.7313|Info|      Encerrado timer: id:62, (18:28:49.7363)
2015-09-05 18:28:49.8004|Info|      Executando timer: id:64, (18:28:49.8004)
2015-09-05 18:28:49.8004|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 18:28:49.8004|Info|  Settimeout: id:65, (13) ms
2015-09-05 18:28:49.8034|Info|      Encerrado timer: id:64, (18:28:49.8034)
2015-09-05 18:28:49.8034|Info|      Executando timer: id:65, (18:28:49.8164)
2015-09-05 18:28:49.8034|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:52.5383|Info|  Settimeout: id:66, (13) ms
2015-09-05 18:28:52.5383|Info|      Encerrado timer: id:65, (18:28:52.5393)
2015-09-05 18:28:52.5533|Info|      Executando timer: id:66, (18:28:52.5533)
2015-09-05 18:28:52.5533|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 18:28:52.6714|Info|_._object=[undefined]
2015-09-05 18:28:52.6714|Info|----------------------------------------
2015-09-05 18:28:52.6714|Info|lodash.isNil
2015-09-05 18:28:52.6714|Info|----------------------------------------
2015-09-05 18:28:52.6714|Info| FAIL - should work with nulls from another realm
2015-09-05 18:28:52.6784|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:28:53.0176|Info|  Settimeout: id:67, (32) ms
2015-09-05 18:28:53.0176|Info|      Encerrado timer: id:66, (18:28:53.0186)
2015-09-05 18:28:53.0517|Info|      Executando timer: id:67, (18:28:53.0517)
2015-09-05 18:28:53.0517|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 18:28:53.0537|Info|  Settimeout: id:68, (13) ms
2015-09-05 18:28:53.0537|Info|      Encerrado timer: id:67, (18:28:53.0537)
2015-09-05 18:28:53.0537|Info|      Executando timer: id:68, (18:28:53.0677)
2015-09-05 18:28:53.0687|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:53.2508|Info|  Settimeout: id:69, (32) ms
2015-09-05 18:28:53.2508|Info|  Settimeout: id:70, (64) ms
2015-09-05 18:28:53.2508|Info|      Encerrado timer: id:68, (18:28:53.2528)
2015-09-05 18:28:53.2848|Info|      Executando timer: id:69, (18:28:53.2848)
2015-09-05 18:28:53.2848|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:53.2848|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:53.2878|Info|      Encerrado timer: id:69, (18:28:53.2878)
2015-09-05 18:28:53.3179|Info|      Executando timer: id:70, (18:28:53.3179)
2015-09-05 18:28:53.3189|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 18:28:53.3189|Info|  Settimeout: id:71, (13) ms
2015-09-05 18:28:53.3189|Info|      Encerrado timer: id:70, (18:28:53.3209)
2015-09-05 18:28:53.3349|Info|      Executando timer: id:71, (18:28:53.3349)
2015-09-05 18:28:53.3349|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:53.3349|Info|  Settimeout: id:72, (32) ms
2015-09-05 18:28:53.3349|Info|  Settimeout: id:73, (64) ms
2015-09-05 18:28:53.3349|Info|      Encerrado timer: id:71, (18:28:53.3389)
2015-09-05 18:28:53.3709|Info|      Executando timer: id:72, (18:28:53.3709)
2015-09-05 18:28:53.3709|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:53.3709|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:53.3709|Info|      Encerrado timer: id:72, (18:28:53.3729)
2015-09-05 18:28:53.4039|Info|      Executando timer: id:73, (18:28:53.4039)
2015-09-05 18:28:53.4039|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 18:28:53.4039|Info|  Settimeout: id:74, (32) ms
2015-09-05 18:28:53.4039|Info|  Settimeout: id:75, (13) ms
2015-09-05 18:28:53.4039|Info|      Encerrado timer: id:73, (18:28:53.4069)
2015-09-05 18:28:53.4209|Info|      Executando timer: id:75, (18:28:53.4209)
2015-09-05 18:28:53.4209|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:53.4209|Info|  Settimeout: id:76, (32) ms
2015-09-05 18:28:53.4209|Info|  Settimeout: id:77, (64) ms
2015-09-05 18:28:53.4209|Info|      Encerrado timer: id:75, (18:28:53.4269)
2015-09-05 18:28:53.4389|Info|      Executando timer: id:74, (18:28:53.4389)
2015-09-05 18:28:53.4389|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:53.4389|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:53.4389|Info|      Encerrado timer: id:74, (18:28:53.4409)
2015-09-05 18:28:53.4590|Info|      Executando timer: id:76, (18:28:53.4590)
2015-09-05 18:28:53.4600|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:53.4600|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:53.4600|Info|      Encerrado timer: id:76, (18:28:53.4610)
2015-09-05 18:28:53.4920|Info|      Executando timer: id:77, (18:28:53.4920)
2015-09-05 18:28:53.4920|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:28:53.4920|Info|  Settimeout: id:78, (13) ms
2015-09-05 18:28:53.4920|Info|      Encerrado timer: id:77, (18:28:53.4960)
2015-09-05 18:28:53.5100|Info|      Executando timer: id:78, (18:28:53.5100)
2015-09-05 18:28:53.5100|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:53.5100|Info|  Settimeout: id:79, (64) ms
2015-09-05 18:28:53.5100|Info|      Encerrado timer: id:78, (18:28:53.5130)
2015-09-05 18:28:53.5780|Info|      Executando timer: id:79, (18:28:53.5780)
2015-09-05 18:28:53.5780|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 18:28:53.5780|Info|  Settimeout: id:80, (13) ms
2015-09-05 18:28:53.5780|Info|      Encerrado timer: id:79, (18:28:53.5810)
2015-09-05 18:28:53.5950|Info|      Executando timer: id:80, (18:28:53.5950)
2015-09-05 18:28:53.5950|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:53.5950|Info|  Settimeout: id:81, (32) ms
2015-09-05 18:28:53.6281|Info|  Settimeout: id:82, (32) ms
2015-09-05 18:28:53.6601|Info|  Settimeout: id:83, (32) ms
2015-09-05 18:28:53.6921|Info|  Settimeout: id:84, (32) ms
2015-09-05 18:28:53.7241|Info|  Settimeout: id:85, (32) ms
2015-09-05 18:28:53.7562|Info|  Settimeout: id:86, (32) ms
2015-09-05 18:28:53.7882|Info|  Settimeout: id:87, (32) ms
2015-09-05 18:28:53.8202|Info|  Settimeout: id:88, (32) ms
2015-09-05 18:28:53.8522|Info|  Settimeout: id:89, (32) ms
2015-09-05 18:28:53.8843|Info|  Settimeout: id:90, (32) ms
2015-09-05 18:28:53.9163|Info|  Settimeout: id:91, (1) ms
2015-09-05 18:28:53.9163|Info|      Encerrado timer: id:80, (18:28:53.9173)
2015-09-05 18:28:53.9163|Info|      Executando timer: id:91, (18:28:53.9193)
2015-09-05 18:28:53.9163|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:28:53.9163|Info|  Settimeout: id:92, (13) ms
2015-09-05 18:28:53.9163|Info|      Encerrado timer: id:91, (18:28:53.9213)
2015-09-05 18:28:53.9353|Info|      Executando timer: id:92, (18:28:53.9353)
2015-09-05 18:28:53.9353|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:53.9353|Info|  Settimeout: id:93, (32) ms
2015-09-05 18:28:53.9693|Info|  Settimeout: id:94, (32) ms
2015-09-05 18:28:54.0013|Info|  Settimeout: id:95, (32) ms
2015-09-05 18:28:54.0334|Info|  Settimeout: id:96, (32) ms
2015-09-05 18:28:54.0654|Info|  Settimeout: id:97, (32) ms
2015-09-05 18:28:54.0974|Info|  Settimeout: id:98, (32) ms
2015-09-05 18:28:54.1294|Info|  Settimeout: id:99, (32) ms
2015-09-05 18:28:54.1615|Info|  Settimeout: id:100, (32) ms
2015-09-05 18:28:54.1935|Info|  Settimeout: id:101, (32) ms
2015-09-05 18:28:54.2255|Info|  Settimeout: id:102, (32) ms
2015-09-05 18:28:54.2575|Info|  Settimeout: id:103, (1) ms
2015-09-05 18:28:54.2575|Info|      Encerrado timer: id:92, (18:28:54.2585)
2015-09-05 18:28:54.2575|Info|      Executando timer: id:103, (18:28:54.2605)
2015-09-05 18:28:54.2575|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 18:28:54.2575|Info|  Settimeout: id:104, (13) ms
2015-09-05 18:28:54.2575|Info|      Encerrado timer: id:103, (18:28:54.2625)
2015-09-05 18:28:54.2765|Info|      Executando timer: id:104, (18:28:54.2765)
2015-09-05 18:28:54.2765|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:54.2765|Info|  Settimeout: id:105, (32) ms
2015-09-05 18:28:54.2765|Info|  Settimeout: id:106, (128) ms
2015-09-05 18:28:54.2765|Info|      Encerrado timer: id:104, (18:28:54.2815)
2015-09-05 18:28:54.3136|Info|      Executando timer: id:105, (18:28:54.3136)
2015-09-05 18:28:54.3136|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:54.3136|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:54.3186|Info|      Encerrado timer: id:105, (18:28:54.3186)
2015-09-05 18:28:54.4096|Info|      Executando timer: id:106, (18:28:54.4096)
2015-09-05 18:28:54.4096|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:28:54.4096|Info|  Settimeout: id:107, (13) ms
2015-09-05 18:28:54.4126|Info|      Encerrado timer: id:106, (18:28:54.4126)
2015-09-05 18:28:54.4126|Info|      Executando timer: id:107, (18:28:54.4266)
2015-09-05 18:28:54.4126|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:54.4286|Info|  Settimeout: id:108, (32) ms
2015-09-05 18:28:54.4286|Info|  Settimeout: id:109, (63) ms
2015-09-05 18:28:54.4286|Info|  Settimeout: id:110, (64) ms
2015-09-05 18:28:54.4286|Info|  Settimeout: id:111, (256) ms
2015-09-05 18:28:54.4286|Info|      Encerrado timer: id:107, (18:28:54.4346)
2015-09-05 18:28:54.4627|Info|      Executando timer: id:108, (18:28:54.4627)
2015-09-05 18:28:54.4627|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:54.4627|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:54.4627|Info|      Encerrado timer: id:108, (18:28:54.4657)
2015-09-05 18:28:54.4967|Info|      Executando timer: id:109, (18:28:54.4967)
2015-09-05 18:28:54.4967|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:54.4967|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:54.4967|Info|      Encerrado timer: id:109, (18:28:54.4997)
2015-09-05 18:28:54.4967|Info|      Executando timer: id:110, (18:28:54.5007)
2015-09-05 18:28:54.4967|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:54.4967|Info|      Encerrado timer: id:110, (18:28:54.5027)
2015-09-05 18:28:54.6918|Info|      Executando timer: id:111, (18:28:54.6918)
2015-09-05 18:28:54.6918|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 18:28:54.6938|Info|  Settimeout: id:112, (13) ms
2015-09-05 18:28:54.6938|Info|      Encerrado timer: id:111, (18:28:54.6948)
2015-09-05 18:28:54.6938|Info|      Executando timer: id:112, (18:28:54.7088)
2015-09-05 18:28:54.7098|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:54.7098|Info|  Settimeout: id:113, (64) ms
2015-09-05 18:28:54.7098|Info|  Settimeout: id:114, (96) ms
2015-09-05 18:28:54.7098|Info|  Settimeout: id:115, (192) ms
2015-09-05 18:28:54.7098|Info|      Encerrado timer: id:112, (18:28:54.7148)
2015-09-05 18:28:54.7769|Info|      Executando timer: id:113, (18:28:54.7769)
2015-09-05 18:28:54.7769|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:54.7769|Info|      Encerrado timer: id:113, (18:28:54.7779)
2015-09-05 18:28:54.8099|Info|      Executando timer: id:114, (18:28:54.8099)
2015-09-05 18:28:54.8099|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 18:28:54.8099|Info|  Settimeout: id:116, (64) ms
2015-09-05 18:28:54.8099|Info|      Encerrado timer: id:114, (18:28:54.8119)
2015-09-05 18:28:54.8770|Info|      Executando timer: id:116, (18:28:54.8770)
2015-09-05 18:28:54.8770|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:54.8770|Info|      Encerrado timer: id:116, (18:28:54.8780)
2015-09-05 18:28:54.9080|Info|      Executando timer: id:115, (18:28:54.9080)
2015-09-05 18:28:54.9080|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 18:28:54.9080|Info|  Settimeout: id:117, (13) ms
2015-09-05 18:28:54.9080|Info|      Encerrado timer: id:115, (18:28:54.9120)
2015-09-05 18:28:54.9260|Info|      Executando timer: id:117, (18:28:54.9260)
2015-09-05 18:28:54.9260|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:54.9290|Info|  Settimeout: id:118, (0) ms
2015-09-05 18:28:54.9290|Info|  Settimeout: id:119, (32) ms
2015-09-05 18:28:54.9290|Info|      Encerrado timer: id:117, (18:28:54.9320)
2015-09-05 18:28:54.9290|Info|      Executando timer: id:118, (18:28:54.9320)
2015-09-05 18:28:54.9290|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:54.9290|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:54.9290|Info|      Encerrado timer: id:118, (18:28:54.9360)
2015-09-05 18:28:54.9650|Info|      Executando timer: id:119, (18:28:54.9650)
2015-09-05 18:28:54.9650|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:28:54.9650|Info|  Settimeout: id:120, (0) ms
2015-09-05 18:28:54.9650|Info|  Settimeout: id:121, (13) ms
2015-09-05 18:28:54.9650|Info|      Encerrado timer: id:119, (18:28:54.9680)
2015-09-05 18:28:54.9650|Info|      Executando timer: id:120, (18:28:54.9690)
2015-09-05 18:28:54.9650|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:54.9650|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:54.9650|Info|      Encerrado timer: id:120, (18:28:54.9710)
2015-09-05 18:28:54.9820|Info|      Executando timer: id:121, (18:28:54.9820)
2015-09-05 18:28:54.9820|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:54.9820|Info|  Settimeout: id:122, (32) ms
2015-09-05 18:28:54.9820|Info|  Settimeout: id:123, (64) ms
2015-09-05 18:28:54.9910|Info|      Encerrado timer: id:121, (18:28:54.9910)
2015-09-05 18:28:55.0231|Info|      Executando timer: id:122, (18:28:55.0231)
2015-09-05 18:28:55.0231|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.0231|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:55.0231|Info|      Encerrado timer: id:122, (18:28:55.0261)
2015-09-05 18:28:55.0561|Info|      Executando timer: id:123, (18:28:55.0561)
2015-09-05 18:28:55.0561|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:28:55.0561|Info|  Settimeout: id:124, (13) ms
2015-09-05 18:28:55.0561|Info|      Encerrado timer: id:123, (18:28:55.0581)
2015-09-05 18:28:55.0721|Info|      Executando timer: id:124, (18:28:55.0721)
2015-09-05 18:28:55.0721|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.0721|Info|  Settimeout: id:125, (32) ms
2015-09-05 18:28:55.0721|Info|  Settimeout: id:126, (256) ms
2015-09-05 18:28:55.0721|Info|      Encerrado timer: id:124, (18:28:55.0751)
2015-09-05 18:28:55.1071|Info|      Executando timer: id:125, (18:28:55.1071)
2015-09-05 18:28:55.1071|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.1071|Info|  Settimeout: id:127, (32) ms
2015-09-05 18:28:55.1071|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:28:55.1071|Info|      Encerrado timer: id:125, (18:28:55.1101)
2015-09-05 18:28:55.1421|Info|      Executando timer: id:127, (18:28:55.1421)
2015-09-05 18:28:55.1421|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.1421|Info|  Settimeout: id:128, (32) ms
2015-09-05 18:28:55.1421|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:28:55.1421|Info|      Encerrado timer: id:127, (18:28:55.1451)
2015-09-05 18:28:55.1772|Info|      Executando timer: id:128, (18:28:55.1772)
2015-09-05 18:28:55.1782|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.1782|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:55.1782|Info|      Encerrado timer: id:128, (18:28:55.1792)
2015-09-05 18:28:55.3323|Info|      Executando timer: id:126, (18:28:55.3323)
2015-09-05 18:28:55.3323|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:28:55.3353|Info|  Settimeout: id:129, (13) ms
2015-09-05 18:28:55.3353|Info|      Encerrado timer: id:126, (18:28:55.3363)
2015-09-05 18:28:55.3503|Info|      Executando timer: id:129, (18:28:55.3503)
2015-09-05 18:28:55.3503|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.3503|Info|  Settimeout: id:130, (32) ms
2015-09-05 18:28:55.3503|Info|  Settimeout: id:131, (64) ms
2015-09-05 18:28:55.3503|Info|      Encerrado timer: id:129, (18:28:55.3583)
2015-09-05 18:28:55.3913|Info|      Executando timer: id:130, (18:28:55.3913)
2015-09-05 18:28:55.3913|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.3913|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:55.3913|Info|      Encerrado timer: id:130, (18:28:55.3933)
2015-09-05 18:28:55.4233|Info|      Executando timer: id:131, (18:28:55.4233)
2015-09-05 18:28:55.4233|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:28:55.4233|Info|  Settimeout: id:132, (32) ms
2015-09-05 18:28:55.4233|Info|  Settimeout: id:133, (13) ms
2015-09-05 18:28:55.4233|Info|      Encerrado timer: id:131, (18:28:55.4264)
2015-09-05 18:28:55.4404|Info|      Executando timer: id:133, (18:28:55.4404)
2015-09-05 18:28:55.4404|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.4404|Info|  Settimeout: id:134, (32) ms
2015-09-05 18:28:55.4404|Info|  Settimeout: id:135, (64) ms
2015-09-05 18:28:55.4444|Info|      Encerrado timer: id:133, (18:28:55.4444)
2015-09-05 18:28:55.4444|Info|      Executando timer: id:132, (18:28:55.4584)
2015-09-05 18:28:55.4444|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.4594|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:55.4594|Info|      Encerrado timer: id:132, (18:28:55.4604)
2015-09-05 18:28:55.5094|Info|      Executando timer: id:135, (18:28:55.5094)
2015-09-05 18:28:55.5094|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:28:55.5094|Info|  Settimeout: id:136, (13) ms
2015-09-05 18:28:55.5094|Info|      Encerrado timer: id:135, (18:28:55.5124)
2015-09-05 18:28:55.5264|Info|      Executando timer: id:136, (18:28:55.5264)
2015-09-05 18:28:55.5264|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.5264|Info|  Settimeout: id:137, (32) ms
2015-09-05 18:28:55.5264|Info|  Settimeout: id:138, (32) ms
2015-09-05 18:28:55.5264|Info|  Settimeout: id:139, (64) ms
2015-09-05 18:28:55.5264|Info|      Encerrado timer: id:136, (18:28:55.5324)
2015-09-05 18:28:55.5645|Info|      Executando timer: id:138, (18:28:55.5645)
2015-09-05 18:28:55.5645|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 18:28:55.5645|Info|      Encerrado timer: id:138, (18:28:55.5664)
2015-09-05 18:28:55.5975|Info|      Executando timer: id:139, (18:28:55.5975)
2015-09-05 18:28:55.5975|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:28:55.5975|Info|  Settimeout: id:140, (13) ms
2015-09-05 18:28:55.5975|Info|      Encerrado timer: id:139, (18:28:55.5995)
2015-09-05 18:28:55.6135|Info|      Executando timer: id:140, (18:28:55.6135)
2015-09-05 18:28:55.6135|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.6165|Info|  Settimeout: id:141, (32) ms
2015-09-05 18:28:55.6165|Info|      Encerrado timer: id:140, (18:28:55.6175)
2015-09-05 18:28:55.6505|Info|      Executando timer: id:141, (18:28:55.6505)
2015-09-05 18:28:55.6505|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:28:55.6505|Info|  Settimeout: id:142, (13) ms
2015-09-05 18:28:55.6505|Info|      Encerrado timer: id:141, (18:28:55.6525)
2015-09-05 18:28:55.6665|Info|      Executando timer: id:142, (18:28:55.6665)
2015-09-05 18:28:55.6665|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.6665|Info|  Settimeout: id:143, (32) ms
2015-09-05 18:28:55.6665|Info|  Settimeout: id:144, (64) ms
2015-09-05 18:28:55.6665|Info|      Encerrado timer: id:142, (18:28:55.6695)
2015-09-05 18:28:55.7015|Info|      Executando timer: id:143, (18:28:55.7015)
2015-09-05 18:28:55.7015|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:55.7015|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:55.7015|Info|      Encerrado timer: id:143, (18:28:55.7035)
2015-09-05 18:28:55.7346|Info|      Executando timer: id:144, (18:28:55.7346)
2015-09-05 18:28:55.7346|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 18:28:55.7346|Info|  Settimeout: id:145, (13) ms
2015-09-05 18:28:55.7346|Info|      Encerrado timer: id:144, (18:28:55.7376)
2015-09-05 18:28:55.7516|Info|      Executando timer: id:145, (18:28:55.7516)
2015-09-05 18:28:55.7516|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:55.7516|Info|  Settimeout: id:146, (32) ms
2015-09-05 18:28:55.7516|Info|  Settimeout: id:147, (256) ms
2015-09-05 18:28:55.7566|Info|      Encerrado timer: id:145, (18:28:55.7566)
2015-09-05 18:28:55.7876|Info|      Executando timer: id:146, (18:28:55.7876)
2015-09-05 18:28:55.7876|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:55.7876|Info|  Settimeout: id:148, (32) ms
2015-09-05 18:28:55.7876|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:28:55.7876|Info|      Encerrado timer: id:146, (18:28:55.7916)
2015-09-05 18:28:55.8236|Info|      Executando timer: id:148, (18:28:55.8236)
2015-09-05 18:28:55.8236|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 18:28:55.8236|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:28:55.8236|Info|      Encerrado timer: id:148, (18:28:55.8276)
2015-09-05 18:28:56.0138|Info|      Executando timer: id:147, (18:28:56.0138)
2015-09-05 18:28:56.0138|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 18:28:56.0138|Info|  Settimeout: id:149, (13) ms
2015-09-05 18:28:56.0138|Info|      Encerrado timer: id:147, (18:28:56.0158)
2015-09-05 18:28:56.0298|Info|      Executando timer: id:149, (18:28:56.0298)
2015-09-05 18:28:56.0298|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:56.0298|Info|  Settimeout: id:150, (64) ms
2015-09-05 18:28:56.0378|Info|      Encerrado timer: id:149, (18:28:56.0378)
2015-09-05 18:28:56.1028|Info|      Executando timer: id:150, (18:28:56.1028)
2015-09-05 18:28:56.1028|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 18:28:56.1028|Info|  Settimeout: id:151, (13) ms
2015-09-05 18:28:56.1028|Info|      Encerrado timer: id:150, (18:28:56.1058)
2015-09-05 18:28:56.1199|Info|      Executando timer: id:151, (18:28:56.1199)
2015-09-05 18:28:56.1199|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:56.1199|Info|  Settimeout: id:152, (32) ms
2015-09-05 18:28:56.1199|Info|  Settimeout: id:153, (64) ms
2015-09-05 18:28:56.1199|Info|      Encerrado timer: id:151, (18:28:56.1248)
2015-09-05 18:28:56.1899|Info|      Executando timer: id:153, (18:28:56.1899)
2015-09-05 18:28:56.1899|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 18:28:56.1899|Info|  Settimeout: id:154, (13) ms
2015-09-05 18:28:56.1899|Info|      Encerrado timer: id:153, (18:28:56.1929)
2015-09-05 18:28:56.2069|Info|      Executando timer: id:154, (18:28:56.2069)
2015-09-05 18:28:56.2069|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:56.2069|Info|  Settimeout: id:155, (64) ms
2015-09-05 18:28:56.2069|Info|      Encerrado timer: id:154, (18:28:56.2089)
2015-09-05 18:28:56.2740|Info|      Executando timer: id:155, (18:28:56.2740)
2015-09-05 18:28:56.2740|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 18:28:56.2740|Info|  Settimeout: id:156, (13) ms
2015-09-05 18:28:56.2740|Info|      Encerrado timer: id:155, (18:28:56.2760)
2015-09-05 18:28:56.2900|Info|      Executando timer: id:156, (18:28:56.2900)
2015-09-05 18:28:56.2900|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 18:28:56.4191|Info|----------------------------------------
2015-09-05 18:28:56.4191|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:28:56.4191|Info|    Finished in 8432 milliseconds.
2015-09-05 18:28:56.4191|Info|----------------------------------------
2015-09-05 18:28:56.4311|Info|      Encerrado timer: id:156, (18:28:56.4311)
2015-09-05 18:28:56.4311|Info|Encerrando os testes
2015-09-05 18:28:56.4311|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:28:56.4311|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:28:56.4311|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:32:50.5748|Info|Iniciando os testes
2015-09-05 18:32:51.0361|Info|  Settimeout: id:0, (13) ms
2015-09-05 18:32:51.0901|Info|  Settimeout: id:1, (13) ms
2015-09-05 18:32:51.1932|Info|  Settimeout: id:2, (32) ms
2015-09-05 18:32:51.1942|Info|  Settimeout: id:3, (96) ms
2015-09-05 18:32:51.2562|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.2933|Info|  Settimeout: id:4, (13) ms
2015-09-05 18:32:51.3093|Info|  Settimeout: id:5, (32) ms
2015-09-05 18:32:51.3093|Info|  Settimeout: id:6, (64) ms
2015-09-05 18:32:51.3093|Info|  Settimeout: id:7, (128) ms
2015-09-05 18:32:51.3433|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.3763|Info|  Settimeout: id:8, (32) ms
2015-09-05 18:32:51.4104|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.4414|Info|  Settimeout: id:9, (32) ms
2015-09-05 18:32:51.4414|Info|  Settimeout: id:10, (13) ms
2015-09-05 18:32:51.4574|Info|  Settimeout: id:11, (32) ms
2015-09-05 18:32:51.4574|Info|  Settimeout: id:12, (64) ms
2015-09-05 18:32:51.4754|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.5244|Info|  Settimeout: id:13, (32) ms
2015-09-05 18:32:51.5244|Info|  Settimeout: id:14, (13) ms
2015-09-05 18:32:51.5405|Info|  Settimeout: id:15, (32) ms
2015-09-05 18:32:51.5405|Info|  Settimeout: id:16, (64) ms
2015-09-05 18:32:51.5745|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.6075|Info|  Settimeout: id:17, (13) ms
2015-09-05 18:32:51.6225|Info|  Settimeout: id:18, (32) ms
2015-09-05 18:32:51.6225|Info|  Settimeout: id:19, (32) ms
2015-09-05 18:32:51.6225|Info|  Settimeout: id:20, (32) ms
2015-09-05 18:32:51.6225|Info|  Settimeout: id:21, (64) ms
2015-09-05 18:32:51.6575|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.6575|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.6906|Info|  Settimeout: id:22, (32) ms
2015-09-05 18:32:51.6906|Info|  Settimeout: id:23, (13) ms
2015-09-05 18:32:51.7066|Info|  Settimeout: id:24, (32) ms
2015-09-05 18:32:51.7066|Info|  Settimeout: id:25, (32) ms
2015-09-05 18:32:51.7066|Info|  Settimeout: id:26, (64) ms
2015-09-05 18:32:51.7406|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:51.7746|Info|  Settimeout: id:27, (13) ms
2015-09-05 18:32:51.7896|Info|  Settimeout: id:28, (128) ms
2015-09-05 18:32:51.7896|Info|  Settimeout: id:29, (64) ms
2015-09-05 18:32:51.7896|Info|  Settimeout: id:30, (96) ms
2015-09-05 18:32:51.9187|Info|  Settimeout: id:31, (128) ms
2015-09-05 18:32:51.9187|Info|  Settimeout: id:32, (64) ms
2015-09-05 18:32:52.0468|Info|  Settimeout: id:33, (128) ms
2015-09-05 18:32:52.0468|Info|  Settimeout: id:34, (64) ms
2015-09-05 18:32:52.1099|Info|  Settimeout: id:35, (1) ms
2015-09-05 18:32:52.1099|Info|  Settimeout: id:36, (94) ms
2015-09-05 18:32:52.1099|Info|  Settimeout: id:37, (13) ms
2015-09-05 18:32:52.1099|Info|  Settimeout: id:38, (59) ms
2015-09-05 18:32:52.1279|Info|  Settimeout: id:39, (64) ms
2015-09-05 18:32:52.1329|Info|  Settimeout: id:40, (32) ms
2015-09-05 18:32:52.1329|Info|  Settimeout: id:41, (128) ms
2015-09-05 18:32:52.1669|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:52.1669|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:52.2069|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:52.2640|Info|  Settimeout: id:42, (13) ms
2015-09-05 18:32:52.2790|Info|  Settimeout: id:43, (32) ms
2015-09-05 18:32:52.2790|Info|  Settimeout: id:44, (63) ms
2015-09-05 18:32:52.3430|Info|  Settimeout: id:45, (64) ms
2015-09-05 18:32:52.4091|Info|  Settimeout: id:46, (13) ms
2015-09-05 18:32:52.4281|Info|  Settimeout: id:47, (1) ms
2015-09-05 18:32:52.4281|Info|  Settimeout: id:48, (32) ms
2015-09-05 18:32:52.4631|Info|  Settimeout: id:49, (13) ms
2015-09-05 18:32:52.4781|Info|  Settimeout: id:50, (1) ms
2015-09-05 18:32:52.4781|Info|  Settimeout: id:51, (32) ms
2015-09-05 18:32:52.5151|Info|  Settimeout: id:52, (13) ms
2015-09-05 18:32:52.5302|Info|  Settimeout: id:53, (1) ms
2015-09-05 18:32:52.5302|Info|  Settimeout: id:54, (32) ms
2015-09-05 18:32:52.5652|Info|  Settimeout: id:55, (13) ms
2015-09-05 18:32:52.5802|Info|  Settimeout: id:56, (32) ms
2015-09-05 18:32:52.5802|Info|  Settimeout: id:57, (1) ms
2015-09-05 18:32:52.5802|Info|  Settimeout: id:58, (64) ms
2015-09-05 18:32:52.6482|Info|  Settimeout: id:59, (13) ms
2015-09-05 18:32:52.6632|Info|  Settimeout: id:60, (32) ms
2015-09-05 18:32:52.6632|Info|  Settimeout: id:61, (64) ms
2015-09-05 18:32:52.7303|Info|  Settimeout: id:62, (13) ms
2015-09-05 18:32:52.7453|Info|  Settimeout: id:63, (32) ms
2015-09-05 18:32:52.7453|Info|  Settimeout: id:64, (64) ms
2015-09-05 18:32:52.8124|Info|  Settimeout: id:65, (13) ms
2015-09-05 18:32:55.6854|Info|  Settimeout: id:66, (13) ms
2015-09-05 18:32:55.8075|Info|_._object=[undefined]
2015-09-05 18:32:55.8075|Info|----------------------------------------
2015-09-05 18:32:55.8075|Info|lodash.isNil
2015-09-05 18:32:55.8075|Info|----------------------------------------
2015-09-05 18:32:55.8075|Info| FAIL - should work with nulls from another realm
2015-09-05 18:32:55.8195|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:32:56.1507|Info|  Settimeout: id:67, (32) ms
2015-09-05 18:32:56.1848|Info|  Settimeout: id:68, (13) ms
2015-09-05 18:32:56.4089|Info|  Settimeout: id:69, (32) ms
2015-09-05 18:32:56.4089|Info|  Settimeout: id:70, (64) ms
2015-09-05 18:32:56.4439|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:56.4770|Info|  Settimeout: id:71, (13) ms
2015-09-05 18:32:56.4930|Info|  Settimeout: id:72, (32) ms
2015-09-05 18:32:56.4930|Info|  Settimeout: id:73, (64) ms
2015-09-05 18:32:56.5270|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:56.5600|Info|  Settimeout: id:74, (32) ms
2015-09-05 18:32:56.5600|Info|  Settimeout: id:75, (13) ms
2015-09-05 18:32:56.5790|Info|  Settimeout: id:76, (32) ms
2015-09-05 18:32:56.5860|Info|  Settimeout: id:77, (64) ms
2015-09-05 18:32:56.5860|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:56.6181|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:56.6511|Info|  Settimeout: id:78, (13) ms
2015-09-05 18:32:56.6661|Info|  Settimeout: id:79, (64) ms
2015-09-05 18:32:56.7321|Info|  Settimeout: id:80, (13) ms
2015-09-05 18:32:56.7472|Info|  Settimeout: id:81, (32) ms
2015-09-05 18:32:56.7792|Info|  Settimeout: id:82, (32) ms
2015-09-05 18:32:56.8112|Info|  Settimeout: id:83, (32) ms
2015-09-05 18:32:56.8432|Info|  Settimeout: id:84, (32) ms
2015-09-05 18:32:56.8752|Info|  Settimeout: id:85, (32) ms
2015-09-05 18:32:56.9073|Info|  Settimeout: id:86, (32) ms
2015-09-05 18:32:56.9393|Info|  Settimeout: id:87, (32) ms
2015-09-05 18:32:56.9713|Info|  Settimeout: id:88, (32) ms
2015-09-05 18:32:57.0033|Info|  Settimeout: id:89, (32) ms
2015-09-05 18:32:57.0354|Info|  Settimeout: id:90, (32) ms
2015-09-05 18:32:57.0674|Info|  Settimeout: id:91, (1) ms
2015-09-05 18:32:57.0704|Info|  Settimeout: id:92, (13) ms
2015-09-05 18:32:57.0864|Info|  Settimeout: id:93, (32) ms
2015-09-05 18:32:57.1184|Info|  Settimeout: id:94, (32) ms
2015-09-05 18:32:57.1504|Info|  Settimeout: id:95, (32) ms
2015-09-05 18:32:57.1825|Info|  Settimeout: id:96, (32) ms
2015-09-05 18:32:57.2145|Info|  Settimeout: id:97, (32) ms
2015-09-05 18:32:57.2465|Info|  Settimeout: id:98, (32) ms
2015-09-05 18:32:57.2785|Info|  Settimeout: id:99, (32) ms
2015-09-05 18:32:57.3106|Info|  Settimeout: id:100, (32) ms
2015-09-05 18:32:57.3426|Info|  Settimeout: id:101, (32) ms
2015-09-05 18:32:57.3746|Info|  Settimeout: id:102, (32) ms
2015-09-05 18:32:57.4066|Info|  Settimeout: id:103, (1) ms
2015-09-05 18:32:57.4066|Info|  Settimeout: id:104, (13) ms
2015-09-05 18:32:57.4246|Info|  Settimeout: id:105, (32) ms
2015-09-05 18:32:57.4246|Info|  Settimeout: id:106, (128) ms
2015-09-05 18:32:57.4587|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:57.5557|Info|  Settimeout: id:107, (13) ms
2015-09-05 18:32:57.5717|Info|  Settimeout: id:108, (32) ms
2015-09-05 18:32:57.5717|Info|  Settimeout: id:109, (64) ms
2015-09-05 18:32:57.5717|Info|  Settimeout: id:110, (64) ms
2015-09-05 18:32:57.5717|Info|  Settimeout: id:111, (256) ms
2015-09-05 18:32:57.6058|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:57.6398|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:57.8329|Info|  Settimeout: id:112, (13) ms
2015-09-05 18:32:57.8479|Info|  Settimeout: id:113, (64) ms
2015-09-05 18:32:57.8479|Info|  Settimeout: id:114, (96) ms
2015-09-05 18:32:57.8499|Info|  Settimeout: id:115, (192) ms
2015-09-05 18:32:57.9470|Info|  Settimeout: id:116, (64) ms
2015-09-05 18:32:58.0431|Info|  Settimeout: id:117, (13) ms
2015-09-05 18:32:58.0581|Info|  Settimeout: id:118, (0) ms
2015-09-05 18:32:58.0581|Info|  Settimeout: id:119, (32) ms
2015-09-05 18:32:58.0581|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.0931|Info|  Settimeout: id:120, (0) ms
2015-09-05 18:32:58.0931|Info|  Settimeout: id:121, (13) ms
2015-09-05 18:32:58.0931|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.1091|Info|  Settimeout: id:122, (32) ms
2015-09-05 18:32:58.1091|Info|  Settimeout: id:123, (64) ms
2015-09-05 18:32:58.1431|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.1772|Info|  Settimeout: id:124, (13) ms
2015-09-05 18:32:58.1922|Info|  Settimeout: id:125, (32) ms
2015-09-05 18:32:58.1942|Info|  Settimeout: id:126, (256) ms
2015-09-05 18:32:58.2272|Info|  Settimeout: id:127, (32) ms
2015-09-05 18:32:58.2272|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:32:58.2622|Info|  Settimeout: id:128, (32) ms
2015-09-05 18:32:58.2622|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:32:58.2963|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.4524|Info|  Settimeout: id:129, (13) ms
2015-09-05 18:32:58.4744|Info|  Settimeout: id:130, (32) ms
2015-09-05 18:32:58.4754|Info|  Settimeout: id:131, (64) ms
2015-09-05 18:32:58.5084|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.5414|Info|  Settimeout: id:132, (32) ms
2015-09-05 18:32:58.5414|Info|  Settimeout: id:133, (13) ms
2015-09-05 18:32:58.5574|Info|  Settimeout: id:134, (32) ms
2015-09-05 18:32:58.5574|Info|  Settimeout: id:135, (64) ms
2015-09-05 18:32:58.5755|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.6255|Info|  Settimeout: id:136, (13) ms
2015-09-05 18:32:58.6405|Info|  Settimeout: id:137, (32) ms
2015-09-05 18:32:58.6405|Info|  Settimeout: id:138, (32) ms
2015-09-05 18:32:58.6405|Info|  Settimeout: id:139, (64) ms
2015-09-05 18:32:58.7085|Info|  Settimeout: id:140, (13) ms
2015-09-05 18:32:58.7236|Info|  Settimeout: id:141, (32) ms
2015-09-05 18:32:58.7576|Info|  Settimeout: id:142, (13) ms
2015-09-05 18:32:58.7726|Info|  Settimeout: id:143, (32) ms
2015-09-05 18:32:58.7726|Info|  Settimeout: id:144, (64) ms
2015-09-05 18:32:58.8066|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:58.8406|Info|  Settimeout: id:145, (13) ms
2015-09-05 18:32:58.8566|Info|  Settimeout: id:146, (32) ms
2015-09-05 18:32:58.8566|Info|  Settimeout: id:147, (256) ms
2015-09-05 18:32:58.8907|Info|  Settimeout: id:148, (32) ms
2015-09-05 18:32:58.8907|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:32:58.9247|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:32:59.1158|Info|  Settimeout: id:149, (13) ms
2015-09-05 18:32:59.1368|Info|  Settimeout: id:150, (64) ms
2015-09-05 18:32:59.2029|Info|  Settimeout: id:151, (13) ms
2015-09-05 18:32:59.2179|Info|  Settimeout: id:152, (32) ms
2015-09-05 18:32:59.2179|Info|  Settimeout: id:153, (64) ms
2015-09-05 18:32:59.2850|Info|  Settimeout: id:154, (13) ms
2015-09-05 18:32:59.3000|Info|  Settimeout: id:155, (64) ms
2015-09-05 18:32:59.3660|Info|  Settimeout: id:156, (13) ms
2015-09-05 18:32:59.5071|Info|----------------------------------------
2015-09-05 18:32:59.5071|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:32:59.5071|Info|    Finished in 8451 milliseconds.
2015-09-05 18:32:59.5071|Info|----------------------------------------
2015-09-05 18:32:59.5071|Info|Encerrando os testes
2015-09-05 18:32:59.5071|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:32:59.5071|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:32:59.5071|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:33:32.6787|Info|Iniciando os testes
2015-09-05 18:33:33.3532|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.4442|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.5093|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.5743|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.6694|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.7494|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.7494|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:33.8295|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:34.2478|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:34.2618|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:34.2938|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:37.8423|Info|_._object=[undefined]
2015-09-05 18:33:37.8423|Info|----------------------------------------
2015-09-05 18:33:37.8423|Info|lodash.isNil
2015-09-05 18:33:37.8423|Info|----------------------------------------
2015-09-05 18:33:37.8423|Info| FAIL - should work with nulls from another realm
2015-09-05 18:33:37.8423|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:33:38.4558|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:38.5348|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:38.6009|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:38.6209|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:39.4515|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:39.5956|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:39.6286|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.0439|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.0769|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.1240|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.2050|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:33:40.2380|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:33:40.2711|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.4832|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.5493|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.7724|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:40.8525|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:33:40.8855|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:33:41.4739|Info|----------------------------------------
2015-09-05 18:33:41.4749|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:33:41.4749|Info|    Finished in 8325 milliseconds.
2015-09-05 18:33:41.4749|Info|----------------------------------------
2015-09-05 18:33:41.4749|Info|Encerrando os testes
2015-09-05 18:33:41.4749|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:33:41.4749|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:33:41.4749|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:34:14.5804|Info|Iniciando os testes
2015-09-05 18:34:15.2669|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.3570|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.4220|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.4861|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.5792|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.6592|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.6592|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:15.7403|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:16.1586|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:16.1716|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:16.2036|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:19.7341|Info|_._object=[undefined]
2015-09-05 18:34:19.7341|Info|----------------------------------------
2015-09-05 18:34:19.7341|Info|lodash.isNil
2015-09-05 18:34:19.7341|Info|----------------------------------------
2015-09-05 18:34:19.7341|Info| FAIL - should work with nulls from another realm
2015-09-05 18:34:19.7341|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:34:20.3435|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:20.4236|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:20.4886|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:20.5067|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:20.9530|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:21.3382|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:21.4824|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:21.5154|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:21.9307|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:21.9647|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:22.0107|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:22.0908|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:34:22.1238|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:34:22.1568|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:22.3670|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:22.4320|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:22.6532|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:22.7322|Info|!timeoutId && !maxTimeoutId false
2015-09-05 18:34:22.7653|Info|!timeoutId && !maxTimeoutId true
2015-09-05 18:34:23.3647|Info|----------------------------------------
2015-09-05 18:34:23.3657|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:34:23.3657|Info|    Finished in 8288 milliseconds.
2015-09-05 18:34:23.3657|Info|----------------------------------------
2015-09-05 18:34:23.3657|Info|Encerrando os testes
2015-09-05 18:34:23.3657|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:34:23.3657|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:34:23.3657|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:34:43.1347|Info|Iniciando os testes
2015-09-05 18:34:48.2384|Info|_._object=[undefined]
2015-09-05 18:34:48.2434|Info|----------------------------------------
2015-09-05 18:34:48.2434|Info|lodash.isNil
2015-09-05 18:34:48.2434|Info|----------------------------------------
2015-09-05 18:34:48.2434|Info| FAIL - should work with nulls from another realm
2015-09-05 18:34:48.2434|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:34:51.8599|Info|----------------------------------------
2015-09-05 18:34:51.8599|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:34:51.8599|Info|    Finished in 8237 milliseconds.
2015-09-05 18:34:51.8599|Info|----------------------------------------
2015-09-05 18:34:51.8689|Info|Encerrando os testes
2015-09-05 18:34:51.8689|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:34:51.8689|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:34:51.8689|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:36:03.7440|Info|Iniciando os testes
2015-09-05 18:36:08.7606|Info|_._object=[undefined]
2015-09-05 18:36:08.7606|Info|----------------------------------------
2015-09-05 18:36:08.7606|Info|lodash.isNil
2015-09-05 18:36:08.7606|Info|----------------------------------------
2015-09-05 18:36:08.7606|Info| FAIL - should work with nulls from another realm
2015-09-05 18:36:08.7606|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 18:36:12.3441|Info|----------------------------------------
2015-09-05 18:36:12.3441|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 18:36:12.3441|Info|    Finished in 8114 milliseconds.
2015-09-05 18:36:12.3441|Info|----------------------------------------
2015-09-05 18:36:12.3521|Info|Encerrando os testes
2015-09-05 18:36:12.3521|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 18:36:12.3521|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:36:12.3521|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7775:4
    at V8Runtime:lodashTest:17425:3
2015-09-05 18:37:12.1146|Info|Iniciando os testes
2015-09-05 18:37:20.8968|Info|----------------------------------------
2015-09-05 18:37:20.8968|Info|    PASS: 4449  FAIL: 0  TOTAL: 4449
2015-09-05 18:37:20.8968|Info|    Finished in 8268 milliseconds.
2015-09-05 18:37:20.8968|Info|----------------------------------------
2015-09-05 18:37:20.8968|Info|Encerrando os testes
2015-09-05 18:37:20.8968|Info|Total:4449, Sucesso: 4449, Falha: 0
2015-09-05 18:37:20.9128|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:41:36.0881|Info|ast gerada com sucesso
2015-09-05 18:41:36.1181|Info| 714,0564 ms
2015-09-05 18:41:42.0053|Info|"callee"
2015-09-05 18:41:42.0093|Info|1
2015-09-05 18:41:42.0093|Info|"callee"
2015-09-05 18:41:42.0093|Info|1
2015-09-05 18:41:42.0093|Info|"callee"
2015-09-05 18:41:42.0093|Info|1
2015-09-05 18:41:43.4513|Info|Codigo gerado com sucesso
2015-09-05 18:41:43.4513|Info| 1083,9752 ms
2015-09-05 18:41:44.6902|Info|Iniciando os testes
2015-09-05 18:41:52.8050|Info|----------------------------------------
2015-09-05 18:41:52.8050|Info|    PASS: 4449  FAIL: 0  TOTAL: 4449
2015-09-05 18:41:52.8050|Info|    Finished in 8092 milliseconds.
2015-09-05 18:41:52.8050|Info|----------------------------------------
2015-09-05 18:41:52.8050|Info|Encerrando os testes
2015-09-05 18:41:52.8050|Info|Total:4449, Sucesso: 4449, Falha: 0
2015-09-05 18:41:52.8050|Info| 8 segundos para avaliar o individuo lodash.js
2015-09-05 18:41:53.9818|Info|Iniciando os testes
2015-09-05 18:41:57.4343|Info|Encerrando os testes
2015-09-05 18:41:57.4343|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 18:41:57.4343|Info| 4 segundos para avaliar o individuo global.js
2015-09-05 18:41:58.3029|Info|Iniciando os testes
2015-09-05 18:42:01.4982|Info|Encerrando os testes
2015-09-05 18:42:01.4982|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 18:42:01.4982|Info| 3 segundos para avaliar o individuo global.js
2015-09-05 18:42:01.6143|Info|Iniciando os testes
2015-09-05 18:42:01.6403|Info|----------------------------------------
2015-09-05 18:42:01.6403|Info|Arrays
2015-09-05 18:42:01.6403|Info|----------------------------------------
2015-09-05 18:42:01.6403|Info| PASS - first
2015-09-05 18:42:01.6403|Info| PASS - head
2015-09-05 18:42:01.6403|Info| PASS - take
2015-09-05 18:42:01.6473|Info| PASS - rest
2015-09-05 18:42:01.6473|Info| PASS - tail
2015-09-05 18:42:01.6473|Info| PASS - drop
2015-09-05 18:42:01.6473|Info| PASS - initial
2015-09-05 18:42:01.6473|Info| PASS - last
2015-09-05 18:42:01.6473|Info| PASS - compact
2015-09-05 18:42:02.3458|Info| PASS - flatten
2015-09-05 18:42:02.3458|Info| PASS - without
2015-09-05 18:42:02.3458|Info| PASS - sortedIndex
2015-09-05 18:42:02.3508|Info| PASS - uniq
2015-09-05 18:42:02.3508|Info| PASS - unique
2015-09-05 18:42:02.3508|Info| PASS - intersection
2015-09-05 18:42:02.3508|Info| PASS - union
2015-09-05 18:42:02.3508|Info| PASS - difference
2015-09-05 18:42:02.3508|Info| PASS - zip
2015-09-05 18:42:02.3508|Info| PASS - unzip
2015-09-05 18:42:02.3508|Info| PASS - object
2015-09-05 18:42:02.3508|Info| PASS - indexOf
2015-09-05 18:42:02.3508|Info| PASS - indexOf with NaN
2015-09-05 18:42:02.3508|Info| PASS - indexOf with +- 0
2015-09-05 18:42:02.3508|Info| PASS - lastIndexOf
2015-09-05 18:42:02.3658|Info| PASS - lastIndexOf with NaN
2015-09-05 18:42:02.3658|Info| PASS - lastIndexOf with +- 0
2015-09-05 18:42:02.3658|Info| PASS - findIndex
2015-09-05 18:42:02.3658|Info| PASS - findLastIndex
2015-09-05 18:42:02.3658|Info| PASS - range
2015-09-05 18:42:02.3658|Info|----------------------------------------
2015-09-05 18:42:02.3658|Info|Chaining
2015-09-05 18:42:02.3658|Info|----------------------------------------
2015-09-05 18:42:02.3658|Info| PASS - map/flatten/reduce
2015-09-05 18:42:02.3658|Info| PASS - select/reject/sortBy
2015-09-05 18:42:02.3658|Info| PASS - select/reject/sortBy in functional style
2015-09-05 18:42:02.3658|Info| PASS - reverse/concat/unshift/pop/map
2015-09-05 18:42:02.3658|Info| PASS - splice
2015-09-05 18:42:02.3658|Info| PASS - shift
2015-09-05 18:42:02.3658|Info| PASS - pop
2015-09-05 18:42:02.3658|Info| PASS - chaining works in small stages
2015-09-05 18:42:02.3658|Info| PASS - #1562: Engine proxies for chained functions
2015-09-05 18:42:02.3838|Info|----------------------------------------
2015-09-05 18:42:02.3838|Info|Collections
2015-09-05 18:42:02.3838|Info|----------------------------------------
2015-09-05 18:42:02.3838|Info| PASS - each
2015-09-05 18:42:02.3838|Info| PASS - forEach
2015-09-05 18:42:02.3838|Info| PASS - lookupIterator with contexts
2015-09-05 18:42:02.3838|Info| PASS - Iterating objects with sketchy length properties
2015-09-05 18:42:02.3968|Info| PASS - Resistant to collection length and properties changing while iterating
2015-09-05 18:42:02.3968|Info| PASS - map
2015-09-05 18:42:02.3968|Info| PASS - collect
2015-09-05 18:42:02.3968|Info| PASS - reduce
2015-09-05 18:42:02.3968|Info| PASS - foldl
2015-09-05 18:42:02.3968|Info| PASS - reduceRight
2015-09-05 18:42:02.3968|Info| PASS - foldr
2015-09-05 18:42:02.3968|Info| PASS - find
2015-09-05 18:42:02.3968|Info| PASS - detect
2015-09-05 18:42:02.3968|Info| PASS - filter
2015-09-05 18:42:02.4128|Info| PASS - select
2015-09-05 18:42:02.4128|Info| PASS - reject
2015-09-05 18:42:02.4128|Info| PASS - every
2015-09-05 18:42:02.4128|Info| PASS - all
2015-09-05 18:42:02.4128|Info| PASS - some
2015-09-05 18:42:02.4128|Info| PASS - any
2015-09-05 18:42:02.4128|Info| PASS - includes
2015-09-05 18:42:02.4128|Info| PASS - include
2015-09-05 18:42:02.4128|Info| PASS - contains
2015-09-05 18:42:02.4128|Info| PASS - includes with NaN
2015-09-05 18:42:02.4128|Info| PASS - includes with +- 0
2015-09-05 18:42:02.4298|Info| PASS - invoke
2015-09-05 18:42:02.4298|Info| PASS - invoke w/ function reference
2015-09-05 18:42:02.4298|Info| PASS - invoke when strings have a call method
2015-09-05 18:42:02.4298|Info| PASS - pluck
2015-09-05 18:42:02.4298|Info| PASS - where
2015-09-05 18:42:02.4298|Info| PASS - findWhere
2015-09-05 18:42:02.4889|Info| PASS - max
2015-09-05 18:42:02.5229|Info| PASS - min
2015-09-05 18:42:02.5229|Info| PASS - sortBy
2015-09-05 18:42:02.5229|Info| PASS - groupBy
2015-09-05 18:42:02.5229|Info| PASS - indexBy
2015-09-05 18:42:02.5229|Info| PASS - countBy
2015-09-05 18:42:02.5229|Info| PASS - shuffle
2015-09-05 18:42:02.5229|Info| PASS - sample
2015-09-05 18:42:02.5229|Info| PASS - toArray
2015-09-05 18:42:02.5229|Info| PASS - size
2015-09-05 18:42:02.5229|Info| PASS - partition
2015-09-05 18:42:02.5229|Info|----------------------------------------
2015-09-05 18:42:02.5379|Info|Functions
2015-09-05 18:42:02.5379|Info|----------------------------------------
2015-09-05 18:42:02.5379|Info| PASS - bind
2015-09-05 18:42:02.5379|Info| PASS - partial
2015-09-05 18:42:02.5379|Info| PASS - bindAll
2015-09-05 18:42:02.5379|Info| PASS - memoize
2015-09-05 18:42:02.7130|Info| PASS - delay
2015-09-05 18:42:02.7801|Info| PASS - defer
2015-09-05 18:42:02.8611|Info| PASS - throttle
2015-09-05 18:42:02.9742|Info| PASS - throttle arguments
2015-09-05 18:42:03.0553|Info| PASS - throttle once
2015-09-05 18:42:03.1363|Info| PASS - throttle twice
2015-09-05 18:42:03.2384|Info| PASS - more throttling
2015-09-05 18:42:03.5556|Info| PASS - throttle repeatedly with results
2015-09-05 18:42:03.7157|Info| PASS - throttle triggers trailing call when invoked repeatedly
2015-09-05 18:42:03.8288|Info| PASS - throttle does not trigger leading call when leading is set to false
2015-09-05 18:42:04.1961|Info| PASS - more throttle does not trigger leading call when leading is set to false
2015-09-05 18:42:04.7625|Info| PASS - one more throttle with leading: false test
2015-09-05 18:42:04.9716|Info| PASS - throttle does not trigger trailing call when trailing is set to false
2015-09-05 18:42:05.1898|Info| PASS - throttle continues to function after system time is set backwards
2015-09-05 18:42:05.3059|Info| PASS - throttle re-entrant
2015-09-05 18:42:05.4180|Info| PASS - debounce
2015-09-05 18:42:05.5641|Info| PASS - debounce asap
2015-09-05 18:42:05.6771|Info| PASS - debounce asap recursively
2015-09-05 18:42:05.8933|Info| PASS - debounce after system time is set backwards
2015-09-05 18:42:06.0094|Info| PASS - debounce re-entrant
2015-09-05 18:42:06.0094|Info| PASS - once
2015-09-05 18:42:06.0094|Info| PASS - Recursive onced function.
2015-09-05 18:42:06.0094|Info| PASS - wrap
2015-09-05 18:42:06.0094|Info| PASS - negate
2015-09-05 18:42:06.0094|Info| PASS - compose
2015-09-05 18:42:06.0094|Info| PASS - after
2015-09-05 18:42:06.0094|Info| PASS - before
2015-09-05 18:42:06.0094|Info| PASS - iteratee
2015-09-05 18:42:06.0094|Info|----------------------------------------
2015-09-05 18:42:06.0094|Info|Objects
2015-09-05 18:42:06.0094|Info|----------------------------------------
2015-09-05 18:42:06.0094|Info| PASS - keys
2015-09-05 18:42:06.0094|Info| PASS - allKeys
2015-09-05 18:42:06.0224|Info| PASS - values
2015-09-05 18:42:06.0224|Info| PASS - pairs
2015-09-05 18:42:06.0224|Info| PASS - invert
2015-09-05 18:42:06.0224|Info| PASS - functions
2015-09-05 18:42:06.0224|Info| PASS - methods
2015-09-05 18:42:06.0224|Info| PASS - extend
2015-09-05 18:42:06.0224|Info| PASS - extendOwn
2015-09-05 18:42:06.0224|Info| PASS - pick
2015-09-05 18:42:06.0394|Info| PASS - omit
2015-09-05 18:42:06.0394|Info| PASS - defaults
2015-09-05 18:42:06.0394|Info| PASS - clone
2015-09-05 18:42:06.0394|Info| PASS - create
2015-09-05 18:42:06.0394|Info| PASS - isEqual
2015-09-05 18:42:06.0534|Info| PASS - isEmpty
2015-09-05 18:42:06.0534|Info| PASS - isArguments
2015-09-05 18:42:06.0534|Info| PASS - isObject
2015-09-05 18:42:06.0534|Info| PASS - isArray
2015-09-05 18:42:06.0534|Info| PASS - isString
2015-09-05 18:42:06.0534|Info| PASS - isNumber
2015-09-05 18:42:06.0534|Info| PASS - isBoolean
2015-09-05 18:42:06.0534|Info| PASS - isFunction
2015-09-05 18:42:06.0534|Info| PASS - #1929 Typed Array constructors are functions
2015-09-05 18:42:06.0534|Info| PASS - isDate
2015-09-05 18:42:06.0694|Info| PASS - isRegExp
2015-09-05 18:42:06.0694|Info| PASS - isFinite
2015-09-05 18:42:06.0694|Info| PASS - isNaN
2015-09-05 18:42:06.0694|Info| PASS - isNull
2015-09-05 18:42:06.0694|Info| PASS - isUndefined
2015-09-05 18:42:06.0694|Info| PASS - isError
2015-09-05 18:42:06.0694|Info| PASS - tap
2015-09-05 18:42:06.0694|Info| PASS - has
2015-09-05 18:42:06.0694|Info| PASS - isMatch
2015-09-05 18:42:06.0694|Info| PASS - matcher
2015-09-05 18:42:06.0854|Info| PASS - matcher 
2015-09-05 18:42:06.0854|Info| PASS - findKey
2015-09-05 18:42:06.0854|Info| PASS - mapObject
2015-09-05 18:42:06.0854|Info|----------------------------------------
2015-09-05 18:42:06.0854|Info|Utility
2015-09-05 18:42:06.0854|Info|----------------------------------------
2015-09-05 18:42:06.0854|Info| PASS - #750 - Return _ instance.
2015-09-05 18:42:06.0854|Info| PASS - identity
2015-09-05 18:42:06.0854|Info| PASS - constant
2015-09-05 18:42:06.0854|Info| PASS - noop
2015-09-05 18:42:06.0854|Info| PASS - property
2015-09-05 18:42:06.1004|Info| PASS - propertyOf
2015-09-05 18:42:06.1004|Info| PASS - random
2015-09-05 18:42:06.1004|Info| PASS - now
2015-09-05 18:42:06.1004|Info| PASS - uniqueId
2015-09-05 18:42:06.1004|Info| PASS - times
2015-09-05 18:42:06.1004|Info| PASS - mixin
2015-09-05 18:42:06.1004|Info| PASS - _.escape
2015-09-05 18:42:06.1004|Info| PASS - _.unescape
2015-09-05 18:42:06.1004|Info| PASS - _.escape & unescape
2015-09-05 18:42:06.1175|Info| PASS - template
2015-09-05 18:42:06.1175|Info| PASS - _.template provides the generated function source, when a SyntaxError occurs
2015-09-05 18:42:06.1175|Info| PASS - _.template handles \u2028 & \u2029
2015-09-05 18:42:06.1175|Info| PASS - result calls functions and returns primitives
2015-09-05 18:42:06.1175|Info| PASS - result returns a default value if object is null or undefined
2015-09-05 18:42:06.1175|Info| PASS - result returns a default value if property of object is missing
2015-09-05 18:42:06.1175|Info| PASS - result only returns the default value if the object does not have the property or is undefined
2015-09-05 18:42:06.1175|Info| PASS - result does not return the default if the property of an object is found in the prototype
2015-09-05 18:42:06.1175|Info| PASS - result does use the fallback when the result of invoking the property is undefined
2015-09-05 18:42:06.1175|Info| PASS - result fallback can use a function
2015-09-05 18:42:06.1175|Info| PASS - _.templateSettings.variable
2015-09-05 18:42:06.1175|Info| PASS - #547 - _.templateSettings is unchanged by custom settings.
2015-09-05 18:42:06.1175|Info| PASS - #556 - undefined template variables.
2015-09-05 18:42:06.1175|Info| PASS - interpolate evaluates code only once.
2015-09-05 18:42:06.1315|Info| PASS - #746 - _.template settings are not modified.
2015-09-05 18:42:06.1315|Info| PASS - #779 - delimeters are applied to unescaped text.
2015-09-05 18:42:06.1315|Info|----------------------------------------
2015-09-05 18:42:06.1315|Info|    PASS: 1382  FAIL: 0  TOTAL: 1382
2015-09-05 18:42:06.1315|Info|    Finished in 4504 milliseconds.
2015-09-05 18:42:06.1315|Info|----------------------------------------
2015-09-05 18:42:06.1315|Info|Encerrando os testes
2015-09-05 18:42:06.1315|Info|Total:1382, Sucesso: 1382, Falha: 0
2015-09-05 18:42:06.1315|Info| 4 segundos para avaliar o individuo underscore.js
2015-09-05 18:42:07.3743|Info|ast gerada com sucesso
2015-09-05 18:42:07.3743|Info| 762,3068 ms
2015-09-05 18:42:13.6658|Info|Codigo gerado com sucesso
2015-09-05 18:42:13.6658|Info| 1171,8664 ms
2015-09-05 18:48:50.0014|Info|ast gerada com sucesso
2015-09-05 18:48:50.0314|Info| 4584,6808 ms
2015-09-05 18:49:10.7271|Info|"callee"
2015-09-05 18:49:10.7271|Info|1
2015-09-05 18:49:10.7271|Info|"callee"
2015-09-05 18:49:10.7271|Info|1
2015-09-05 18:49:10.7271|Info|"callee"
2015-09-05 18:49:10.7271|Info|1
2015-09-05 18:50:00.9848|Info|ast gerada com sucesso
2015-09-05 18:50:01.0128|Info| 4679,5991 ms
2015-09-05 18:50:52.1552|Info|ast gerada com sucesso
2015-09-05 18:50:52.1842|Info| 767,094 ms
2015-09-05 18:52:09.9114|Info|ast gerada com sucesso
2015-09-05 18:52:09.9404|Info| 746,4293 ms
2015-09-05 18:55:19.6862|Info|ast gerada com sucesso
2015-09-05 18:55:19.7263|Info| 787,4505 ms
2015-09-05 18:56:00.2521|Info|ast gerada com sucesso
2015-09-05 18:56:00.2761|Info| 741,7518 ms
2015-09-05 18:56:10.9036|Info|Codigo gerado com sucesso
2015-09-05 18:56:10.9287|Info| 1165,6901 ms
2015-09-05 18:56:18.0727|Info|ast gerada com sucesso
2015-09-05 18:56:18.1017|Info| 752,5618 ms
2015-09-05 18:56:19.5238|Info|"callee"
2015-09-05 18:56:19.5238|Info|1
2015-09-05 18:56:19.5238|Info|"callee"
2015-09-05 18:56:19.5238|Info|1
2015-09-05 18:56:19.5238|Info|"callee"
2015-09-05 18:56:19.5238|Info|1
2015-09-05 18:56:20.6506|Info|Codigo gerado com sucesso
2015-09-05 18:56:20.6506|Info| 892,295 ms
2015-09-05 18:56:21.9925|Info|Iniciando os testes
2015-09-05 18:56:30.3044|Info|----------------------------------------
2015-09-05 18:56:30.3044|Info|    PASS: 4449  FAIL: 0  TOTAL: 4449
2015-09-05 18:56:30.3044|Info|    Finished in 8290 milliseconds.
2015-09-05 18:56:30.3044|Info|----------------------------------------
2015-09-05 18:56:30.3044|Info|Encerrando os testes
2015-09-05 18:56:30.3044|Info|Total:4449, Sucesso: 4449, Falha: 0
2015-09-05 18:56:30.3044|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 18:56:31.1730|Info|Iniciando os testes
2015-09-05 18:56:34.5694|Info|Encerrando os testes
2015-09-05 18:56:34.5694|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 18:56:34.5694|Info| 4 segundos para avaliar o individuo global.js
2015-09-05 18:56:35.3850|Info|Iniciando os testes
2015-09-05 18:56:38.6063|Info|Encerrando os testes
2015-09-05 18:56:38.6063|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 18:56:38.6063|Info| 3 segundos para avaliar o individuo global.js
2015-09-05 18:56:38.7514|Info|Iniciando os testes
2015-09-05 18:56:38.7784|Info|----------------------------------------
2015-09-05 18:56:38.7784|Info|Arrays
2015-09-05 18:56:38.7784|Info|----------------------------------------
2015-09-05 18:56:38.7784|Info| PASS - first
2015-09-05 18:56:38.7784|Info| PASS - head
2015-09-05 18:56:38.7784|Info| PASS - take
2015-09-05 18:56:38.7784|Info| PASS - rest
2015-09-05 18:56:38.7784|Info| PASS - tail
2015-09-05 18:56:38.7874|Info| PASS - drop
2015-09-05 18:56:38.7874|Info| PASS - initial
2015-09-05 18:56:38.7874|Info| PASS - last
2015-09-05 18:56:38.7874|Info| PASS - compact
2015-09-05 18:56:39.5080|Info| PASS - flatten
2015-09-05 18:56:39.5080|Info| PASS - without
2015-09-05 18:56:39.5080|Info| PASS - sortedIndex
2015-09-05 18:56:39.5080|Info| PASS - uniq
2015-09-05 18:56:39.5080|Info| PASS - unique
2015-09-05 18:56:39.5080|Info| PASS - intersection
2015-09-05 18:56:39.5080|Info| PASS - union
2015-09-05 18:56:39.5230|Info| PASS - difference
2015-09-05 18:56:39.5230|Info| PASS - zip
2015-09-05 18:56:39.5230|Info| PASS - unzip
2015-09-05 18:56:39.5230|Info| PASS - object
2015-09-05 18:56:39.5230|Info| PASS - indexOf
2015-09-05 18:56:39.5230|Info| PASS - indexOf with NaN
2015-09-05 18:56:39.5230|Info| PASS - indexOf with +- 0
2015-09-05 18:56:39.5230|Info| PASS - lastIndexOf
2015-09-05 18:56:39.5380|Info| PASS - lastIndexOf with NaN
2015-09-05 18:56:39.5380|Info| PASS - lastIndexOf with +- 0
2015-09-05 18:56:39.5380|Info| PASS - findIndex
2015-09-05 18:56:39.5380|Info| PASS - findLastIndex
2015-09-05 18:56:39.5380|Info| PASS - range
2015-09-05 18:56:39.5380|Info|----------------------------------------
2015-09-05 18:56:39.5380|Info|Chaining
2015-09-05 18:56:39.5380|Info|----------------------------------------
2015-09-05 18:56:39.5380|Info| PASS - map/flatten/reduce
2015-09-05 18:56:39.5380|Info| PASS - select/reject/sortBy
2015-09-05 18:56:39.5380|Info| PASS - select/reject/sortBy in functional style
2015-09-05 18:56:39.5530|Info| PASS - reverse/concat/unshift/pop/map
2015-09-05 18:56:39.5530|Info| PASS - splice
2015-09-05 18:56:39.5530|Info| PASS - shift
2015-09-05 18:56:39.5530|Info| PASS - pop
2015-09-05 18:56:39.5530|Info| PASS - chaining works in small stages
2015-09-05 18:56:39.5530|Info| PASS - #1562: Engine proxies for chained functions
2015-09-05 18:56:39.5530|Info|----------------------------------------
2015-09-05 18:56:39.5530|Info|Collections
2015-09-05 18:56:39.5530|Info|----------------------------------------
2015-09-05 18:56:39.5530|Info| PASS - each
2015-09-05 18:56:39.5530|Info| PASS - forEach
2015-09-05 18:56:39.5530|Info| PASS - lookupIterator with contexts
2015-09-05 18:56:39.5710|Info| PASS - Iterating objects with sketchy length properties
2015-09-05 18:56:39.5710|Info| PASS - Resistant to collection length and properties changing while iterating
2015-09-05 18:56:39.5710|Info| PASS - map
2015-09-05 18:56:39.5710|Info| PASS - collect
2015-09-05 18:56:39.5710|Info| PASS - reduce
2015-09-05 18:56:39.5710|Info| PASS - foldl
2015-09-05 18:56:39.5710|Info| PASS - reduceRight
2015-09-05 18:56:39.5900|Info| PASS - foldr
2015-09-05 18:56:39.5900|Info| PASS - find
2015-09-05 18:56:39.5900|Info| PASS - detect
2015-09-05 18:56:39.5900|Info| PASS - filter
2015-09-05 18:56:39.5900|Info| PASS - select
2015-09-05 18:56:39.5900|Info| PASS - reject
2015-09-05 18:56:39.5900|Info| PASS - every
2015-09-05 18:56:39.5900|Info| PASS - all
2015-09-05 18:56:39.6000|Info| PASS - some
2015-09-05 18:56:39.6000|Info| PASS - any
2015-09-05 18:56:39.6000|Info| PASS - includes
2015-09-05 18:56:39.6000|Info| PASS - include
2015-09-05 18:56:39.6000|Info| PASS - contains
2015-09-05 18:56:39.6000|Info| PASS - includes with NaN
2015-09-05 18:56:39.6000|Info| PASS - includes with +- 0
2015-09-05 18:56:39.6000|Info| PASS - invoke
2015-09-05 18:56:39.6000|Info| PASS - invoke w/ function reference
2015-09-05 18:56:39.6000|Info| PASS - invoke when strings have a call method
2015-09-05 18:56:39.6000|Info| PASS - pluck
2015-09-05 18:56:39.6000|Info| PASS - where
2015-09-05 18:56:39.6000|Info| PASS - findWhere
2015-09-05 18:56:39.6451|Info| PASS - max
2015-09-05 18:56:39.6761|Info| PASS - min
2015-09-05 18:56:39.6781|Info| PASS - sortBy
2015-09-05 18:56:39.6781|Info| PASS - groupBy
2015-09-05 18:56:39.6781|Info| PASS - indexBy
2015-09-05 18:56:39.6781|Info| PASS - countBy
2015-09-05 18:56:39.6781|Info| PASS - shuffle
2015-09-05 18:56:39.6781|Info| PASS - sample
2015-09-05 18:56:39.6781|Info| PASS - toArray
2015-09-05 18:56:39.6781|Info| PASS - size
2015-09-05 18:56:39.6781|Info| PASS - partition
2015-09-05 18:56:39.6781|Info|----------------------------------------
2015-09-05 18:56:39.6781|Info|Functions
2015-09-05 18:56:39.6781|Info|----------------------------------------
2015-09-05 18:56:39.6941|Info| PASS - bind
2015-09-05 18:56:39.6941|Info| PASS - partial
2015-09-05 18:56:39.6941|Info| PASS - bindAll
2015-09-05 18:56:39.6941|Info| PASS - memoize
2015-09-05 18:56:39.8652|Info| PASS - delay
2015-09-05 18:56:39.9323|Info| PASS - defer
2015-09-05 18:56:40.0133|Info| PASS - throttle
2015-09-05 18:56:40.1254|Info| PASS - throttle arguments
2015-09-05 18:56:40.2055|Info| PASS - throttle once
2015-09-05 18:56:40.2855|Info| PASS - throttle twice
2015-09-05 18:56:40.3886|Info| PASS - more throttling
2015-09-05 18:56:40.7058|Info| PASS - throttle repeatedly with results
2015-09-05 18:56:40.8659|Info| PASS - throttle triggers trailing call when invoked repeatedly
2015-09-05 18:56:40.9780|Info| PASS - throttle does not trigger leading call when leading is set to false
2015-09-05 18:56:41.3453|Info| PASS - more throttle does not trigger leading call when leading is set to false
2015-09-05 18:56:41.9117|Info| PASS - one more throttle with leading: false test
2015-09-05 18:56:42.1218|Info| PASS - throttle does not trigger trailing call when trailing is set to false
2015-09-05 18:56:42.3390|Info| PASS - throttle continues to function after system time is set backwards
2015-09-05 18:56:42.4561|Info| PASS - throttle re-entrant
2015-09-05 18:56:42.5691|Info| PASS - debounce
2015-09-05 18:56:42.7142|Info| PASS - debounce asap
2015-09-05 18:56:42.8263|Info| PASS - debounce asap recursively
2015-09-05 18:56:43.0445|Info| PASS - debounce after system time is set backwards
2015-09-05 18:56:43.1616|Info| PASS - debounce re-entrant
2015-09-05 18:56:43.1626|Info| PASS - once
2015-09-05 18:56:43.1626|Info| PASS - Recursive onced function.
2015-09-05 18:56:43.1626|Info| PASS - wrap
2015-09-05 18:56:43.1626|Info| PASS - negate
2015-09-05 18:56:43.1626|Info| PASS - compose
2015-09-05 18:56:43.1626|Info| PASS - after
2015-09-05 18:56:43.1626|Info| PASS - before
2015-09-05 18:56:43.1626|Info| PASS - iteratee
2015-09-05 18:56:43.1626|Info|----------------------------------------
2015-09-05 18:56:43.1626|Info|Objects
2015-09-05 18:56:43.1626|Info|----------------------------------------
2015-09-05 18:56:43.1626|Info| PASS - keys
2015-09-05 18:56:43.1626|Info| PASS - allKeys
2015-09-05 18:56:43.1626|Info| PASS - values
2015-09-05 18:56:43.1626|Info| PASS - pairs
2015-09-05 18:56:43.1626|Info| PASS - invert
2015-09-05 18:56:43.1626|Info| PASS - functions
2015-09-05 18:56:43.1626|Info| PASS - methods
2015-09-05 18:56:43.1786|Info| PASS - extend
2015-09-05 18:56:43.1786|Info| PASS - extendOwn
2015-09-05 18:56:43.1786|Info| PASS - pick
2015-09-05 18:56:43.1786|Info| PASS - omit
2015-09-05 18:56:43.1786|Info| PASS - defaults
2015-09-05 18:56:43.1786|Info| PASS - clone
2015-09-05 18:56:43.1786|Info| PASS - create
2015-09-05 18:56:43.1786|Info| PASS - isEqual
2015-09-05 18:56:43.1946|Info| PASS - isEmpty
2015-09-05 18:56:43.1946|Info| PASS - isArguments
2015-09-05 18:56:43.1946|Info| PASS - isObject
2015-09-05 18:56:43.1946|Info| PASS - isArray
2015-09-05 18:56:43.1946|Info| PASS - isString
2015-09-05 18:56:43.1946|Info| PASS - isNumber
2015-09-05 18:56:43.1946|Info| PASS - isBoolean
2015-09-05 18:56:43.1946|Info| PASS - isFunction
2015-09-05 18:56:43.1946|Info| PASS - #1929 Typed Array constructors are functions
2015-09-05 18:56:43.2096|Info| PASS - isDate
2015-09-05 18:56:43.2096|Info| PASS - isRegExp
2015-09-05 18:56:43.2096|Info| PASS - isFinite
2015-09-05 18:56:43.2096|Info| PASS - isNaN
2015-09-05 18:56:43.2096|Info| PASS - isNull
2015-09-05 18:56:43.2096|Info| PASS - isUndefined
2015-09-05 18:56:43.2096|Info| PASS - isError
2015-09-05 18:56:43.2096|Info| PASS - tap
2015-09-05 18:56:43.2096|Info| PASS - has
2015-09-05 18:56:43.2096|Info| PASS - isMatch
2015-09-05 18:56:43.2096|Info| PASS - matcher
2015-09-05 18:56:43.2096|Info| PASS - matcher 
2015-09-05 18:56:43.2096|Info| PASS - findKey
2015-09-05 18:56:43.2096|Info| PASS - mapObject
2015-09-05 18:56:43.2096|Info|----------------------------------------
2015-09-05 18:56:43.2096|Info|Utility
2015-09-05 18:56:43.2256|Info|----------------------------------------
2015-09-05 18:56:43.2256|Info| PASS - #750 - Return _ instance.
2015-09-05 18:56:43.2256|Info| PASS - identity
2015-09-05 18:56:43.2256|Info| PASS - constant
2015-09-05 18:56:43.2256|Info| PASS - noop
2015-09-05 18:56:43.2256|Info| PASS - property
2015-09-05 18:56:43.2256|Info| PASS - propertyOf
2015-09-05 18:56:43.2256|Info| PASS - random
2015-09-05 18:56:43.2256|Info| PASS - now
2015-09-05 18:56:43.2256|Info| PASS - uniqueId
2015-09-05 18:56:43.2256|Info| PASS - times
2015-09-05 18:56:43.2256|Info| PASS - mixin
2015-09-05 18:56:43.2256|Info| PASS - _.escape
2015-09-05 18:56:43.2256|Info| PASS - _.unescape
2015-09-05 18:56:43.2256|Info| PASS - _.escape & unescape
2015-09-05 18:56:43.2436|Info| PASS - template
2015-09-05 18:56:43.2436|Info| PASS - _.template provides the generated function source, when a SyntaxError occurs
2015-09-05 18:56:43.2436|Info| PASS - _.template handles \u2028 & \u2029
2015-09-05 18:56:43.2436|Info| PASS - result calls functions and returns primitives
2015-09-05 18:56:43.2436|Info| PASS - result returns a default value if object is null or undefined
2015-09-05 18:56:43.2436|Info| PASS - result returns a default value if property of object is missing
2015-09-05 18:56:43.2436|Info| PASS - result only returns the default value if the object does not have the property or is undefined
2015-09-05 18:56:43.2436|Info| PASS - result does not return the default if the property of an object is found in the prototype
2015-09-05 18:56:43.2436|Info| PASS - result does use the fallback when the result of invoking the property is undefined
2015-09-05 18:56:43.2436|Info| PASS - result fallback can use a function
2015-09-05 18:56:43.2436|Info| PASS - _.templateSettings.variable
2015-09-05 18:56:43.2436|Info| PASS - #547 - _.templateSettings is unchanged by custom settings.
2015-09-05 18:56:43.2436|Info| PASS - #556 - undefined template variables.
2015-09-05 18:56:43.2576|Info| PASS - interpolate evaluates code only once.
2015-09-05 18:56:43.2576|Info| PASS - #746 - _.template settings are not modified.
2015-09-05 18:56:43.2576|Info| PASS - #779 - delimeters are applied to unescaped text.
2015-09-05 18:56:43.2576|Info|----------------------------------------
2015-09-05 18:56:43.2576|Info|    PASS: 1382  FAIL: 0  TOTAL: 1382
2015-09-05 18:56:43.2576|Info|    Finished in 4494 milliseconds.
2015-09-05 18:56:43.2576|Info|----------------------------------------
2015-09-05 18:56:43.2576|Info|Encerrando os testes
2015-09-05 18:56:43.2576|Info|Total:1382, Sucesso: 1382, Falha: 0
2015-09-05 18:56:43.2576|Info| 4 segundos para avaliar o individuo underscore.js
2015-09-05 18:56:44.3524|Info|ast gerada com sucesso
2015-09-05 18:56:44.3524|Info| 676,9203 ms
2015-09-05 18:56:50.3166|Info|Codigo gerado com sucesso
2015-09-05 18:56:50.3166|Info| 1205,2156 ms
