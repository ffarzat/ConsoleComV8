2015-09-04 12:13:53.3998|Info|Iniciando os testes
2015-09-04 12:13:53.7279|Info|  Settimeout: id:0, (13) ms
2015-09-04 12:13:53.7592|Info|      Executando timer: id:0, (12:13:53.7592)
2015-09-04 12:13:53.7748|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:53.7904|Info|  Settimeout: id:1, (13) ms
2015-09-04 12:13:53.7904|Info|      Encerrado timer: id:0, (12:13:53.7904)
2015-09-04 12:13:53.8216|Info|      Executando timer: id:1, (12:13:53.8216)
2015-09-04 12:13:53.8216|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:53.8685|Info|  Settimeout: id:2, (32) ms
2015-09-04 12:13:53.8685|Info|  Settimeout: id:3, (96) ms
2015-09-04 12:13:53.8841|Info|      Encerrado timer: id:1, (12:13:53.8841)
2015-09-04 12:13:53.9311|Info|      Executando timer: id:2, (12:13:53.9311)
2015-09-04 12:13:53.9311|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:53.9311|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:53.9311|Info|      Encerrado timer: id:2, (12:13:53.9311)
2015-09-04 12:13:53.9936|Info|      Executando timer: id:3, (12:13:53.9936)
2015-09-04 12:13:53.9936|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-04 12:13:53.9936|Info|  Settimeout: id:4, (13) ms
2015-09-04 12:13:53.9936|Info|      Encerrado timer: id:3, (12:13:53.9936)
2015-09-04 12:13:54.0092|Info|      Executando timer: id:4, (12:13:54.0092)
2015-09-04 12:13:54.0092|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.0092|Info|  Settimeout: id:5, (32) ms
2015-09-04 12:13:54.0092|Info|  Settimeout: id:6, (64) ms
2015-09-04 12:13:54.0092|Info|  Settimeout: id:7, (128) ms
2015-09-04 12:13:54.0092|Info|      Encerrado timer: id:4, (12:13:54.0092)
2015-09-04 12:13:54.0561|Info|      Executando timer: id:5, (12:13:54.0561)
2015-09-04 12:13:54.0561|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.0561|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.0561|Info|      Encerrado timer: id:5, (12:13:54.0561)
2015-09-04 12:13:54.0873|Info|      Executando timer: id:6, (12:13:54.0873)
2015-09-04 12:13:54.0873|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-04 12:13:54.0873|Info|  Settimeout: id:8, (32) ms
2015-09-04 12:13:54.0873|Info|      Encerrado timer: id:6, (12:13:54.0873)
2015-09-04 12:13:54.1342|Info|      Executando timer: id:8, (12:13:54.1342)
2015-09-04 12:13:54.1342|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.1342|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.1342|Info|      Encerrado timer: id:8, (12:13:54.1342)
2015-09-04 12:13:54.1498|Info|      Executando timer: id:7, (12:13:54.1498)
2015-09-04 12:13:54.1498|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-04 12:13:54.1498|Info|  Settimeout: id:9, (32) ms
2015-09-04 12:13:54.1498|Info|  Settimeout: id:10, (13) ms
2015-09-04 12:13:54.1498|Info|      Encerrado timer: id:7, (12:13:54.1498)
2015-09-04 12:13:54.1811|Info|      Executando timer: id:10, (12:13:54.1811)
2015-09-04 12:13:54.1811|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.1811|Info|  Settimeout: id:11, (32) ms
2015-09-04 12:13:54.1811|Info|  Settimeout: id:12, (64) ms
2015-09-04 12:13:54.1811|Info|      Encerrado timer: id:10, (12:13:54.1811)
2015-09-04 12:13:54.1967|Info|      Executando timer: id:9, (12:13:54.1967)
2015-09-04 12:13:54.1967|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.1967|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.1967|Info|      Encerrado timer: id:9, (12:13:54.1967)
2015-09-04 12:13:54.2279|Info|      Executando timer: id:11, (12:13:54.2279)
2015-09-04 12:13:54.2279|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.2279|Info|      Encerrado timer: id:11, (12:13:54.2279)
2015-09-04 12:13:54.2592|Info|      Executando timer: id:12, (12:13:54.2592)
2015-09-04 12:13:54.2592|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-04 12:13:54.2592|Info|  Settimeout: id:13, (32) ms
2015-09-04 12:13:54.2592|Info|  Settimeout: id:14, (13) ms
2015-09-04 12:13:54.2592|Info|      Encerrado timer: id:12, (12:13:54.2592)
2015-09-04 12:13:54.2904|Info|      Executando timer: id:14, (12:13:54.2904)
2015-09-04 12:13:54.2904|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.2904|Info|  Settimeout: id:15, (32) ms
2015-09-04 12:13:54.2904|Info|  Settimeout: id:16, (64) ms
2015-09-04 12:13:54.2904|Info|      Encerrado timer: id:14, (12:13:54.2904)
2015-09-04 12:13:54.3061|Info|      Executando timer: id:13, (12:13:54.3061)
2015-09-04 12:13:54.3061|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.3061|Info|      Encerrado timer: id:13, (12:13:54.3061)
2015-09-04 12:13:54.3373|Info|      Executando timer: id:15, (12:13:54.3373)
2015-09-04 12:13:54.3373|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.3373|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.3373|Info|      Encerrado timer: id:15, (12:13:54.3373)
2015-09-04 12:13:54.3686|Info|      Executando timer: id:16, (12:13:54.3686)
2015-09-04 12:13:54.3686|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-04 12:13:54.3686|Info|  Settimeout: id:17, (13) ms
2015-09-04 12:13:54.3686|Info|      Encerrado timer: id:16, (12:13:54.3686)
2015-09-04 12:13:54.3999|Info|      Executando timer: id:17, (12:13:54.3999)
2015-09-04 12:13:54.3999|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.3999|Info|  Settimeout: id:18, (32) ms
2015-09-04 12:13:54.3999|Info|  Settimeout: id:19, (32) ms
2015-09-04 12:13:54.3999|Info|  Settimeout: id:20, (32) ms
2015-09-04 12:13:54.3999|Info|  Settimeout: id:21, (64) ms
2015-09-04 12:13:54.3999|Info|      Encerrado timer: id:17, (12:13:54.3999)
2015-09-04 12:13:54.4468|Info|      Executando timer: id:20, (12:13:54.4468)
2015-09-04 12:13:54.4468|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.4468|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.4468|Info|      Encerrado timer: id:20, (12:13:54.4468)
2015-09-04 12:13:54.4468|Info|      Executando timer: id:18, (12:13:54.4468)
2015-09-04 12:13:54.4468|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.4468|Info|      Encerrado timer: id:18, (12:13:54.4468)
2015-09-04 12:13:54.4468|Info|      Executando timer: id:19, (12:13:54.4468)
2015-09-04 12:13:54.4468|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.4468|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.4468|Info|      Encerrado timer: id:19, (12:13:54.4468)
2015-09-04 12:13:54.4780|Info|      Executando timer: id:21, (12:13:54.4780)
2015-09-04 12:13:54.4780|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-04 12:13:54.4780|Info|  Settimeout: id:22, (32) ms
2015-09-04 12:13:54.4780|Info|  Settimeout: id:23, (13) ms
2015-09-04 12:13:54.4780|Info|      Encerrado timer: id:21, (12:13:54.4780)
2015-09-04 12:13:54.5093|Info|      Executando timer: id:23, (12:13:54.5093)
2015-09-04 12:13:54.5093|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.5093|Info|  Settimeout: id:24, (32) ms
2015-09-04 12:13:54.5093|Info|  Settimeout: id:25, (32) ms
2015-09-04 12:13:54.5093|Info|  Settimeout: id:26, (64) ms
2015-09-04 12:13:54.5093|Info|      Encerrado timer: id:23, (12:13:54.5093)
2015-09-04 12:13:54.5249|Info|      Executando timer: id:22, (12:13:54.5249)
2015-09-04 12:13:54.5249|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.5249|Info|      Encerrado timer: id:22, (12:13:54.5249)
2015-09-04 12:13:54.5561|Info|      Executando timer: id:25, (12:13:54.5561)
2015-09-04 12:13:54.5561|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.5561|Info|      Encerrado timer: id:25, (12:13:54.5561)
2015-09-04 12:13:54.5561|Info|      Executando timer: id:24, (12:13:54.5561)
2015-09-04 12:13:54.5561|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.5561|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:54.5561|Info|      Encerrado timer: id:24, (12:13:54.5561)
2015-09-04 12:13:54.5874|Info|      Executando timer: id:26, (12:13:54.5874)
2015-09-04 12:13:54.5874|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-04 12:13:54.5874|Info|  Settimeout: id:27, (13) ms
2015-09-04 12:13:54.5874|Info|      Encerrado timer: id:26, (12:13:54.5874)
2015-09-04 12:13:54.6030|Info|      Executando timer: id:27, (12:13:54.6030)
2015-09-04 12:13:54.6030|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.6030|Info|  Settimeout: id:28, (128) ms
2015-09-04 12:13:54.6030|Info|  Settimeout: id:29, (64) ms
2015-09-04 12:13:54.6030|Info|  Settimeout: id:30, (96) ms
2015-09-04 12:13:54.7436|Info|  Settimeout: id:31, (128) ms
2015-09-04 12:13:54.7436|Info|  Settimeout: id:32, (64) ms
2015-09-04 12:13:54.8842|Info|  Settimeout: id:33, (128) ms
2015-09-04 12:13:54.8842|Info|  Settimeout: id:34, (64) ms
2015-09-04 12:13:54.9311|Info|  Settimeout: id:35, (1) ms
2015-09-04 12:13:54.9311|Info|      Encerrado timer: id:27, (12:13:54.9311)
2015-09-04 12:13:54.9311|Info|      Executando timer: id:30, (12:13:54.9311)
2015-09-04 12:13:54.9311|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.9311|Info|  Settimeout: id:36, (96) ms
2015-09-04 12:13:54.9311|Info|      Encerrado timer: id:30, (12:13:54.9311)
2015-09-04 12:13:54.9468|Info|      Executando timer: id:35, (12:13:54.9468)
2015-09-04 12:13:54.9468|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-04 12:13:54.9468|Info|  Settimeout: id:37, (13) ms
2015-09-04 12:13:54.9468|Info|      Encerrado timer: id:35, (12:13:54.9468)
2015-09-04 12:13:54.9624|Info|      Executando timer: id:37, (12:13:54.9624)
2015-09-04 12:13:54.9624|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:54.9624|Info|  Settimeout: id:38, (64) ms
2015-09-04 12:13:54.9624|Info|  Settimeout: id:39, (32) ms
2015-09-04 12:13:54.9624|Info|  Settimeout: id:40, (128) ms
2015-09-04 12:13:54.9624|Info|      Encerrado timer: id:37, (12:13:54.9624)
2015-09-04 12:13:54.9624|Info|      Executando timer: id:34, (12:13:54.9624)
2015-09-04 12:13:54.9624|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:54.9624|Info|  Settimeout: id:41, (33) ms
2015-09-04 12:13:54.9624|Info|      Encerrado timer: id:34, (12:13:54.9624)
2015-09-04 12:13:55.0093|Info|      Executando timer: id:39, (12:13:55.0093)
2015-09-04 12:13:55.0093|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:55.0093|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:55.0093|Info|      Encerrado timer: id:39, (12:13:55.0093)
2015-09-04 12:13:55.0093|Info|      Executando timer: id:41, (12:13:55.0093)
2015-09-04 12:13:55.0093|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:55.0093|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:55.0093|Info|      Encerrado timer: id:41, (12:13:55.0093)
2015-09-04 12:13:55.0376|Info|      Executando timer: id:36, (12:13:55.0376)
2015-09-04 12:13:55.0376|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:55.0376|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:55.0376|Info|      Encerrado timer: id:36, (12:13:55.0396)
2015-09-04 12:13:55.1077|Info|      Executando timer: id:40, (12:13:55.1077)
2015-09-04 12:13:55.1077|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-04 12:13:55.1077|Info|  Settimeout: id:42, (13) ms
2015-09-04 12:13:55.1077|Info|      Encerrado timer: id:40, (12:13:55.1077)
2015-09-04 12:13:55.1233|Info|      Executando timer: id:42, (12:13:55.1233)
2015-09-04 12:13:55.1233|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.1233|Info|  Settimeout: id:43, (32) ms
2015-09-04 12:13:55.1233|Info|  Settimeout: id:44, (64) ms
2015-09-04 12:13:55.2014|Info|  Settimeout: id:45, (64) ms
2015-09-04 12:13:55.2014|Info|      Encerrado timer: id:42, (12:13:55.2014)
2015-09-04 12:13:55.2773|Info|      Executando timer: id:45, (12:13:55.2773)
2015-09-04 12:13:55.2773|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-04 12:13:55.2773|Info|  Settimeout: id:46, (13) ms
2015-09-04 12:13:55.2773|Info|      Encerrado timer: id:45, (12:13:55.2773)
2015-09-04 12:13:55.2930|Info|      Executando timer: id:46, (12:13:55.2930)
2015-09-04 12:13:55.2930|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.2930|Info|  Settimeout: id:47, (1) ms
2015-09-04 12:13:55.2930|Info|  Settimeout: id:48, (32) ms
2015-09-04 12:13:55.2930|Info|      Encerrado timer: id:46, (12:13:55.2930)
2015-09-04 12:13:55.3086|Info|      Executando timer: id:47, (12:13:55.3086)
2015-09-04 12:13:55.3086|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-04 12:13:55.3086|Info|      Encerrado timer: id:47, (12:13:55.3086)
2015-09-04 12:13:55.3398|Info|      Executando timer: id:48, (12:13:55.3398)
2015-09-04 12:13:55.3398|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-04 12:13:55.3398|Info|  Settimeout: id:49, (13) ms
2015-09-04 12:13:55.3398|Info|      Encerrado timer: id:48, (12:13:55.3398)
2015-09-04 12:13:55.3554|Info|      Executando timer: id:49, (12:13:55.3554)
2015-09-04 12:13:55.3554|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.3554|Info|  Settimeout: id:50, (1) ms
2015-09-04 12:13:55.3554|Info|  Settimeout: id:51, (32) ms
2015-09-04 12:13:55.3554|Info|      Encerrado timer: id:49, (12:13:55.3554)
2015-09-04 12:13:55.3711|Info|      Executando timer: id:50, (12:13:55.3711)
2015-09-04 12:13:55.3711|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-04 12:13:55.3711|Info|      Encerrado timer: id:50, (12:13:55.3711)
2015-09-04 12:13:55.4024|Info|      Executando timer: id:51, (12:13:55.4024)
2015-09-04 12:13:55.4024|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-04 12:13:55.4024|Info|  Settimeout: id:52, (13) ms
2015-09-04 12:13:55.4024|Info|      Encerrado timer: id:51, (12:13:55.4024)
2015-09-04 12:13:55.4180|Info|      Executando timer: id:52, (12:13:55.4180)
2015-09-04 12:13:55.4180|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.4180|Info|  Settimeout: id:53, (1) ms
2015-09-04 12:13:55.4180|Info|  Settimeout: id:54, (32) ms
2015-09-04 12:13:55.4180|Info|      Encerrado timer: id:52, (12:13:55.4180)
2015-09-04 12:13:55.4649|Info|      Executando timer: id:54, (12:13:55.4649)
2015-09-04 12:13:55.4649|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-04 12:13:55.4649|Info|  Settimeout: id:55, (13) ms
2015-09-04 12:13:55.4649|Info|      Encerrado timer: id:54, (12:13:55.4649)
2015-09-04 12:13:55.4805|Info|      Executando timer: id:55, (12:13:55.4805)
2015-09-04 12:13:55.4805|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.4805|Info|  Settimeout: id:56, (32) ms
2015-09-04 12:13:55.4805|Info|  Settimeout: id:57, (1) ms
2015-09-04 12:13:55.4805|Info|  Settimeout: id:58, (64) ms
2015-09-04 12:13:55.4805|Info|      Encerrado timer: id:55, (12:13:55.4805)
2015-09-04 12:13:55.4961|Info|      Executando timer: id:57, (12:13:55.4961)
2015-09-04 12:13:55.4961|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-04 12:13:55.4961|Info|      Encerrado timer: id:57, (12:13:55.4961)
2015-09-04 12:13:55.5274|Info|      Executando timer: id:56, (12:13:55.5274)
2015-09-04 12:13:55.5274|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-04 12:13:55.5274|Info|      Encerrado timer: id:56, (12:13:55.5274)
2015-09-04 12:13:55.5586|Info|      Executando timer: id:58, (12:13:55.5586)
2015-09-04 12:13:55.5586|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-04 12:13:55.5586|Info|  Settimeout: id:59, (13) ms
2015-09-04 12:13:55.5586|Info|      Encerrado timer: id:58, (12:13:55.5586)
2015-09-04 12:13:55.5742|Info|      Executando timer: id:59, (12:13:55.5742)
2015-09-04 12:13:55.5742|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.5742|Info|  Settimeout: id:60, (32) ms
2015-09-04 12:13:55.5742|Info|  Settimeout: id:61, (64) ms
2015-09-04 12:13:55.5742|Info|      Encerrado timer: id:59, (12:13:55.5742)
2015-09-04 12:13:55.6211|Info|      Executando timer: id:60, (12:13:55.6211)
2015-09-04 12:13:55.6211|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-04 12:13:55.6211|Info|      Encerrado timer: id:60, (12:13:55.6211)
2015-09-04 12:13:55.6524|Info|      Executando timer: id:61, (12:13:55.6524)
2015-09-04 12:13:55.6524|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-04 12:13:55.6524|Info|  Settimeout: id:62, (13) ms
2015-09-04 12:13:55.6524|Info|      Encerrado timer: id:61, (12:13:55.6524)
2015-09-04 12:13:55.6680|Info|      Executando timer: id:62, (12:13:55.6680)
2015-09-04 12:13:55.6680|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:55.6680|Info|  Settimeout: id:63, (32) ms
2015-09-04 12:13:55.6680|Info|  Settimeout: id:64, (64) ms
2015-09-04 12:13:55.6680|Info|      Encerrado timer: id:62, (12:13:55.6680)
2015-09-04 12:13:55.7461|Info|      Executando timer: id:64, (12:13:55.7461)
2015-09-04 12:13:55.7461|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-04 12:13:55.7461|Info|  Settimeout: id:65, (13) ms
2015-09-04 12:13:55.7461|Info|      Encerrado timer: id:64, (12:13:55.7461)
2015-09-04 12:13:55.7617|Info|      Executando timer: id:65, (12:13:55.7617)
2015-09-04 12:13:55.7617|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:57.5600|Info|  Settimeout: id:66, (13) ms
2015-09-04 12:13:57.5600|Info|      Encerrado timer: id:65, (12:13:57.5600)
2015-09-04 12:13:57.5756|Info|      Executando timer: id:66, (12:13:57.5756)
2015-09-04 12:13:57.5756|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-04 12:13:57.6381|Info|----------------------------------------
2015-09-04 12:13:57.6381|Info|lodash.isNil
2015-09-04 12:13:57.6381|Info|----------------------------------------
2015-09-04 12:13:57.6381|Info| FAIL - should work with nulls from another realm
2015-09-04 12:13:57.6381|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-04 12:13:57.8568|Info|  Settimeout: id:67, (32) ms
2015-09-04 12:13:57.8568|Info|      Encerrado timer: id:66, (12:13:57.8568)
2015-09-04 12:13:57.9037|Info|      Executando timer: id:67, (12:13:57.9037)
2015-09-04 12:13:57.9037|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-04 12:13:57.9037|Info|  Settimeout: id:68, (13) ms
2015-09-04 12:13:57.9037|Info|      Encerrado timer: id:67, (12:13:57.9037)
2015-09-04 12:13:57.9194|Info|      Executando timer: id:68, (12:13:57.9194)
2015-09-04 12:13:57.9194|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:58.0287|Info|  Settimeout: id:69, (32) ms
2015-09-04 12:13:58.0287|Info|  Settimeout: id:70, (64) ms
2015-09-04 12:13:58.0287|Info|      Encerrado timer: id:68, (12:13:58.0287)
2015-09-04 12:13:58.0756|Info|      Executando timer: id:69, (12:13:58.0756)
2015-09-04 12:13:58.0756|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:58.0756|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:58.0756|Info|      Encerrado timer: id:69, (12:13:58.0756)
2015-09-04 12:13:58.1054|Info|      Executando timer: id:70, (12:13:58.1054)
2015-09-04 12:13:58.1054|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-04 12:13:58.1054|Info|  Settimeout: id:71, (13) ms
2015-09-04 12:13:58.1054|Info|      Encerrado timer: id:70, (12:13:58.1073)
2015-09-04 12:13:58.1293|Info|      Executando timer: id:71, (12:13:58.1293)
2015-09-04 12:13:58.1293|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:58.1293|Info|  Settimeout: id:72, (32) ms
2015-09-04 12:13:58.1293|Info|  Settimeout: id:73, (64) ms
2015-09-04 12:13:58.1293|Info|      Encerrado timer: id:71, (12:13:58.1293)
2015-09-04 12:13:58.1762|Info|      Executando timer: id:72, (12:13:58.1762)
2015-09-04 12:13:58.1762|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:58.1762|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:58.1762|Info|      Encerrado timer: id:72, (12:13:58.1762)
2015-09-04 12:13:58.2075|Info|      Executando timer: id:73, (12:13:58.2075)
2015-09-04 12:13:58.2075|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-04 12:13:58.2075|Info|  Settimeout: id:74, (1) ms
2015-09-04 12:13:58.2075|Info|  Settimeout: id:75, (13) ms
2015-09-04 12:13:58.2075|Info|      Encerrado timer: id:73, (12:13:58.2075)
2015-09-04 12:13:58.2231|Info|      Executando timer: id:74, (12:13:58.2231)
2015-09-04 12:13:58.2231|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:58.2231|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:58.2231|Info|      Encerrado timer: id:74, (12:13:58.2231)
2015-09-04 12:13:58.2387|Info|      Executando timer: id:75, (12:13:58.2387)
2015-09-04 12:13:58.2387|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:58.2387|Info|  Settimeout: id:76, (32) ms
2015-09-04 12:13:58.2387|Info|  Settimeout: id:77, (64) ms
2015-09-04 12:13:58.2387|Info|      Encerrado timer: id:75, (12:13:58.2387)
2015-09-04 12:13:58.2856|Info|      Executando timer: id:76, (12:13:58.2856)
2015-09-04 12:13:58.2856|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:58.2856|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:58.2856|Info|      Encerrado timer: id:76, (12:13:58.2856)
2015-09-04 12:13:58.3168|Info|      Executando timer: id:77, (12:13:58.3168)
2015-09-04 12:13:58.3168|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-04 12:13:58.3168|Info|  Settimeout: id:78, (13) ms
2015-09-04 12:13:58.3168|Info|      Encerrado timer: id:77, (12:13:58.3168)
2015-09-04 12:13:58.3481|Info|      Executando timer: id:78, (12:13:58.3481)
2015-09-04 12:13:58.3481|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:58.3481|Info|  Settimeout: id:79, (64) ms
2015-09-04 12:13:58.3481|Info|      Encerrado timer: id:78, (12:13:58.3481)
2015-09-04 12:13:58.4262|Info|      Executando timer: id:79, (12:13:58.4262)
2015-09-04 12:13:58.4262|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-04 12:13:58.4262|Info|  Settimeout: id:80, (13) ms
2015-09-04 12:13:58.4262|Info|      Encerrado timer: id:79, (12:13:58.4262)
2015-09-04 12:13:58.4418|Info|      Executando timer: id:80, (12:13:58.4418)
2015-09-04 12:13:58.4418|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:58.4418|Info|  Settimeout: id:81, (32) ms
2015-09-04 12:13:58.4731|Info|  Settimeout: id:82, (32) ms
2015-09-04 12:13:58.5199|Info|  Settimeout: id:83, (32) ms
2015-09-04 12:13:58.5668|Info|  Settimeout: id:84, (32) ms
2015-09-04 12:13:58.5980|Info|  Settimeout: id:85, (32) ms
2015-09-04 12:13:58.6449|Info|  Settimeout: id:86, (32) ms
2015-09-04 12:13:58.6762|Info|  Settimeout: id:87, (32) ms
2015-09-04 12:13:58.7231|Info|  Settimeout: id:88, (32) ms
2015-09-04 12:13:58.7699|Info|  Settimeout: id:89, (1) ms
2015-09-04 12:13:58.7699|Info|      Encerrado timer: id:80, (12:13:58.7699)
2015-09-04 12:13:58.7699|Info|      Executando timer: id:88, (12:13:58.7699)
2015-09-04 12:13:58.7699|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:58.7699|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:58.7699|Info|      Encerrado timer: id:88, (12:13:58.7699)
2015-09-04 12:13:58.7856|Info|      Executando timer: id:89, (12:13:58.7856)
2015-09-04 12:13:58.7856|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-04 12:13:58.7856|Info|  Settimeout: id:90, (13) ms
2015-09-04 12:13:58.7856|Info|      Encerrado timer: id:89, (12:13:58.7856)
2015-09-04 12:13:58.8168|Info|      Executando timer: id:90, (12:13:58.8168)
2015-09-04 12:13:58.8168|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:58.8168|Info|  Settimeout: id:91, (32) ms
2015-09-04 12:13:58.8480|Info|  Settimeout: id:92, (32) ms
2015-09-04 12:13:58.8949|Info|  Settimeout: id:93, (32) ms
2015-09-04 12:13:58.9418|Info|  Settimeout: id:94, (32) ms
2015-09-04 12:13:58.9731|Info|  Settimeout: id:95, (32) ms
2015-09-04 12:13:59.0199|Info|  Settimeout: id:96, (32) ms
2015-09-04 12:13:59.0668|Info|  Settimeout: id:97, (32) ms
2015-09-04 12:13:59.0981|Info|  Settimeout: id:98, (32) ms
2015-09-04 12:13:59.1449|Info|  Settimeout: id:99, (1) ms
2015-09-04 12:13:59.1449|Info|      Encerrado timer: id:90, (12:13:59.1449)
2015-09-04 12:13:59.1606|Info|      Executando timer: id:99, (12:13:59.1606)
2015-09-04 12:13:59.1606|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-04 12:13:59.1606|Info|  Settimeout: id:100, (13) ms
2015-09-04 12:13:59.1606|Info|      Encerrado timer: id:99, (12:13:59.1606)
2015-09-04 12:13:59.1762|Info|      Executando timer: id:100, (12:13:59.1762)
2015-09-04 12:13:59.1762|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:59.1762|Info|  Settimeout: id:101, (32) ms
2015-09-04 12:13:59.1762|Info|  Settimeout: id:102, (128) ms
2015-09-04 12:13:59.1762|Info|      Encerrado timer: id:100, (12:13:59.1762)
2015-09-04 12:13:59.2231|Info|      Executando timer: id:101, (12:13:59.2231)
2015-09-04 12:13:59.2231|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:59.2231|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:59.2231|Info|      Encerrado timer: id:101, (12:13:59.2231)
2015-09-04 12:13:59.3168|Info|      Executando timer: id:102, (12:13:59.3168)
2015-09-04 12:13:59.3168|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-04 12:13:59.3168|Info|  Settimeout: id:103, (13) ms
2015-09-04 12:13:59.3168|Info|      Encerrado timer: id:102, (12:13:59.3168)
2015-09-04 12:13:59.3325|Info|      Executando timer: id:103, (12:13:59.3325)
2015-09-04 12:13:59.3325|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:59.3325|Info|  Settimeout: id:104, (32) ms
2015-09-04 12:13:59.3325|Info|  Settimeout: id:105, (64) ms
2015-09-04 12:13:59.3325|Info|  Settimeout: id:106, (64) ms
2015-09-04 12:13:59.3325|Info|  Settimeout: id:107, (256) ms
2015-09-04 12:13:59.3325|Info|      Encerrado timer: id:103, (12:13:59.3325)
2015-09-04 12:13:59.3795|Info|      Executando timer: id:104, (12:13:59.3795)
2015-09-04 12:13:59.3795|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:59.3795|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:59.3795|Info|      Encerrado timer: id:104, (12:13:59.3795)
2015-09-04 12:13:59.4107|Info|      Executando timer: id:105, (12:13:59.4107)
2015-09-04 12:13:59.4107|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:59.4107|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:59.4107|Info|      Encerrado timer: id:105, (12:13:59.4107)
2015-09-04 12:13:59.4107|Info|      Executando timer: id:106, (12:13:59.4107)
2015-09-04 12:13:59.4107|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:59.4107|Info|      Encerrado timer: id:106, (12:13:59.4107)
2015-09-04 12:13:59.5982|Info|      Executando timer: id:107, (12:13:59.5982)
2015-09-04 12:13:59.5982|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-04 12:13:59.5982|Info|  Settimeout: id:108, (13) ms
2015-09-04 12:13:59.5982|Info|      Encerrado timer: id:107, (12:13:59.5982)
2015-09-04 12:13:59.6139|Info|      Executando timer: id:108, (12:13:59.6139)
2015-09-04 12:13:59.6139|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:59.6139|Info|  Settimeout: id:109, (64) ms
2015-09-04 12:13:59.6139|Info|  Settimeout: id:110, (96) ms
2015-09-04 12:13:59.6139|Info|  Settimeout: id:111, (192) ms
2015-09-04 12:13:59.6139|Info|      Encerrado timer: id:108, (12:13:59.6139)
2015-09-04 12:13:59.6920|Info|      Executando timer: id:109, (12:13:59.6920)
2015-09-04 12:13:59.6920|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:59.6920|Info|      Encerrado timer: id:109, (12:13:59.6920)
2015-09-04 12:13:59.7232|Info|      Executando timer: id:110, (12:13:59.7232)
2015-09-04 12:13:59.7232|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-04 12:13:59.7232|Info|  Settimeout: id:112, (64) ms
2015-09-04 12:13:59.7232|Info|      Encerrado timer: id:110, (12:13:59.7232)
2015-09-04 12:13:59.8014|Info|      Executando timer: id:112, (12:13:59.8014)
2015-09-04 12:13:59.8014|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:13:59.8014|Info|      Encerrado timer: id:112, (12:13:59.8014)
2015-09-04 12:13:59.8170|Info|      Executando timer: id:111, (12:13:59.8170)
2015-09-04 12:13:59.8170|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-04 12:13:59.8170|Info|  Settimeout: id:113, (13) ms
2015-09-04 12:13:59.8170|Info|      Encerrado timer: id:111, (12:13:59.8170)
2015-09-04 12:13:59.8326|Info|      Executando timer: id:113, (12:13:59.8326)
2015-09-04 12:13:59.8326|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:59.8326|Info|  Settimeout: id:114, (0) ms
2015-09-04 12:13:59.8326|Info|  Settimeout: id:115, (32) ms
2015-09-04 12:13:59.8326|Info|      Encerrado timer: id:113, (12:13:59.8326)
2015-09-04 12:13:59.8326|Info|      Executando timer: id:114, (12:13:59.8326)
2015-09-04 12:13:59.8326|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:59.8326|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:59.8326|Info|      Encerrado timer: id:114, (12:13:59.8326)
2015-09-04 12:13:59.8795|Info|      Executando timer: id:115, (12:13:59.8795)
2015-09-04 12:13:59.8795|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-04 12:13:59.8795|Info|  Settimeout: id:116, (0) ms
2015-09-04 12:13:59.8795|Info|  Settimeout: id:117, (13) ms
2015-09-04 12:13:59.8795|Info|      Encerrado timer: id:115, (12:13:59.8795)
2015-09-04 12:13:59.8795|Info|      Executando timer: id:116, (12:13:59.8795)
2015-09-04 12:13:59.8795|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:59.8795|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:59.8795|Info|      Encerrado timer: id:116, (12:13:59.8795)
2015-09-04 12:13:59.9107|Info|      Executando timer: id:117, (12:13:59.9107)
2015-09-04 12:13:59.9107|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:13:59.9107|Info|  Settimeout: id:118, (32) ms
2015-09-04 12:13:59.9107|Info|  Settimeout: id:119, (64) ms
2015-09-04 12:13:59.9107|Info|      Encerrado timer: id:117, (12:13:59.9107)
2015-09-04 12:13:59.9576|Info|      Executando timer: id:118, (12:13:59.9576)
2015-09-04 12:13:59.9576|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:13:59.9576|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:13:59.9576|Info|      Encerrado timer: id:118, (12:13:59.9576)
2015-09-04 12:13:59.9889|Info|      Executando timer: id:119, (12:13:59.9889)
2015-09-04 12:13:59.9889|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-04 12:13:59.9889|Info|  Settimeout: id:120, (13) ms
2015-09-04 12:13:59.9889|Info|      Encerrado timer: id:119, (12:13:59.9889)
2015-09-04 12:14:00.0201|Info|      Executando timer: id:120, (12:14:00.0201)
2015-09-04 12:14:00.0201|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.0201|Info|  Settimeout: id:121, (32) ms
2015-09-04 12:14:00.0201|Info|  Settimeout: id:122, (256) ms
2015-09-04 12:14:00.0201|Info|      Encerrado timer: id:120, (12:14:00.0201)
2015-09-04 12:14:00.0670|Info|      Executando timer: id:121, (12:14:00.0670)
2015-09-04 12:14:00.0670|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:14:00.0670|Info|  Settimeout: id:123, (32) ms
2015-09-04 12:14:00.0670|Info|!timeoutId && !maxTimeoutId false
2015-09-04 12:14:00.0670|Info|      Encerrado timer: id:121, (12:14:00.0670)
2015-09-04 12:14:00.1139|Info|      Executando timer: id:123, (12:14:00.1139)
2015-09-04 12:14:00.1139|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:14:00.1139|Info|  Settimeout: id:124, (32) ms
2015-09-04 12:14:00.1139|Info|!timeoutId && !maxTimeoutId false
2015-09-04 12:14:00.1139|Info|      Encerrado timer: id:123, (12:14:00.1139)
2015-09-04 12:14:00.1607|Info|      Executando timer: id:124, (12:14:00.1607)
2015-09-04 12:14:00.1607|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:14:00.1607|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:14:00.1607|Info|      Encerrado timer: id:124, (12:14:00.1607)
2015-09-04 12:14:00.2857|Info|      Executando timer: id:122, (12:14:00.2857)
2015-09-04 12:14:00.2857|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-04 12:14:00.2857|Info|  Settimeout: id:125, (13) ms
2015-09-04 12:14:00.2857|Info|      Encerrado timer: id:122, (12:14:00.2857)
2015-09-04 12:14:00.3170|Info|      Executando timer: id:125, (12:14:00.3170)
2015-09-04 12:14:00.3170|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.3170|Info|  Settimeout: id:126, (32) ms
2015-09-04 12:14:00.3170|Info|  Settimeout: id:127, (64) ms
2015-09-04 12:14:00.3170|Info|      Encerrado timer: id:125, (12:14:00.3170)
2015-09-04 12:14:00.3639|Info|      Executando timer: id:126, (12:14:00.3639)
2015-09-04 12:14:00.3639|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:14:00.3639|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:14:00.3639|Info|      Encerrado timer: id:126, (12:14:00.3639)
2015-09-04 12:14:00.3951|Info|      Executando timer: id:127, (12:14:00.3951)
2015-09-04 12:14:00.3951|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-04 12:14:00.3951|Info|  Settimeout: id:128, (32) ms
2015-09-04 12:14:00.3951|Info|  Settimeout: id:129, (13) ms
2015-09-04 12:14:00.3951|Info|      Encerrado timer: id:127, (12:14:00.3951)
2015-09-04 12:14:00.4264|Info|      Executando timer: id:129, (12:14:00.4264)
2015-09-04 12:14:00.4264|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.4264|Info|  Settimeout: id:130, (32) ms
2015-09-04 12:14:00.4264|Info|  Settimeout: id:131, (64) ms
2015-09-04 12:14:00.4264|Info|      Encerrado timer: id:129, (12:14:00.4264)
2015-09-04 12:14:00.4420|Info|      Executando timer: id:128, (12:14:00.4420)
2015-09-04 12:14:00.4420|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:14:00.4420|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:14:00.4420|Info|      Encerrado timer: id:128, (12:14:00.4420)
2015-09-04 12:14:00.5045|Info|      Executando timer: id:131, (12:14:00.5045)
2015-09-04 12:14:00.5045|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-04 12:14:00.5045|Info|  Settimeout: id:132, (13) ms
2015-09-04 12:14:00.5045|Info|      Encerrado timer: id:131, (12:14:00.5045)
2015-09-04 12:14:00.5357|Info|      Executando timer: id:132, (12:14:00.5357)
2015-09-04 12:14:00.5357|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.5357|Info|  Settimeout: id:133, (32) ms
2015-09-04 12:14:00.5357|Info|  Settimeout: id:134, (32) ms
2015-09-04 12:14:00.5357|Info|  Settimeout: id:135, (64) ms
2015-09-04 12:14:00.5357|Info|      Encerrado timer: id:132, (12:14:00.5357)
2015-09-04 12:14:00.5826|Info|      Executando timer: id:134, (12:14:00.5826)
2015-09-04 12:14:00.5826|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-04 12:14:00.5826|Info|      Encerrado timer: id:134, (12:14:00.5826)
2015-09-04 12:14:00.6139|Info|      Executando timer: id:135, (12:14:00.6139)
2015-09-04 12:14:00.6139|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-04 12:14:00.6139|Info|  Settimeout: id:136, (13) ms
2015-09-04 12:14:00.6139|Info|      Encerrado timer: id:135, (12:14:00.6139)
2015-09-04 12:14:00.6295|Info|      Executando timer: id:136, (12:14:00.6295)
2015-09-04 12:14:00.6295|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.6295|Info|  Settimeout: id:137, (32) ms
2015-09-04 12:14:00.6295|Info|      Encerrado timer: id:136, (12:14:00.6295)
2015-09-04 12:14:00.6764|Info|      Executando timer: id:137, (12:14:00.6764)
2015-09-04 12:14:00.6764|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-04 12:14:00.6764|Info|  Settimeout: id:138, (13) ms
2015-09-04 12:14:00.6764|Info|      Encerrado timer: id:137, (12:14:00.6764)
2015-09-04 12:14:00.6920|Info|      Executando timer: id:138, (12:14:00.6920)
2015-09-04 12:14:00.6920|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.6920|Info|  Settimeout: id:139, (32) ms
2015-09-04 12:14:00.6920|Info|  Settimeout: id:140, (64) ms
2015-09-04 12:14:00.6920|Info|      Encerrado timer: id:138, (12:14:00.6920)
2015-09-04 12:14:00.7388|Info|      Executando timer: id:139, (12:14:00.7388)
2015-09-04 12:14:00.7388|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:14:00.7388|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:14:00.7388|Info|      Encerrado timer: id:139, (12:14:00.7388)
2015-09-04 12:14:00.7701|Info|      Executando timer: id:140, (12:14:00.7701)
2015-09-04 12:14:00.7701|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-04 12:14:00.7701|Info|  Settimeout: id:141, (13) ms
2015-09-04 12:14:00.7701|Info|      Encerrado timer: id:140, (12:14:00.7701)
2015-09-04 12:14:00.8014|Info|      Executando timer: id:141, (12:14:00.8014)
2015-09-04 12:14:00.8014|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:00.8014|Info|  Settimeout: id:142, (32) ms
2015-09-04 12:14:00.8014|Info|  Settimeout: id:143, (256) ms
2015-09-04 12:14:00.8014|Info|      Encerrado timer: id:141, (12:14:00.8014)
2015-09-04 12:14:00.8482|Info|      Executando timer: id:142, (12:14:00.8482)
2015-09-04 12:14:00.8482|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:14:00.8482|Info|  Settimeout: id:144, (32) ms
2015-09-04 12:14:00.8482|Info|!timeoutId && !maxTimeoutId false
2015-09-04 12:14:00.8482|Info|      Encerrado timer: id:142, (12:14:00.8482)
2015-09-04 12:14:00.8951|Info|      Executando timer: id:144, (12:14:00.8951)
2015-09-04 12:14:00.8951|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-04 12:14:00.8951|Info|!timeoutId && !maxTimeoutId true
2015-09-04 12:14:00.8951|Info|      Encerrado timer: id:144, (12:14:00.8951)
2015-09-04 12:14:01.0670|Info|      Executando timer: id:143, (12:14:01.0670)
2015-09-04 12:14:01.0670|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-04 12:14:01.0670|Info|  Settimeout: id:145, (13) ms
2015-09-04 12:14:01.0670|Info|      Encerrado timer: id:143, (12:14:01.0670)
2015-09-04 12:14:01.0982|Info|      Executando timer: id:145, (12:14:01.0982)
2015-09-04 12:14:01.0982|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:01.0982|Info|  Settimeout: id:146, (64) ms
2015-09-04 12:14:01.0982|Info|      Encerrado timer: id:145, (12:14:01.0982)
2015-09-04 12:14:01.1764|Info|      Executando timer: id:146, (12:14:01.1764)
2015-09-04 12:14:01.1764|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-04 12:14:01.1764|Info|  Settimeout: id:147, (13) ms
2015-09-04 12:14:01.1764|Info|      Encerrado timer: id:146, (12:14:01.1764)
2015-09-04 12:14:01.1920|Info|      Executando timer: id:147, (12:14:01.1920)
2015-09-04 12:14:01.1920|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:01.1920|Info|  Settimeout: id:148, (32) ms
2015-09-04 12:14:01.1920|Info|  Settimeout: id:149, (64) ms
2015-09-04 12:14:01.1920|Info|      Encerrado timer: id:147, (12:14:01.1920)
2015-09-04 12:14:01.2701|Info|      Executando timer: id:149, (12:14:01.2701)
2015-09-04 12:14:01.2701|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-04 12:14:01.2701|Info|  Settimeout: id:150, (13) ms
2015-09-04 12:14:01.2701|Info|      Encerrado timer: id:149, (12:14:01.2701)
2015-09-04 12:14:01.3013|Info|      Executando timer: id:150, (12:14:01.3013)
2015-09-04 12:14:01.3013|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:01.3013|Info|  Settimeout: id:151, (64) ms
2015-09-04 12:14:01.3013|Info|      Encerrado timer: id:150, (12:14:01.3013)
2015-09-04 12:14:01.3797|Info|      Executando timer: id:151, (12:14:01.3797)
2015-09-04 12:14:01.3797|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-04 12:14:01.3797|Info|  Settimeout: id:152, (13) ms
2015-09-04 12:14:01.3797|Info|      Encerrado timer: id:151, (12:14:01.3797)
2015-09-04 12:14:01.4110|Info|      Executando timer: id:152, (12:14:01.4110)
2015-09-04 12:14:01.4110|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-04 12:14:01.4890|Info|----------------------------------------
2015-09-04 12:14:01.4890|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-04 12:14:01.4890|Info|    Finished in 7715 milliseconds.
2015-09-04 12:14:01.4890|Info|----------------------------------------
2015-09-04 12:14:01.5047|Info|      Encerrado timer: id:152, (12:14:01.5047)
2015-09-04 12:14:01.5047|Info|Encerrando os testes
2015-09-04 12:14:01.5047|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-04 12:14:01.5047|Info| 8 segundos para avaliar o individuo lodash.js
2015-09-04 12:14:01.5047|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime:lodashTest:7765:5
    at V8Runtime:lodashTest:7774:4
    at V8Runtime:lodashTest:17424:3
2015-09-05 17:18:40.8284|Info|ast gerada com sucesso
2015-09-05 17:18:40.8597|Info| 658,7063 ms
2015-09-05 17:18:42.0003|Info|"callee"
2015-09-05 17:18:42.0003|Info|1
2015-09-05 17:18:42.0003|Info|"callee"
2015-09-05 17:18:42.0003|Info|1
2015-09-05 17:18:42.0003|Info|"callee"
2015-09-05 17:18:42.0003|Info|1
2015-09-05 17:18:48.6619|Info|Codigo gerado com sucesso
2015-09-05 17:18:48.6619|Info| 713,186 ms
2015-09-05 17:18:49.7088|Info|Iniciando os testes
2015-09-05 17:18:49.7088|Info|  Settimeout: id:0, (13) ms
2015-09-05 17:18:49.7401|Info|      Executando timer: id:0, (17:18:49.7401)
2015-09-05 17:18:49.7401|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:49.7557|Info|  Settimeout: id:1, (13) ms
2015-09-05 17:18:49.7557|Info|      Encerrado timer: id:0, (17:18:49.7557)
2015-09-05 17:18:49.7870|Info|      Executando timer: id:1, (17:18:49.7870)
2015-09-05 17:18:49.7870|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:49.8338|Info|  Settimeout: id:2, (32) ms
2015-09-05 17:18:49.8494|Info|  Settimeout: id:3, (96) ms
2015-09-05 17:18:49.8494|Info|      Encerrado timer: id:1, (17:18:49.8494)
2015-09-05 17:18:49.8963|Info|      Executando timer: id:2, (17:18:49.8963)
2015-09-05 17:18:49.8963|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:49.8963|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:49.8963|Info|      Encerrado timer: id:2, (17:18:49.8963)
2015-09-05 17:18:49.9588|Info|      Executando timer: id:3, (17:18:49.9588)
2015-09-05 17:18:49.9588|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:18:49.9588|Info|  Settimeout: id:4, (13) ms
2015-09-05 17:18:49.9588|Info|      Encerrado timer: id:3, (17:18:49.9588)
2015-09-05 17:18:49.9745|Info|      Executando timer: id:4, (17:18:49.9745)
2015-09-05 17:18:49.9745|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:49.9745|Info|  Settimeout: id:5, (32) ms
2015-09-05 17:18:49.9745|Info|  Settimeout: id:6, (64) ms
2015-09-05 17:18:49.9745|Info|  Settimeout: id:7, (128) ms
2015-09-05 17:18:49.9745|Info|      Encerrado timer: id:4, (17:18:49.9745)
2015-09-05 17:18:50.0213|Info|      Executando timer: id:5, (17:18:50.0213)
2015-09-05 17:18:50.0213|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.0213|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.0213|Info|      Encerrado timer: id:5, (17:18:50.0213)
2015-09-05 17:18:50.0526|Info|      Executando timer: id:6, (17:18:50.0526)
2015-09-05 17:18:50.0526|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 17:18:50.0526|Info|  Settimeout: id:8, (32) ms
2015-09-05 17:18:50.0526|Info|      Encerrado timer: id:6, (17:18:50.0526)
2015-09-05 17:18:50.0995|Info|      Executando timer: id:8, (17:18:50.0995)
2015-09-05 17:18:50.0995|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.0995|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.0995|Info|      Encerrado timer: id:8, (17:18:50.0995)
2015-09-05 17:18:50.1151|Info|      Executando timer: id:7, (17:18:50.1151)
2015-09-05 17:18:50.1151|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 17:18:50.1151|Info|  Settimeout: id:9, (32) ms
2015-09-05 17:18:50.1151|Info|  Settimeout: id:10, (13) ms
2015-09-05 17:18:50.1151|Info|      Encerrado timer: id:7, (17:18:50.1151)
2015-09-05 17:18:50.1463|Info|      Executando timer: id:10, (17:18:50.1463)
2015-09-05 17:18:50.1463|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:50.1463|Info|  Settimeout: id:11, (32) ms
2015-09-05 17:18:50.1463|Info|  Settimeout: id:12, (64) ms
2015-09-05 17:18:50.1463|Info|      Encerrado timer: id:10, (17:18:50.1463)
2015-09-05 17:18:50.1620|Info|      Executando timer: id:9, (17:18:50.1620)
2015-09-05 17:18:50.1620|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.1620|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.1620|Info|      Encerrado timer: id:9, (17:18:50.1620)
2015-09-05 17:18:50.1932|Info|      Executando timer: id:11, (17:18:50.1932)
2015-09-05 17:18:50.1932|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.1932|Info|      Encerrado timer: id:11, (17:18:50.1932)
2015-09-05 17:18:50.2245|Info|      Executando timer: id:12, (17:18:50.2245)
2015-09-05 17:18:50.2245|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 17:18:50.2245|Info|  Settimeout: id:13, (32) ms
2015-09-05 17:18:50.2245|Info|  Settimeout: id:14, (13) ms
2015-09-05 17:18:50.2245|Info|      Encerrado timer: id:12, (17:18:50.2245)
2015-09-05 17:18:50.2557|Info|      Executando timer: id:14, (17:18:50.2557)
2015-09-05 17:18:50.2557|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:50.2557|Info|  Settimeout: id:15, (32) ms
2015-09-05 17:18:50.2557|Info|  Settimeout: id:16, (64) ms
2015-09-05 17:18:50.2557|Info|      Encerrado timer: id:14, (17:18:50.2557)
2015-09-05 17:18:50.2713|Info|      Executando timer: id:13, (17:18:50.2713)
2015-09-05 17:18:50.2713|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.2713|Info|      Encerrado timer: id:13, (17:18:50.2713)
2015-09-05 17:18:50.3026|Info|      Executando timer: id:15, (17:18:50.3026)
2015-09-05 17:18:50.3026|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.3026|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.3026|Info|      Encerrado timer: id:15, (17:18:50.3026)
2015-09-05 17:18:50.3338|Info|      Executando timer: id:16, (17:18:50.3338)
2015-09-05 17:18:50.3338|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:18:50.3338|Info|  Settimeout: id:17, (13) ms
2015-09-05 17:18:50.3338|Info|      Encerrado timer: id:16, (17:18:50.3338)
2015-09-05 17:18:50.3651|Info|      Executando timer: id:17, (17:18:50.3651)
2015-09-05 17:18:50.3651|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:50.3651|Info|  Settimeout: id:18, (32) ms
2015-09-05 17:18:50.3651|Info|  Settimeout: id:19, (32) ms
2015-09-05 17:18:50.3651|Info|  Settimeout: id:20, (32) ms
2015-09-05 17:18:50.3651|Info|  Settimeout: id:21, (64) ms
2015-09-05 17:18:50.3651|Info|      Encerrado timer: id:17, (17:18:50.3651)
2015-09-05 17:18:50.4119|Info|      Executando timer: id:18, (17:18:50.4119)
2015-09-05 17:18:50.4119|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.4119|Info|      Encerrado timer: id:18, (17:18:50.4119)
2015-09-05 17:18:50.4119|Info|      Executando timer: id:20, (17:18:50.4119)
2015-09-05 17:18:50.4119|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.4119|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.4119|Info|      Encerrado timer: id:20, (17:18:50.4119)
2015-09-05 17:18:50.4119|Info|      Executando timer: id:19, (17:18:50.4119)
2015-09-05 17:18:50.4119|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.4119|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.4119|Info|      Encerrado timer: id:19, (17:18:50.4119)
2015-09-05 17:18:50.4437|Info|      Executando timer: id:21, (17:18:50.4437)
2015-09-05 17:18:50.4437|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 17:18:50.4437|Info|  Settimeout: id:22, (32) ms
2015-09-05 17:18:50.4437|Info|  Settimeout: id:23, (13) ms
2015-09-05 17:18:50.4437|Info|      Encerrado timer: id:21, (17:18:50.4437)
2015-09-05 17:18:50.4750|Info|      Executando timer: id:23, (17:18:50.4750)
2015-09-05 17:18:50.4750|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:50.4750|Info|  Settimeout: id:24, (32) ms
2015-09-05 17:18:50.4750|Info|  Settimeout: id:25, (32) ms
2015-09-05 17:18:50.4750|Info|  Settimeout: id:26, (64) ms
2015-09-05 17:18:50.4750|Info|      Encerrado timer: id:23, (17:18:50.4750)
2015-09-05 17:18:50.4906|Info|      Executando timer: id:22, (17:18:50.4906)
2015-09-05 17:18:50.4906|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.4906|Info|      Encerrado timer: id:22, (17:18:50.4906)
2015-09-05 17:18:50.5218|Info|      Executando timer: id:24, (17:18:50.5218)
2015-09-05 17:18:50.5218|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.5218|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.5218|Info|      Encerrado timer: id:24, (17:18:50.5218)
2015-09-05 17:18:50.5218|Info|      Executando timer: id:25, (17:18:50.5218)
2015-09-05 17:18:50.5218|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.5218|Info|      Encerrado timer: id:25, (17:18:50.5218)
2015-09-05 17:18:50.5531|Info|      Executando timer: id:26, (17:18:50.5531)
2015-09-05 17:18:50.5531|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 17:18:50.5531|Info|  Settimeout: id:27, (13) ms
2015-09-05 17:18:50.5531|Info|      Encerrado timer: id:26, (17:18:50.5531)
2015-09-05 17:18:50.5687|Info|      Executando timer: id:27, (17:18:50.5687)
2015-09-05 17:18:50.5687|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:50.5687|Info|  Settimeout: id:28, (128) ms
2015-09-05 17:18:50.5687|Info|  Settimeout: id:29, (64) ms
2015-09-05 17:18:50.5687|Info|  Settimeout: id:30, (96) ms
2015-09-05 17:18:50.7093|Info|  Settimeout: id:31, (128) ms
2015-09-05 17:18:50.7093|Info|  Settimeout: id:32, (64) ms
2015-09-05 17:18:50.8499|Info|  Settimeout: id:33, (128) ms
2015-09-05 17:18:50.8499|Info|  Settimeout: id:34, (64) ms
2015-09-05 17:18:50.8968|Info|  Settimeout: id:35, (1) ms
2015-09-05 17:18:50.8968|Info|      Encerrado timer: id:27, (17:18:50.8968)
2015-09-05 17:18:50.8968|Info|      Executando timer: id:30, (17:18:50.8968)
2015-09-05 17:18:50.8968|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.8968|Info|  Settimeout: id:36, (80) ms
2015-09-05 17:18:50.8968|Info|      Encerrado timer: id:30, (17:18:50.8968)
2015-09-05 17:18:50.9124|Info|      Executando timer: id:35, (17:18:50.9124)
2015-09-05 17:18:50.9124|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 17:18:50.9124|Info|  Settimeout: id:37, (13) ms
2015-09-05 17:18:50.9124|Info|      Encerrado timer: id:35, (17:18:50.9124)
2015-09-05 17:18:50.9281|Info|      Executando timer: id:34, (17:18:50.9281)
2015-09-05 17:18:50.9281|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.9281|Info|  Settimeout: id:38, (17) ms
2015-09-05 17:18:50.9281|Info|      Encerrado timer: id:34, (17:18:50.9281)
2015-09-05 17:18:50.9437|Info|      Executando timer: id:37, (17:18:50.9437)
2015-09-05 17:18:50.9437|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:50.9437|Info|  Settimeout: id:39, (64) ms
2015-09-05 17:18:50.9437|Info|  Settimeout: id:40, (32) ms
2015-09-05 17:18:50.9437|Info|  Settimeout: id:41, (128) ms
2015-09-05 17:18:50.9437|Info|      Encerrado timer: id:37, (17:18:50.9437)
2015-09-05 17:18:50.9593|Info|      Executando timer: id:38, (17:18:50.9593)
2015-09-05 17:18:50.9593|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.9593|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.9593|Info|      Encerrado timer: id:38, (17:18:50.9593)
2015-09-05 17:18:50.9906|Info|      Executando timer: id:40, (17:18:50.9906)
2015-09-05 17:18:50.9906|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.9906|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.9906|Info|      Encerrado timer: id:40, (17:18:50.9906)
2015-09-05 17:18:50.9906|Info|      Executando timer: id:36, (17:18:50.9906)
2015-09-05 17:18:50.9906|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:50.9906|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:50.9906|Info|      Encerrado timer: id:36, (17:18:50.9906)
2015-09-05 17:18:51.0843|Info|      Executando timer: id:41, (17:18:51.0843)
2015-09-05 17:18:51.0843|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:18:51.0843|Info|  Settimeout: id:42, (13) ms
2015-09-05 17:18:51.0843|Info|      Encerrado timer: id:41, (17:18:51.0843)
2015-09-05 17:18:51.1156|Info|      Executando timer: id:42, (17:18:51.1156)
2015-09-05 17:18:51.1156|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.1156|Info|  Settimeout: id:43, (32) ms
2015-09-05 17:18:51.1156|Info|  Settimeout: id:44, (64) ms
2015-09-05 17:18:51.1937|Info|  Settimeout: id:45, (64) ms
2015-09-05 17:18:51.1937|Info|      Encerrado timer: id:42, (17:18:51.1937)
2015-09-05 17:18:51.2718|Info|      Executando timer: id:45, (17:18:51.2718)
2015-09-05 17:18:51.2718|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 17:18:51.2718|Info|  Settimeout: id:46, (13) ms
2015-09-05 17:18:51.2718|Info|      Encerrado timer: id:45, (17:18:51.2718)
2015-09-05 17:18:51.3030|Info|      Executando timer: id:46, (17:18:51.3030)
2015-09-05 17:18:51.3030|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.3030|Info|  Settimeout: id:47, (1) ms
2015-09-05 17:18:51.3030|Info|  Settimeout: id:48, (32) ms
2015-09-05 17:18:51.3030|Info|      Encerrado timer: id:46, (17:18:51.3030)
2015-09-05 17:18:51.3187|Info|      Executando timer: id:47, (17:18:51.3187)
2015-09-05 17:18:51.3187|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:18:51.3187|Info|      Encerrado timer: id:47, (17:18:51.3187)
2015-09-05 17:18:51.3499|Info|      Executando timer: id:48, (17:18:51.3499)
2015-09-05 17:18:51.3499|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:18:51.3499|Info|  Settimeout: id:49, (13) ms
2015-09-05 17:18:51.3499|Info|      Encerrado timer: id:48, (17:18:51.3499)
2015-09-05 17:18:51.3812|Info|      Executando timer: id:49, (17:18:51.3812)
2015-09-05 17:18:51.3812|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.3812|Info|  Settimeout: id:50, (1) ms
2015-09-05 17:18:51.3812|Info|  Settimeout: id:51, (32) ms
2015-09-05 17:18:51.3812|Info|      Encerrado timer: id:49, (17:18:51.3812)
2015-09-05 17:18:51.3968|Info|      Executando timer: id:50, (17:18:51.3968)
2015-09-05 17:18:51.3968|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:18:51.3968|Info|      Encerrado timer: id:50, (17:18:51.3968)
2015-09-05 17:18:51.4281|Info|      Executando timer: id:51, (17:18:51.4281)
2015-09-05 17:18:51.4281|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 17:18:51.4281|Info|  Settimeout: id:52, (13) ms
2015-09-05 17:18:51.4281|Info|      Encerrado timer: id:51, (17:18:51.4281)
2015-09-05 17:18:51.4593|Info|      Executando timer: id:52, (17:18:51.4593)
2015-09-05 17:18:51.4593|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.4593|Info|  Settimeout: id:53, (1) ms
2015-09-05 17:18:51.4593|Info|  Settimeout: id:54, (32) ms
2015-09-05 17:18:51.4593|Info|      Encerrado timer: id:52, (17:18:51.4593)
2015-09-05 17:18:51.5062|Info|      Executando timer: id:54, (17:18:51.5062)
2015-09-05 17:18:51.5062|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:18:51.5062|Info|  Settimeout: id:55, (13) ms
2015-09-05 17:18:51.5062|Info|      Encerrado timer: id:54, (17:18:51.5062)
2015-09-05 17:18:51.5218|Info|      Executando timer: id:55, (17:18:51.5218)
2015-09-05 17:18:51.5218|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.5218|Info|  Settimeout: id:56, (32) ms
2015-09-05 17:18:51.5218|Info|  Settimeout: id:57, (1) ms
2015-09-05 17:18:51.5218|Info|  Settimeout: id:58, (64) ms
2015-09-05 17:18:51.5218|Info|      Encerrado timer: id:55, (17:18:51.5218)
2015-09-05 17:18:51.5374|Info|      Executando timer: id:57, (17:18:51.5374)
2015-09-05 17:18:51.5374|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 17:18:51.5374|Info|      Encerrado timer: id:57, (17:18:51.5374)
2015-09-05 17:18:51.5687|Info|      Executando timer: id:56, (17:18:51.5687)
2015-09-05 17:18:51.5687|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:18:51.5687|Info|      Encerrado timer: id:56, (17:18:51.5687)
2015-09-05 17:18:51.6000|Info|      Executando timer: id:58, (17:18:51.6000)
2015-09-05 17:18:51.6000|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:18:51.6000|Info|  Settimeout: id:59, (13) ms
2015-09-05 17:18:51.6000|Info|      Encerrado timer: id:58, (17:18:51.6000)
2015-09-05 17:18:51.6156|Info|      Executando timer: id:59, (17:18:51.6156)
2015-09-05 17:18:51.6156|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.6156|Info|  Settimeout: id:60, (32) ms
2015-09-05 17:18:51.6156|Info|  Settimeout: id:61, (64) ms
2015-09-05 17:18:51.6156|Info|      Encerrado timer: id:59, (17:18:51.6156)
2015-09-05 17:18:51.6625|Info|      Executando timer: id:60, (17:18:51.6625)
2015-09-05 17:18:51.6625|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:18:51.6625|Info|      Encerrado timer: id:60, (17:18:51.6625)
2015-09-05 17:18:51.6937|Info|      Executando timer: id:61, (17:18:51.6937)
2015-09-05 17:18:51.6937|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 17:18:51.6937|Info|  Settimeout: id:62, (13) ms
2015-09-05 17:18:51.6937|Info|      Encerrado timer: id:61, (17:18:51.6937)
2015-09-05 17:18:51.7094|Info|      Executando timer: id:62, (17:18:51.7094)
2015-09-05 17:18:51.7094|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:51.7094|Info|  Settimeout: id:63, (32) ms
2015-09-05 17:18:51.7094|Info|  Settimeout: id:64, (64) ms
2015-09-05 17:18:51.7094|Info|      Encerrado timer: id:62, (17:18:51.7094)
2015-09-05 17:18:51.7874|Info|      Executando timer: id:64, (17:18:51.7874)
2015-09-05 17:18:51.7874|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:18:51.7874|Info|  Settimeout: id:65, (13) ms
2015-09-05 17:18:51.7874|Info|      Encerrado timer: id:64, (17:18:51.7874)
2015-09-05 17:18:51.8187|Info|      Executando timer: id:65, (17:18:51.8187)
2015-09-05 17:18:51.8187|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:54.0845|Info|  Settimeout: id:66, (13) ms
2015-09-05 17:18:54.0845|Info|      Encerrado timer: id:65, (17:18:54.0845)
2015-09-05 17:18:54.1158|Info|      Executando timer: id:66, (17:18:54.1158)
2015-09-05 17:18:54.1158|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 17:18:54.1783|Info|----------------------------------------
2015-09-05 17:18:54.1783|Info|lodash.isNil
2015-09-05 17:18:54.1783|Info|----------------------------------------
2015-09-05 17:18:54.1783|Info| FAIL - should work with nulls from another realm
2015-09-05 17:18:54.1783|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 17:18:54.4298|Info|  Settimeout: id:67, (32) ms
2015-09-05 17:18:54.4298|Info|      Encerrado timer: id:66, (17:18:54.4298)
2015-09-05 17:18:54.4767|Info|      Executando timer: id:67, (17:18:54.4767)
2015-09-05 17:18:54.4767|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 17:18:54.4767|Info|  Settimeout: id:68, (13) ms
2015-09-05 17:18:54.4767|Info|      Encerrado timer: id:67, (17:18:54.4767)
2015-09-05 17:18:54.5079|Info|      Executando timer: id:68, (17:18:54.5079)
2015-09-05 17:18:54.5079|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:54.6329|Info|  Settimeout: id:69, (32) ms
2015-09-05 17:18:54.6329|Info|  Settimeout: id:70, (64) ms
2015-09-05 17:18:54.6329|Info|      Encerrado timer: id:68, (17:18:54.6329)
2015-09-05 17:18:54.6799|Info|      Executando timer: id:69, (17:18:54.6799)
2015-09-05 17:18:54.6799|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:54.6799|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:54.6799|Info|      Encerrado timer: id:69, (17:18:54.6799)
2015-09-05 17:18:54.7111|Info|      Executando timer: id:70, (17:18:54.7111)
2015-09-05 17:18:54.7111|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 17:18:54.7111|Info|  Settimeout: id:71, (13) ms
2015-09-05 17:18:54.7111|Info|      Encerrado timer: id:70, (17:18:54.7111)
2015-09-05 17:18:54.7424|Info|      Executando timer: id:71, (17:18:54.7424)
2015-09-05 17:18:54.7424|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:54.7424|Info|  Settimeout: id:72, (32) ms
2015-09-05 17:18:54.7424|Info|  Settimeout: id:73, (64) ms
2015-09-05 17:18:54.7424|Info|      Encerrado timer: id:71, (17:18:54.7424)
2015-09-05 17:18:54.7893|Info|      Executando timer: id:72, (17:18:54.7893)
2015-09-05 17:18:54.7893|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:54.7893|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:54.7893|Info|      Encerrado timer: id:72, (17:18:54.7893)
2015-09-05 17:18:54.8205|Info|      Executando timer: id:73, (17:18:54.8205)
2015-09-05 17:18:54.8205|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 17:18:54.8205|Info|  Settimeout: id:74, (1) ms
2015-09-05 17:18:54.8205|Info|  Settimeout: id:75, (13) ms
2015-09-05 17:18:54.8205|Info|      Encerrado timer: id:73, (17:18:54.8205)
2015-09-05 17:18:54.8361|Info|      Executando timer: id:74, (17:18:54.8361)
2015-09-05 17:18:54.8361|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:54.8361|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:54.8361|Info|      Encerrado timer: id:74, (17:18:54.8361)
2015-09-05 17:18:54.8518|Info|      Executando timer: id:75, (17:18:54.8518)
2015-09-05 17:18:54.8518|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:54.8518|Info|  Settimeout: id:76, (32) ms
2015-09-05 17:18:54.8518|Info|  Settimeout: id:77, (64) ms
2015-09-05 17:18:54.8518|Info|      Encerrado timer: id:75, (17:18:54.8518)
2015-09-05 17:18:54.8986|Info|      Executando timer: id:76, (17:18:54.8986)
2015-09-05 17:18:54.8986|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:54.8986|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:54.8986|Info|      Encerrado timer: id:76, (17:18:54.8986)
2015-09-05 17:18:54.9299|Info|      Executando timer: id:77, (17:18:54.9299)
2015-09-05 17:18:54.9299|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:18:54.9299|Info|  Settimeout: id:78, (13) ms
2015-09-05 17:18:54.9299|Info|      Encerrado timer: id:77, (17:18:54.9299)
2015-09-05 17:18:54.9611|Info|      Executando timer: id:78, (17:18:54.9611)
2015-09-05 17:18:54.9611|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:54.9611|Info|  Settimeout: id:79, (64) ms
2015-09-05 17:18:54.9611|Info|      Encerrado timer: id:78, (17:18:54.9611)
2015-09-05 17:18:55.0393|Info|      Executando timer: id:79, (17:18:55.0393)
2015-09-05 17:18:55.0393|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:18:55.0393|Info|  Settimeout: id:80, (13) ms
2015-09-05 17:18:55.0393|Info|      Encerrado timer: id:79, (17:18:55.0393)
2015-09-05 17:18:55.0705|Info|      Executando timer: id:80, (17:18:55.0705)
2015-09-05 17:18:55.0705|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:55.0705|Info|  Settimeout: id:81, (32) ms
2015-09-05 17:18:55.1017|Info|  Settimeout: id:82, (32) ms
2015-09-05 17:18:55.1486|Info|  Settimeout: id:83, (32) ms
2015-09-05 17:18:55.1798|Info|  Settimeout: id:84, (32) ms
2015-09-05 17:18:55.2267|Info|  Settimeout: id:85, (32) ms
2015-09-05 17:18:55.2580|Info|  Settimeout: id:86, (32) ms
2015-09-05 17:18:55.3048|Info|  Settimeout: id:87, (32) ms
2015-09-05 17:18:55.3517|Info|  Settimeout: id:88, (32) ms
2015-09-05 17:18:55.3986|Info|  Settimeout: id:89, (1) ms
2015-09-05 17:18:55.3986|Info|      Encerrado timer: id:80, (17:18:55.3986)
2015-09-05 17:18:55.4142|Info|      Executando timer: id:89, (17:18:55.4142)
2015-09-05 17:18:55.4142|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 17:18:55.4142|Info|  Settimeout: id:90, (13) ms
2015-09-05 17:18:55.4142|Info|      Encerrado timer: id:89, (17:18:55.4142)
2015-09-05 17:18:55.4455|Info|      Executando timer: id:90, (17:18:55.4455)
2015-09-05 17:18:55.4455|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:55.4455|Info|  Settimeout: id:91, (32) ms
2015-09-05 17:18:55.4923|Info|  Settimeout: id:92, (32) ms
2015-09-05 17:18:55.5392|Info|  Settimeout: id:93, (32) ms
2015-09-05 17:18:55.5861|Info|  Settimeout: id:94, (32) ms
2015-09-05 17:18:55.6330|Info|  Settimeout: id:95, (32) ms
2015-09-05 17:18:55.6798|Info|  Settimeout: id:96, (32) ms
2015-09-05 17:18:55.7267|Info|  Settimeout: id:97, (32) ms
2015-09-05 17:18:55.7736|Info|  Settimeout: id:98, (1) ms
2015-09-05 17:18:55.7736|Info|      Encerrado timer: id:90, (17:18:55.7736)
2015-09-05 17:18:55.7736|Info|      Executando timer: id:97, (17:18:55.7736)
2015-09-05 17:18:55.7736|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:55.7736|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:55.7736|Info|      Encerrado timer: id:97, (17:18:55.7736)
2015-09-05 17:18:55.7892|Info|      Executando timer: id:98, (17:18:55.7892)
2015-09-05 17:18:55.7892|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 17:18:55.7892|Info|  Settimeout: id:99, (13) ms
2015-09-05 17:18:55.7892|Info|      Encerrado timer: id:98, (17:18:55.7892)
2015-09-05 17:18:55.8205|Info|      Executando timer: id:99, (17:18:55.8205)
2015-09-05 17:18:55.8205|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:55.8205|Info|  Settimeout: id:100, (32) ms
2015-09-05 17:18:55.8205|Info|  Settimeout: id:101, (128) ms
2015-09-05 17:18:55.8205|Info|      Encerrado timer: id:99, (17:18:55.8205)
2015-09-05 17:18:55.8674|Info|      Executando timer: id:100, (17:18:55.8674)
2015-09-05 17:18:55.8674|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:55.8674|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:55.8674|Info|      Encerrado timer: id:100, (17:18:55.8674)
2015-09-05 17:18:55.9611|Info|      Executando timer: id:101, (17:18:55.9611)
2015-09-05 17:18:55.9611|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:18:55.9611|Info|  Settimeout: id:102, (13) ms
2015-09-05 17:18:55.9611|Info|      Encerrado timer: id:101, (17:18:55.9611)
2015-09-05 17:18:55.9924|Info|      Executando timer: id:102, (17:18:55.9924)
2015-09-05 17:18:55.9924|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:55.9924|Info|  Settimeout: id:103, (32) ms
2015-09-05 17:18:55.9924|Info|  Settimeout: id:104, (64) ms
2015-09-05 17:18:55.9924|Info|  Settimeout: id:105, (64) ms
2015-09-05 17:18:55.9924|Info|  Settimeout: id:106, (256) ms
2015-09-05 17:18:55.9924|Info|      Encerrado timer: id:102, (17:18:55.9924)
2015-09-05 17:18:56.0393|Info|      Executando timer: id:103, (17:18:56.0393)
2015-09-05 17:18:56.0393|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:56.0393|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:56.0393|Info|      Encerrado timer: id:103, (17:18:56.0393)
2015-09-05 17:18:56.0705|Info|      Executando timer: id:104, (17:18:56.0705)
2015-09-05 17:18:56.0705|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:56.0705|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:56.0705|Info|      Encerrado timer: id:104, (17:18:56.0705)
2015-09-05 17:18:56.0705|Info|      Executando timer: id:105, (17:18:56.0705)
2015-09-05 17:18:56.0705|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:56.0705|Info|      Encerrado timer: id:105, (17:18:56.0705)
2015-09-05 17:18:56.2580|Info|      Executando timer: id:106, (17:18:56.2580)
2015-09-05 17:18:56.2580|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 17:18:56.2580|Info|  Settimeout: id:107, (13) ms
2015-09-05 17:18:56.2580|Info|      Encerrado timer: id:106, (17:18:56.2580)
2015-09-05 17:18:56.2892|Info|      Executando timer: id:107, (17:18:56.2892)
2015-09-05 17:18:56.2892|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:56.2892|Info|  Settimeout: id:108, (64) ms
2015-09-05 17:18:56.2892|Info|  Settimeout: id:109, (96) ms
2015-09-05 17:18:56.2892|Info|  Settimeout: id:110, (192) ms
2015-09-05 17:18:56.2892|Info|      Encerrado timer: id:107, (17:18:56.2892)
2015-09-05 17:18:56.3674|Info|      Executando timer: id:108, (17:18:56.3674)
2015-09-05 17:18:56.3674|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:56.3674|Info|      Encerrado timer: id:108, (17:18:56.3674)
2015-09-05 17:18:56.3986|Info|      Executando timer: id:109, (17:18:56.3986)
2015-09-05 17:18:56.3986|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 17:18:56.3986|Info|  Settimeout: id:111, (64) ms
2015-09-05 17:18:56.3986|Info|      Encerrado timer: id:109, (17:18:56.3986)
2015-09-05 17:18:56.4770|Info|      Executando timer: id:111, (17:18:56.4770)
2015-09-05 17:18:56.4770|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:56.4770|Info|      Encerrado timer: id:111, (17:18:56.4770)
2015-09-05 17:18:56.4926|Info|      Executando timer: id:110, (17:18:56.4926)
2015-09-05 17:18:56.4926|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 17:18:56.4926|Info|  Settimeout: id:112, (13) ms
2015-09-05 17:18:56.4926|Info|      Encerrado timer: id:110, (17:18:56.4926)
2015-09-05 17:18:56.5082|Info|      Executando timer: id:112, (17:18:56.5082)
2015-09-05 17:18:56.5082|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:56.5082|Info|  Settimeout: id:113, (0) ms
2015-09-05 17:18:56.5082|Info|  Settimeout: id:114, (32) ms
2015-09-05 17:18:56.5082|Info|      Encerrado timer: id:112, (17:18:56.5082)
2015-09-05 17:18:56.5082|Info|      Executando timer: id:113, (17:18:56.5082)
2015-09-05 17:18:56.5082|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:56.5082|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:56.5082|Info|      Encerrado timer: id:113, (17:18:56.5082)
2015-09-05 17:18:56.5550|Info|      Executando timer: id:114, (17:18:56.5550)
2015-09-05 17:18:56.5550|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:18:56.5550|Info|  Settimeout: id:115, (0) ms
2015-09-05 17:18:56.5550|Info|  Settimeout: id:116, (13) ms
2015-09-05 17:18:56.5550|Info|      Encerrado timer: id:114, (17:18:56.5550)
2015-09-05 17:18:56.5550|Info|      Executando timer: id:115, (17:18:56.5550)
2015-09-05 17:18:56.5550|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:56.5550|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:56.5550|Info|      Encerrado timer: id:115, (17:18:56.5550)
2015-09-05 17:18:56.5863|Info|      Executando timer: id:116, (17:18:56.5863)
2015-09-05 17:18:56.5863|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:56.5863|Info|  Settimeout: id:117, (32) ms
2015-09-05 17:18:56.5863|Info|  Settimeout: id:118, (64) ms
2015-09-05 17:18:56.5863|Info|      Encerrado timer: id:116, (17:18:56.5863)
2015-09-05 17:18:56.6332|Info|      Executando timer: id:117, (17:18:56.6332)
2015-09-05 17:18:56.6332|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:56.6332|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:56.6332|Info|      Encerrado timer: id:117, (17:18:56.6332)
2015-09-05 17:18:56.6644|Info|      Executando timer: id:118, (17:18:56.6644)
2015-09-05 17:18:56.6644|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 17:18:56.6644|Info|  Settimeout: id:119, (13) ms
2015-09-05 17:18:56.6644|Info|      Encerrado timer: id:118, (17:18:56.6644)
2015-09-05 17:18:56.6957|Info|      Executando timer: id:119, (17:18:56.6957)
2015-09-05 17:18:56.6957|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:56.6957|Info|  Settimeout: id:120, (32) ms
2015-09-05 17:18:56.6957|Info|  Settimeout: id:121, (256) ms
2015-09-05 17:18:56.6957|Info|      Encerrado timer: id:119, (17:18:56.6957)
2015-09-05 17:18:56.7425|Info|      Executando timer: id:120, (17:18:56.7425)
2015-09-05 17:18:56.7425|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:56.7425|Info|  Settimeout: id:122, (32) ms
2015-09-05 17:18:56.7425|Info|!timeoutId && !maxTimeoutId false
2015-09-05 17:18:56.7425|Info|      Encerrado timer: id:120, (17:18:56.7425)
2015-09-05 17:18:56.7895|Info|      Executando timer: id:122, (17:18:56.7895)
2015-09-05 17:18:56.7895|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:56.7895|Info|  Settimeout: id:123, (32) ms
2015-09-05 17:18:56.7895|Info|!timeoutId && !maxTimeoutId false
2015-09-05 17:18:56.7895|Info|      Encerrado timer: id:122, (17:18:56.7895)
2015-09-05 17:18:56.8363|Info|      Executando timer: id:123, (17:18:56.8363)
2015-09-05 17:18:56.8363|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:56.8363|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:56.8363|Info|      Encerrado timer: id:123, (17:18:56.8363)
2015-09-05 17:18:56.9613|Info|      Executando timer: id:121, (17:18:56.9613)
2015-09-05 17:18:56.9613|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 17:18:56.9613|Info|  Settimeout: id:124, (13) ms
2015-09-05 17:18:56.9613|Info|      Encerrado timer: id:121, (17:18:56.9613)
2015-09-05 17:18:56.9926|Info|      Executando timer: id:124, (17:18:56.9926)
2015-09-05 17:18:56.9926|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:56.9926|Info|  Settimeout: id:125, (32) ms
2015-09-05 17:18:56.9926|Info|  Settimeout: id:126, (64) ms
2015-09-05 17:18:56.9926|Info|      Encerrado timer: id:124, (17:18:56.9926)
2015-09-05 17:18:57.0394|Info|      Executando timer: id:125, (17:18:57.0394)
2015-09-05 17:18:57.0394|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:57.0394|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:57.0394|Info|      Encerrado timer: id:125, (17:18:57.0394)
2015-09-05 17:18:57.0707|Info|      Executando timer: id:126, (17:18:57.0707)
2015-09-05 17:18:57.0707|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:18:57.0707|Info|  Settimeout: id:127, (32) ms
2015-09-05 17:18:57.0707|Info|  Settimeout: id:128, (13) ms
2015-09-05 17:18:57.0707|Info|      Encerrado timer: id:126, (17:18:57.0707)
2015-09-05 17:18:57.1019|Info|      Executando timer: id:128, (17:18:57.1019)
2015-09-05 17:18:57.1019|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.1019|Info|  Settimeout: id:129, (32) ms
2015-09-05 17:18:57.1019|Info|  Settimeout: id:130, (64) ms
2015-09-05 17:18:57.1019|Info|      Encerrado timer: id:128, (17:18:57.1019)
2015-09-05 17:18:57.1175|Info|      Executando timer: id:127, (17:18:57.1175)
2015-09-05 17:18:57.1175|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:57.1175|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:57.1175|Info|      Encerrado timer: id:127, (17:18:57.1175)
2015-09-05 17:18:57.1801|Info|      Executando timer: id:130, (17:18:57.1801)
2015-09-05 17:18:57.1801|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 17:18:57.1801|Info|  Settimeout: id:131, (13) ms
2015-09-05 17:18:57.1801|Info|      Encerrado timer: id:130, (17:18:57.1801)
2015-09-05 17:18:57.1957|Info|      Executando timer: id:131, (17:18:57.1957)
2015-09-05 17:18:57.1957|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.1957|Info|  Settimeout: id:132, (32) ms
2015-09-05 17:18:57.1957|Info|  Settimeout: id:133, (32) ms
2015-09-05 17:18:57.1957|Info|  Settimeout: id:134, (64) ms
2015-09-05 17:18:57.1957|Info|      Encerrado timer: id:131, (17:18:57.1957)
2015-09-05 17:18:57.2426|Info|      Executando timer: id:133, (17:18:57.2426)
2015-09-05 17:18:57.2426|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:18:57.2426|Info|      Encerrado timer: id:133, (17:18:57.2426)
2015-09-05 17:18:57.2738|Info|      Executando timer: id:134, (17:18:57.2738)
2015-09-05 17:18:57.2738|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:18:57.2738|Info|  Settimeout: id:135, (13) ms
2015-09-05 17:18:57.2738|Info|      Encerrado timer: id:134, (17:18:57.2738)
2015-09-05 17:18:57.2894|Info|      Executando timer: id:135, (17:18:57.2894)
2015-09-05 17:18:57.2894|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.2894|Info|  Settimeout: id:136, (32) ms
2015-09-05 17:18:57.2894|Info|      Encerrado timer: id:135, (17:18:57.2894)
2015-09-05 17:18:57.3363|Info|      Executando timer: id:136, (17:18:57.3363)
2015-09-05 17:18:57.3363|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:18:57.3363|Info|  Settimeout: id:137, (13) ms
2015-09-05 17:18:57.3363|Info|      Encerrado timer: id:136, (17:18:57.3363)
2015-09-05 17:18:57.3676|Info|      Executando timer: id:137, (17:18:57.3676)
2015-09-05 17:18:57.3676|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.3676|Info|  Settimeout: id:138, (32) ms
2015-09-05 17:18:57.3676|Info|  Settimeout: id:139, (64) ms
2015-09-05 17:18:57.3676|Info|      Encerrado timer: id:137, (17:18:57.3676)
2015-09-05 17:18:57.4145|Info|      Executando timer: id:138, (17:18:57.4145)
2015-09-05 17:18:57.4145|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:57.4145|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:57.4145|Info|      Encerrado timer: id:138, (17:18:57.4145)
2015-09-05 17:18:57.4457|Info|      Executando timer: id:139, (17:18:57.4457)
2015-09-05 17:18:57.4457|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 17:18:57.4457|Info|  Settimeout: id:140, (13) ms
2015-09-05 17:18:57.4457|Info|      Encerrado timer: id:139, (17:18:57.4457)
2015-09-05 17:18:57.4769|Info|      Executando timer: id:140, (17:18:57.4769)
2015-09-05 17:18:57.4769|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.4769|Info|  Settimeout: id:141, (32) ms
2015-09-05 17:18:57.4769|Info|  Settimeout: id:142, (256) ms
2015-09-05 17:18:57.4769|Info|      Encerrado timer: id:140, (17:18:57.4769)
2015-09-05 17:18:57.5238|Info|      Executando timer: id:141, (17:18:57.5238)
2015-09-05 17:18:57.5238|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:57.5238|Info|  Settimeout: id:143, (32) ms
2015-09-05 17:18:57.5238|Info|!timeoutId && !maxTimeoutId false
2015-09-05 17:18:57.5238|Info|      Encerrado timer: id:141, (17:18:57.5238)
2015-09-05 17:18:57.5707|Info|      Executando timer: id:143, (17:18:57.5707)
2015-09-05 17:18:57.5707|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:18:57.5707|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:18:57.5707|Info|      Encerrado timer: id:143, (17:18:57.5707)
2015-09-05 17:18:57.7425|Info|      Executando timer: id:142, (17:18:57.7425)
2015-09-05 17:18:57.7425|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 17:18:57.7425|Info|  Settimeout: id:144, (13) ms
2015-09-05 17:18:57.7425|Info|      Encerrado timer: id:142, (17:18:57.7425)
2015-09-05 17:18:57.7738|Info|      Executando timer: id:144, (17:18:57.7738)
2015-09-05 17:18:57.7738|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.7738|Info|  Settimeout: id:145, (64) ms
2015-09-05 17:18:57.7738|Info|      Encerrado timer: id:144, (17:18:57.7738)
2015-09-05 17:18:57.8519|Info|      Executando timer: id:145, (17:18:57.8519)
2015-09-05 17:18:57.8519|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:18:57.8519|Info|  Settimeout: id:146, (13) ms
2015-09-05 17:18:57.8519|Info|      Encerrado timer: id:145, (17:18:57.8519)
2015-09-05 17:18:57.8676|Info|      Executando timer: id:146, (17:18:57.8676)
2015-09-05 17:18:57.8676|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.8676|Info|  Settimeout: id:147, (32) ms
2015-09-05 17:18:57.8676|Info|  Settimeout: id:148, (64) ms
2015-09-05 17:18:57.8676|Info|      Encerrado timer: id:146, (17:18:57.8676)
2015-09-05 17:18:57.9457|Info|      Executando timer: id:148, (17:18:57.9457)
2015-09-05 17:18:57.9457|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 17:18:57.9457|Info|  Settimeout: id:149, (13) ms
2015-09-05 17:18:57.9457|Info|      Encerrado timer: id:148, (17:18:57.9457)
2015-09-05 17:18:57.9769|Info|      Executando timer: id:149, (17:18:57.9769)
2015-09-05 17:18:57.9769|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:57.9769|Info|  Settimeout: id:150, (64) ms
2015-09-05 17:18:57.9769|Info|      Encerrado timer: id:149, (17:18:57.9769)
2015-09-05 17:18:58.0551|Info|      Executando timer: id:150, (17:18:58.0551)
2015-09-05 17:18:58.0551|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:18:58.0551|Info|  Settimeout: id:151, (13) ms
2015-09-05 17:18:58.0551|Info|      Encerrado timer: id:150, (17:18:58.0551)
2015-09-05 17:18:58.0707|Info|      Executando timer: id:151, (17:18:58.0707)
2015-09-05 17:18:58.0707|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:18:58.1644|Info|----------------------------------------
2015-09-05 17:18:58.1644|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 17:18:58.1644|Info|    Finished in 8424 milliseconds.
2015-09-05 17:18:58.1644|Info|----------------------------------------
2015-09-05 17:18:58.1644|Info|      Encerrado timer: id:151, (17:18:58.1644)
2015-09-05 17:18:58.1644|Info|Encerrando os testes
2015-09-05 17:18:58.1644|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 17:18:58.1644|Info| 9 segundos para avaliar o individuo lodash.js
2015-09-05 17:18:58.1644|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime [2]:lodashTest:7765:5
    at V8Runtime [2]:lodashTest:7774:4
    at V8Runtime [2]:lodashTest:17424:3
2015-09-05 17:18:58.8417|Info|Iniciando os testes
2015-09-05 17:19:01.5451|Info|Encerrando os testes
2015-09-05 17:19:01.5451|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 17:19:01.5451|Info| 3 segundos para avaliar o individuo global.js
2015-09-05 17:19:02.2952|Info|Iniciando os testes
2015-09-05 17:19:02.2952|Info|  Settimeout: id:0, (13) ms
2015-09-05 17:19:02.3264|Info|      Executando timer: id:0, (17:19:02.3264)
2015-09-05 17:19:02.3264|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:03.3267|Info|  Settimeout: id:1, (13) ms
2015-09-05 17:19:03.3267|Info|      Encerrado timer: id:0, (17:19:03.3267)
2015-09-05 17:19:03.3423|Info|      Executando timer: id:1, (17:19:03.3423)
2015-09-05 17:19:03.3423|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 17:19:04.3438|Info|  Settimeout: id:2, (13) ms
2015-09-05 17:19:04.3438|Info|      Encerrado timer: id:1, (17:19:04.3438)
2015-09-05 17:19:04.3594|Info|      Executando timer: id:2, (17:19:04.3594)
2015-09-05 17:19:04.3594|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 17:19:04.9481|Info|      Encerrado timer: id:2, (17:19:04.9481)
2015-09-05 17:19:04.9481|Info|Encerrando os testes
2015-09-05 17:19:04.9481|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 17:19:04.9481|Info| 3 segundos para avaliar o individuo global.js
2015-09-05 17:19:05.0418|Info|Iniciando os testes
2015-09-05 17:19:05.0418|Info|  Settimeout: id:0, (13) ms
2015-09-05 17:19:05.0731|Info|      Executando timer: id:0, (17:19:05.0731)
2015-09-05 17:19:05.0731|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:05.0731|Info|----------------------------------------
2015-09-05 17:19:05.0731|Info|Arrays
2015-09-05 17:19:05.0731|Info|----------------------------------------
2015-09-05 17:19:05.0731|Info| PASS - first
2015-09-05 17:19:05.0731|Info| PASS - head
2015-09-05 17:19:05.0731|Info| PASS - take
2015-09-05 17:19:05.0887|Info| PASS - rest
2015-09-05 17:19:05.0887|Info| PASS - tail
2015-09-05 17:19:05.0887|Info| PASS - drop
2015-09-05 17:19:05.0887|Info| PASS - initial
2015-09-05 17:19:05.0887|Info| PASS - last
2015-09-05 17:19:05.0887|Info| PASS - compact
2015-09-05 17:19:05.6668|Info| PASS - flatten
2015-09-05 17:19:05.6668|Info| PASS - without
2015-09-05 17:19:05.6668|Info| PASS - sortedIndex
2015-09-05 17:19:05.6668|Info| PASS - uniq
2015-09-05 17:19:05.6668|Info| PASS - unique
2015-09-05 17:19:05.6668|Info| PASS - intersection
2015-09-05 17:19:05.6668|Info| PASS - union
2015-09-05 17:19:05.6668|Info| PASS - difference
2015-09-05 17:19:05.6824|Info| PASS - zip
2015-09-05 17:19:05.6824|Info| PASS - unzip
2015-09-05 17:19:05.6824|Info| PASS - object
2015-09-05 17:19:05.6824|Info| PASS - indexOf
2015-09-05 17:19:05.6824|Info| PASS - indexOf with NaN
2015-09-05 17:19:05.6824|Info| PASS - indexOf with +- 0
2015-09-05 17:19:05.6824|Info| PASS - lastIndexOf
2015-09-05 17:19:05.6824|Info| PASS - lastIndexOf with NaN
2015-09-05 17:19:05.6824|Info| PASS - lastIndexOf with +- 0
2015-09-05 17:19:05.6824|Info| PASS - findIndex
2015-09-05 17:19:05.6824|Info| PASS - findLastIndex
2015-09-05 17:19:05.6824|Info| PASS - range
2015-09-05 17:19:05.6824|Info|----------------------------------------
2015-09-05 17:19:05.6824|Info|Chaining
2015-09-05 17:19:05.6981|Info|----------------------------------------
2015-09-05 17:19:05.6981|Info| PASS - map/flatten/reduce
2015-09-05 17:19:05.6981|Info| PASS - select/reject/sortBy
2015-09-05 17:19:05.6981|Info| PASS - select/reject/sortBy in functional style
2015-09-05 17:19:05.6981|Info| PASS - reverse/concat/unshift/pop/map
2015-09-05 17:19:05.6981|Info| PASS - splice
2015-09-05 17:19:05.6981|Info| PASS - shift
2015-09-05 17:19:05.6981|Info| PASS - pop
2015-09-05 17:19:05.6981|Info| PASS - chaining works in small stages
2015-09-05 17:19:05.6981|Info| PASS - #1562: Engine proxies for chained functions
2015-09-05 17:19:05.6981|Info|----------------------------------------
2015-09-05 17:19:05.6981|Info|Collections
2015-09-05 17:19:05.6981|Info|----------------------------------------
2015-09-05 17:19:05.6981|Info| PASS - each
2015-09-05 17:19:05.6981|Info| PASS - forEach
2015-09-05 17:19:05.6981|Info| PASS - lookupIterator with contexts
2015-09-05 17:19:05.7137|Info| PASS - Iterating objects with sketchy length properties
2015-09-05 17:19:05.7137|Info| PASS - Resistant to collection length and properties changing while iterating
2015-09-05 17:19:05.7137|Info| PASS - map
2015-09-05 17:19:05.7137|Info| PASS - collect
2015-09-05 17:19:05.7137|Info| PASS - reduce
2015-09-05 17:19:05.7137|Info| PASS - foldl
2015-09-05 17:19:05.7137|Info| PASS - reduceRight
2015-09-05 17:19:05.7137|Info| PASS - foldr
2015-09-05 17:19:05.7137|Info| PASS - find
2015-09-05 17:19:05.7137|Info| PASS - detect
2015-09-05 17:19:05.7137|Info| PASS - filter
2015-09-05 17:19:05.7137|Info| PASS - select
2015-09-05 17:19:05.7137|Info| PASS - reject
2015-09-05 17:19:05.7293|Info| PASS - every
2015-09-05 17:19:05.7293|Info| PASS - all
2015-09-05 17:19:05.7293|Info| PASS - some
2015-09-05 17:19:05.7293|Info| PASS - any
2015-09-05 17:19:05.7293|Info| PASS - includes
2015-09-05 17:19:05.7293|Info| PASS - include
2015-09-05 17:19:05.7293|Info| PASS - contains
2015-09-05 17:19:05.7293|Info| PASS - includes with NaN
2015-09-05 17:19:05.7293|Info| PASS - includes with +- 0
2015-09-05 17:19:05.7293|Info| PASS - invoke
2015-09-05 17:19:05.7293|Info| PASS - invoke w/ function reference
2015-09-05 17:19:05.7293|Info| PASS - invoke when strings have a call method
2015-09-05 17:19:05.7293|Info| PASS - pluck
2015-09-05 17:19:05.7293|Info| PASS - where
2015-09-05 17:19:05.7293|Info| PASS - findWhere
2015-09-05 17:19:05.7606|Info| PASS - max
2015-09-05 17:19:05.7918|Info| PASS - min
2015-09-05 17:19:05.7918|Info| PASS - sortBy
2015-09-05 17:19:05.7918|Info| PASS - groupBy
2015-09-05 17:19:05.7918|Info| PASS - indexBy
2015-09-05 17:19:05.7918|Info| PASS - countBy
2015-09-05 17:19:05.7918|Info| PASS - shuffle
2015-09-05 17:19:05.8074|Info| PASS - sample
2015-09-05 17:19:05.8074|Info| PASS - toArray
2015-09-05 17:19:05.8074|Info| PASS - size
2015-09-05 17:19:05.8074|Info| PASS - partition
2015-09-05 17:19:05.8074|Info|----------------------------------------
2015-09-05 17:19:05.8074|Info|Functions
2015-09-05 17:19:05.8074|Info|----------------------------------------
2015-09-05 17:19:05.8074|Info| PASS - bind
2015-09-05 17:19:05.8074|Info| PASS - partial
2015-09-05 17:19:05.8074|Info| PASS - bindAll
2015-09-05 17:19:05.8074|Info| PASS - memoize
2015-09-05 17:19:05.8074|Info|  Settimeout: id:1, (100) ms
2015-09-05 17:19:05.8074|Info|  Settimeout: id:2, (50) ms
2015-09-05 17:19:05.8074|Info|  Settimeout: id:3, (150) ms
2015-09-05 17:19:05.8074|Info|      Encerrado timer: id:0, (17:19:05.8074)
2015-09-05 17:19:05.8856|Info|      Executando timer: id:2, (17:19:05.8856)
2015-09-05 17:19:05.8856|Info|          Deveria ter disparado: function (){ ok(!delayed, "didn't delay the function quite yet"); }
2015-09-05 17:19:05.8856|Info|      Encerrado timer: id:2, (17:19:05.8856)
2015-09-05 17:19:05.9325|Info|      Executando timer: id:1, (17:19:05.9325)
2015-09-05 17:19:05.9325|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:05.9325|Info|      Encerrado timer: id:1, (17:19:05.9325)
2015-09-05 17:19:05.9793|Info|      Executando timer: id:3, (17:19:05.9793)
2015-09-05 17:19:05.9793|Info|          Deveria ter disparado: function (){ ok(delayed, 'delayed the function'); start(); }
2015-09-05 17:19:05.9793|Info|  Settimeout: id:4, (13) ms
2015-09-05 17:19:05.9793|Info|      Encerrado timer: id:3, (17:19:05.9793)
2015-09-05 17:19:06.0106|Info|      Executando timer: id:4, (17:19:06.0106)
2015-09-05 17:19:06.0106|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.0106|Info| PASS - delay
2015-09-05 17:19:06.0106|Info|  Settimeout: id:5, (1) ms
2015-09-05 17:19:06.0106|Info|  Settimeout: id:6, (50) ms
2015-09-05 17:19:06.0106|Info|      Encerrado timer: id:4, (17:19:06.0106)
2015-09-05 17:19:06.0262|Info|      Executando timer: id:5, (17:19:06.0262)
2015-09-05 17:19:06.0262|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.0262|Info|      Encerrado timer: id:5, (17:19:06.0262)
2015-09-05 17:19:06.0731|Info|      Executando timer: id:6, (17:19:06.0731)
2015-09-05 17:19:06.0731|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.0731|Info|  Settimeout: id:7, (13) ms
2015-09-05 17:19:06.0731|Info|      Encerrado timer: id:6, (17:19:06.0731)
2015-09-05 17:19:06.1043|Info|      Executando timer: id:7, (17:19:06.1043)
2015-09-05 17:19:06.1043|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.1043|Info| PASS - defer
2015-09-05 17:19:06.1043|Info|  Settimeout: id:8, (32) ms
2015-09-05 17:19:06.1043|Info|  Settimeout: id:9, (64) ms
2015-09-05 17:19:06.1043|Info|      Encerrado timer: id:7, (17:19:06.1043)
2015-09-05 17:19:06.1512|Info|      Executando timer: id:8, (17:19:06.1512)
2015-09-05 17:19:06.1512|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:06.1512|Info|      Encerrado timer: id:8, (17:19:06.1512)
2015-09-05 17:19:06.1825|Info|      Executando timer: id:9, (17:19:06.1825)
2015-09-05 17:19:06.1825|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.1825|Info|  Settimeout: id:10, (13) ms
2015-09-05 17:19:06.1825|Info|      Encerrado timer: id:9, (17:19:06.1825)
2015-09-05 17:19:06.2137|Info|      Executando timer: id:10, (17:19:06.2137)
2015-09-05 17:19:06.2137|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.2137|Info| PASS - throttle
2015-09-05 17:19:06.2137|Info|  Settimeout: id:11, (32) ms
2015-09-05 17:19:06.2137|Info|  Settimeout: id:12, (64) ms
2015-09-05 17:19:06.2137|Info|  Settimeout: id:13, (96) ms
2015-09-05 17:19:06.2137|Info|      Encerrado timer: id:10, (17:19:06.2137)
2015-09-05 17:19:06.2606|Info|      Executando timer: id:11, (17:19:06.2606)
2015-09-05 17:19:06.2606|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:06.2606|Info|      Encerrado timer: id:11, (17:19:06.2606)
2015-09-05 17:19:06.2918|Info|      Executando timer: id:12, (17:19:06.2918)
2015-09-05 17:19:06.2918|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.2918|Info|      Encerrado timer: id:12, (17:19:06.2918)
2015-09-05 17:19:06.3231|Info|      Executando timer: id:13, (17:19:06.3231)
2015-09-05 17:19:06.3231|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.3231|Info|  Settimeout: id:14, (13) ms
2015-09-05 17:19:06.3231|Info|      Encerrado timer: id:13, (17:19:06.3231)
2015-09-05 17:19:06.3543|Info|      Executando timer: id:14, (17:19:06.3543)
2015-09-05 17:19:06.3543|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.3543|Info| PASS - throttle arguments
2015-09-05 17:19:06.3543|Info|  Settimeout: id:15, (64) ms
2015-09-05 17:19:06.3543|Info|      Encerrado timer: id:14, (17:19:06.3543)
2015-09-05 17:19:06.4325|Info|      Executando timer: id:15, (17:19:06.4325)
2015-09-05 17:19:06.4325|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.4325|Info|  Settimeout: id:16, (13) ms
2015-09-05 17:19:06.4325|Info|      Encerrado timer: id:15, (17:19:06.4325)
2015-09-05 17:19:06.4640|Info|      Executando timer: id:16, (17:19:06.4640)
2015-09-05 17:19:06.4640|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.4640|Info| PASS - throttle once
2015-09-05 17:19:06.4640|Info|  Settimeout: id:17, (32) ms
2015-09-05 17:19:06.4640|Info|  Settimeout: id:18, (64) ms
2015-09-05 17:19:06.4640|Info|      Encerrado timer: id:16, (17:19:06.4640)
2015-09-05 17:19:06.5109|Info|      Executando timer: id:17, (17:19:06.5109)
2015-09-05 17:19:06.5109|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:06.5109|Info|      Encerrado timer: id:17, (17:19:06.5109)
2015-09-05 17:19:06.5421|Info|      Executando timer: id:18, (17:19:06.5421)
2015-09-05 17:19:06.5421|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.5421|Info|  Settimeout: id:19, (13) ms
2015-09-05 17:19:06.5421|Info|      Encerrado timer: id:18, (17:19:06.5421)
2015-09-05 17:19:06.5734|Info|      Executando timer: id:19, (17:19:06.5734)
2015-09-05 17:19:06.5734|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.5734|Info| PASS - throttle twice
2015-09-05 17:19:06.5734|Info|  Settimeout: id:20, (30) ms
2015-09-05 17:19:06.5734|Info|  Settimeout: id:21, (85) ms
2015-09-05 17:19:06.5734|Info|      Encerrado timer: id:19, (17:19:06.5734)
2015-09-05 17:19:06.6202|Info|      Executando timer: id:20, (17:19:06.6202)
2015-09-05 17:19:06.6202|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:06.6202|Info|      Encerrado timer: id:20, (17:19:06.6202)
2015-09-05 17:19:06.6671|Info|      Executando timer: id:21, (17:19:06.6671)
2015-09-05 17:19:06.6671|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.6671|Info|  Settimeout: id:22, (13) ms
2015-09-05 17:19:06.6671|Info|      Encerrado timer: id:21, (17:19:06.6671)
2015-09-05 17:19:06.6984|Info|      Executando timer: id:22, (17:19:06.6984)
2015-09-05 17:19:06.6984|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:06.6984|Info| PASS - more throttling
2015-09-05 17:19:06.6984|Info|  Settimeout: id:23, (100) ms
2015-09-05 17:19:06.6984|Info|  Settimeout: id:24, (50) ms
2015-09-05 17:19:06.6984|Info|  Settimeout: id:25, (150) ms
2015-09-05 17:19:06.6984|Info|  Settimeout: id:26, (160) ms
2015-09-05 17:19:06.6984|Info|  Settimeout: id:27, (230) ms
2015-09-05 17:19:06.6984|Info|  Settimeout: id:28, (300) ms
2015-09-05 17:19:06.6984|Info|      Encerrado timer: id:22, (17:19:06.6984)
2015-09-05 17:19:06.7609|Info|      Executando timer: id:24, (17:19:06.7609)
2015-09-05 17:19:06.7609|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.7609|Info|      Encerrado timer: id:24, (17:19:06.7609)
2015-09-05 17:19:06.8078|Info|      Executando timer: id:23, (17:19:06.8078)
2015-09-05 17:19:06.8078|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:06.8078|Info|      Encerrado timer: id:23, (17:19:06.8078)
2015-09-05 17:19:06.8547|Info|      Executando timer: id:25, (17:19:06.8547)
2015-09-05 17:19:06.8547|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.8547|Info|  Settimeout: id:29, (54) ms
2015-09-05 17:19:06.8547|Info|      Encerrado timer: id:25, (17:19:06.8547)
2015-09-05 17:19:06.8703|Info|      Executando timer: id:26, (17:19:06.8703)
2015-09-05 17:19:06.8703|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.8703|Info|      Encerrado timer: id:26, (17:19:06.8703)
2015-09-05 17:19:06.9172|Info|      Executando timer: id:29, (17:19:06.9172)
2015-09-05 17:19:06.9172|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:06.9172|Info|      Encerrado timer: id:29, (17:19:06.9172)
2015-09-05 17:19:06.9484|Info|      Executando timer: id:27, (17:19:06.9484)
2015-09-05 17:19:06.9484|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:06.9484|Info|  Settimeout: id:30, (69) ms
2015-09-05 17:19:06.9796|Info|      Encerrado timer: id:27, (17:19:06.9796)
2015-09-05 17:19:07.0109|Info|      Executando timer: id:28, (17:19:07.0109)
2015-09-05 17:19:07.0109|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.0109|Info|  Settimeout: id:31, (13) ms
2015-09-05 17:19:07.0109|Info|      Encerrado timer: id:28, (17:19:07.0109)
2015-09-05 17:19:07.0265|Info|      Executando timer: id:31, (17:19:07.0265)
2015-09-05 17:19:07.0265|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:07.0265|Info| PASS - throttle repeatedly with results
2015-09-05 17:19:07.0265|Info|  Settimeout: id:32, (32) ms
2015-09-05 17:19:07.0578|Info|  Settimeout: id:33, (32) ms
2015-09-05 17:19:07.0890|Info|  Settimeout: id:34, (96) ms
2015-09-05 17:19:07.0890|Info|      Encerrado timer: id:31, (17:19:07.0890)
2015-09-05 17:19:07.0890|Info|      Executando timer: id:30, (17:19:07.0890)
2015-09-05 17:19:07.0890|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:07.0890|Info|      Encerrado timer: id:30, (17:19:07.0890)
2015-09-05 17:19:07.1047|Info|      Executando timer: id:33, (17:19:07.1047)
2015-09-05 17:19:07.1047|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:07.1047|Info|      Encerrado timer: id:33, (17:19:07.1047)
2015-09-05 17:19:07.1984|Info|      Executando timer: id:34, (17:19:07.1984)
2015-09-05 17:19:07.1984|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.1984|Info|  Settimeout: id:35, (13) ms
2015-09-05 17:19:07.1984|Info|      Encerrado timer: id:34, (17:19:07.1984)
2015-09-05 17:19:07.2297|Info|      Executando timer: id:35, (17:19:07.2297)
2015-09-05 17:19:07.2297|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:07.2297|Info| PASS - throttle triggers trailing call when invoked repeatedly
2015-09-05 17:19:07.2297|Info|  Settimeout: id:36, (60) ms
2015-09-05 17:19:07.2297|Info|  Settimeout: id:37, (96) ms
2015-09-05 17:19:07.2297|Info|      Encerrado timer: id:35, (17:19:07.2297)
2015-09-05 17:19:07.3078|Info|      Executando timer: id:36, (17:19:07.3078)
2015-09-05 17:19:07.3078|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:07.3078|Info|      Encerrado timer: id:36, (17:19:07.3078)
2015-09-05 17:19:07.3390|Info|      Executando timer: id:37, (17:19:07.3390)
2015-09-05 17:19:07.3390|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.3390|Info|  Settimeout: id:38, (13) ms
2015-09-05 17:19:07.3390|Info|      Encerrado timer: id:37, (17:19:07.3390)
2015-09-05 17:19:07.3703|Info|      Executando timer: id:38, (17:19:07.3703)
2015-09-05 17:19:07.3703|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:07.3703|Info| PASS - throttle does not trigger leading call when leading is set to false
2015-09-05 17:19:07.3703|Info|  Settimeout: id:39, (100) ms
2015-09-05 17:19:07.3703|Info|  Settimeout: id:40, (50) ms
2015-09-05 17:19:07.3703|Info|  Settimeout: id:41, (60) ms
2015-09-05 17:19:07.3703|Info|  Settimeout: id:42, (200) ms
2015-09-05 17:19:07.3703|Info|  Settimeout: id:43, (250) ms
2015-09-05 17:19:07.3703|Info|  Settimeout: id:44, (350) ms
2015-09-05 17:19:07.3703|Info|      Encerrado timer: id:38, (17:19:07.3703)
2015-09-05 17:19:07.4327|Info|      Executando timer: id:40, (17:19:07.4327)
2015-09-05 17:19:07.4327|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.4327|Info|      Encerrado timer: id:40, (17:19:07.4327)
2015-09-05 17:19:07.4484|Info|      Executando timer: id:41, (17:19:07.4484)
2015-09-05 17:19:07.4484|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.4484|Info|      Encerrado timer: id:41, (17:19:07.4484)
2015-09-05 17:19:07.4797|Info|      Executando timer: id:39, (17:19:07.4797)
2015-09-05 17:19:07.4797|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:07.4797|Info|      Encerrado timer: id:39, (17:19:07.4797)
2015-09-05 17:19:07.5890|Info|      Executando timer: id:42, (17:19:07.5890)
2015-09-05 17:19:07.5890|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.5890|Info|  Settimeout: id:45, (100) ms
2015-09-05 17:19:07.5890|Info|      Encerrado timer: id:42, (17:19:07.5890)
2015-09-05 17:19:07.6359|Info|      Executando timer: id:43, (17:19:07.6359)
2015-09-05 17:19:07.6359|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.6359|Info|      Encerrado timer: id:43, (17:19:07.6359)
2015-09-05 17:19:07.6984|Info|      Executando timer: id:45, (17:19:07.6984)
2015-09-05 17:19:07.6984|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:07.6984|Info|      Encerrado timer: id:45, (17:19:07.6984)
2015-09-05 17:19:07.7296|Info|      Executando timer: id:44, (17:19:07.7296)
2015-09-05 17:19:07.7296|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:07.7296|Info|  Settimeout: id:46, (13) ms
2015-09-05 17:19:07.7296|Info|      Encerrado timer: id:44, (17:19:07.7296)
2015-09-05 17:19:07.7609|Info|      Executando timer: id:46, (17:19:07.7609)
2015-09-05 17:19:07.7609|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:07.7609|Info| PASS - more throttle does not trigger leading call when leading is set to false
2015-09-05 17:19:07.7609|Info|  Settimeout: id:47, (100) ms
2015-09-05 17:19:07.8703|Info|  Settimeout: id:48, (100) ms
2015-09-05 17:19:07.9796|Info|  Settimeout: id:49, (100) ms
2015-09-05 17:19:08.0890|Info|  Settimeout: id:50, (100) ms
2015-09-05 17:19:08.1202|Info|  Settimeout: id:51, (200) ms
2015-09-05 17:19:08.1202|Info|      Encerrado timer: id:46, (17:19:08.1202)
2015-09-05 17:19:08.1984|Info|      Executando timer: id:50, (17:19:08.1984)
2015-09-05 17:19:08.1984|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:08.1984|Info|      Encerrado timer: id:50, (17:19:08.1984)
2015-09-05 17:19:08.3234|Info|      Executando timer: id:51, (17:19:08.3234)
2015-09-05 17:19:08.3234|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:08.3234|Info|  Settimeout: id:52, (13) ms
2015-09-05 17:19:08.3234|Info|      Encerrado timer: id:51, (17:19:08.3234)
2015-09-05 17:19:08.3390|Info|      Executando timer: id:52, (17:19:08.3390)
2015-09-05 17:19:08.3390|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:08.3390|Info| PASS - one more throttle with leading: false test
2015-09-05 17:19:08.3390|Info|  Settimeout: id:53, (96) ms
2015-09-05 17:19:08.3390|Info|      Encerrado timer: id:52, (17:19:08.3390)
2015-09-05 17:19:08.4484|Info|      Executando timer: id:53, (17:19:08.4484)
2015-09-05 17:19:08.4484|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:08.4484|Info|  Settimeout: id:54, (96) ms
2015-09-05 17:19:08.4484|Info|      Encerrado timer: id:53, (17:19:08.4487)
2015-09-05 17:19:08.5581|Info|      Executando timer: id:54, (17:19:08.5581)
2015-09-05 17:19:08.5581|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:08.5581|Info|  Settimeout: id:55, (13) ms
2015-09-05 17:19:08.5581|Info|      Encerrado timer: id:54, (17:19:08.5581)
2015-09-05 17:19:08.5738|Info|      Executando timer: id:55, (17:19:08.5738)
2015-09-05 17:19:08.5738|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:08.5738|Info| PASS - throttle does not trigger trailing call when trailing is set to false
2015-09-05 17:19:08.5738|Info|  Settimeout: id:56, (200) ms
2015-09-05 17:19:08.5738|Info|      Encerrado timer: id:55, (17:19:08.5738)
2015-09-05 17:19:08.7925|Info|      Executando timer: id:56, (17:19:08.7925)
2015-09-05 17:19:08.7925|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:08.7925|Info|  Settimeout: id:57, (13) ms
2015-09-05 17:19:08.7925|Info|      Encerrado timer: id:56, (17:19:08.7925)
2015-09-05 17:19:08.8238|Info|      Executando timer: id:57, (17:19:08.8238)
2015-09-05 17:19:08.8238|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:08.8238|Info| PASS - throttle continues to function after system time is set backwards
2015-09-05 17:19:08.8238|Info|  Settimeout: id:58, (32) ms
2015-09-05 17:19:08.8238|Info|  Settimeout: id:59, (100) ms
2015-09-05 17:19:08.8238|Info|      Encerrado timer: id:57, (17:19:08.8238)
2015-09-05 17:19:08.8706|Info|      Executando timer: id:58, (17:19:08.8706)
2015-09-05 17:19:08.8706|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:08.8706|Info|  Settimeout: id:60, (32) ms
2015-09-05 17:19:08.8706|Info|      Encerrado timer: id:58, (17:19:08.8706)
2015-09-05 17:19:08.9175|Info|      Executando timer: id:60, (17:19:08.9175)
2015-09-05 17:19:08.9175|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:19:08.9175|Info|      Encerrado timer: id:60, (17:19:08.9175)
2015-09-05 17:19:08.9331|Info|      Executando timer: id:59, (17:19:08.9331)
2015-09-05 17:19:08.9331|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:08.9331|Info|  Settimeout: id:61, (13) ms
2015-09-05 17:19:08.9331|Info|      Encerrado timer: id:59, (17:19:08.9331)
2015-09-05 17:19:08.9644|Info|      Executando timer: id:61, (17:19:08.9644)
2015-09-05 17:19:08.9644|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:08.9644|Info| PASS - throttle re-entrant
2015-09-05 17:19:08.9644|Info|  Settimeout: id:62, (32) ms
2015-09-05 17:19:08.9644|Info|  Settimeout: id:63, (16) ms
2015-09-05 17:19:08.9644|Info|  Settimeout: id:64, (96) ms
2015-09-05 17:19:08.9644|Info|      Encerrado timer: id:61, (17:19:08.9644)
2015-09-05 17:19:08.9956|Info|      Executando timer: id:63, (17:19:08.9956)
2015-09-05 17:19:08.9956|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:08.9956|Info|      Encerrado timer: id:63, (17:19:08.9956)
2015-09-05 17:19:09.0113|Info|      Executando timer: id:62, (17:19:09.0113)
2015-09-05 17:19:09.0113|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.0113|Info|  Settimeout: id:65, (16) ms
2015-09-05 17:19:09.0113|Info|      Encerrado timer: id:62, (17:19:09.0113)
2015-09-05 17:19:09.0425|Info|      Executando timer: id:65, (17:19:09.0425)
2015-09-05 17:19:09.0425|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.0425|Info|      Encerrado timer: id:65, (17:19:09.0425)
2015-09-05 17:19:09.0738|Info|      Executando timer: id:64, (17:19:09.0738)
2015-09-05 17:19:09.0738|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.0738|Info|  Settimeout: id:66, (13) ms
2015-09-05 17:19:09.0738|Info|      Encerrado timer: id:64, (17:19:09.0738)
2015-09-05 17:19:09.1050|Info|      Executando timer: id:66, (17:19:09.1050)
2015-09-05 17:19:09.1050|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:09.1050|Info| PASS - debounce
2015-09-05 17:19:09.1050|Info|  Settimeout: id:67, (64) ms
2015-09-05 17:19:09.1050|Info|  Settimeout: id:68, (16) ms
2015-09-05 17:19:09.1050|Info|  Settimeout: id:69, (32) ms
2015-09-05 17:19:09.1050|Info|  Settimeout: id:70, (48) ms
2015-09-05 17:19:09.1050|Info|  Settimeout: id:71, (128) ms
2015-09-05 17:19:09.1050|Info|      Encerrado timer: id:66, (17:19:09.1050)
2015-09-05 17:19:09.1363|Info|      Executando timer: id:68, (17:19:09.1363)
2015-09-05 17:19:09.1363|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.1363|Info|      Encerrado timer: id:68, (17:19:09.1363)
2015-09-05 17:19:09.1519|Info|      Executando timer: id:69, (17:19:09.1519)
2015-09-05 17:19:09.1519|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.1519|Info|      Encerrado timer: id:69, (17:19:09.1519)
2015-09-05 17:19:09.1675|Info|      Executando timer: id:70, (17:19:09.1675)
2015-09-05 17:19:09.1675|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.1675|Info|      Encerrado timer: id:70, (17:19:09.1675)
2015-09-05 17:19:09.1831|Info|      Executando timer: id:67, (17:19:09.1831)
2015-09-05 17:19:09.1831|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.1831|Info|  Settimeout: id:72, (48) ms
2015-09-05 17:19:09.1831|Info|      Encerrado timer: id:67, (17:19:09.1831)
2015-09-05 17:19:09.2456|Info|      Executando timer: id:72, (17:19:09.2456)
2015-09-05 17:19:09.2456|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.2456|Info|      Encerrado timer: id:72, (17:19:09.2456)
2015-09-05 17:19:09.2456|Info|      Executando timer: id:71, (17:19:09.2456)
2015-09-05 17:19:09.2456|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.2456|Info|  Settimeout: id:73, (13) ms
2015-09-05 17:19:09.2456|Info|      Encerrado timer: id:71, (17:19:09.2456)
2015-09-05 17:19:09.2769|Info|      Executando timer: id:73, (17:19:09.2769)
2015-09-05 17:19:09.2769|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:09.2769|Info| PASS - debounce asap
2015-09-05 17:19:09.2769|Info|  Settimeout: id:74, (32) ms
2015-09-05 17:19:09.2769|Info|  Settimeout: id:75, (96) ms
2015-09-05 17:19:09.2769|Info|      Encerrado timer: id:73, (17:19:09.2769)
2015-09-05 17:19:09.3238|Info|      Executando timer: id:74, (17:19:09.3238)
2015-09-05 17:19:09.3238|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.3238|Info|      Encerrado timer: id:74, (17:19:09.3238)
2015-09-05 17:19:09.3863|Info|      Executando timer: id:75, (17:19:09.3863)
2015-09-05 17:19:09.3863|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.3863|Info|  Settimeout: id:76, (13) ms
2015-09-05 17:19:09.3863|Info|      Encerrado timer: id:75, (17:19:09.3863)
2015-09-05 17:19:09.4175|Info|      Executando timer: id:76, (17:19:09.4175)
2015-09-05 17:19:09.4175|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:09.4175|Info| PASS - debounce asap recursively
2015-09-05 17:19:09.4175|Info|  Settimeout: id:77, (100) ms
2015-09-05 17:19:09.4175|Info|  Settimeout: id:78, (200) ms
2015-09-05 17:19:09.4175|Info|      Encerrado timer: id:76, (17:19:09.4175)
2015-09-05 17:19:09.5269|Info|      Executando timer: id:77, (17:19:09.5269)
2015-09-05 17:19:09.5269|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.5269|Info|      Encerrado timer: id:77, (17:19:09.5269)
2015-09-05 17:19:09.6363|Info|      Executando timer: id:78, (17:19:09.6363)
2015-09-05 17:19:09.6363|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.6363|Info|  Settimeout: id:79, (100) ms
2015-09-05 17:19:09.6363|Info|  Settimeout: id:80, (13) ms
2015-09-05 17:19:09.6363|Info|      Encerrado timer: id:78, (17:19:09.6363)
2015-09-05 17:19:09.6675|Info|      Executando timer: id:80, (17:19:09.6675)
2015-09-05 17:19:09.6675|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:09.6675|Info| PASS - debounce after system time is set backwards
2015-09-05 17:19:09.6675|Info|  Settimeout: id:81, (32) ms
2015-09-05 17:19:09.6675|Info|  Settimeout: id:82, (100) ms
2015-09-05 17:19:09.6675|Info|      Encerrado timer: id:80, (17:19:09.6675)
2015-09-05 17:19:09.7144|Info|      Executando timer: id:81, (17:19:09.7144)
2015-09-05 17:19:09.7144|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.7144|Info|  Settimeout: id:83, (32) ms
2015-09-05 17:19:09.7144|Info|      Encerrado timer: id:81, (17:19:09.7144)
2015-09-05 17:19:09.7456|Info|      Executando timer: id:79, (17:19:09.7456)
2015-09-05 17:19:09.7456|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.7456|Info|      Encerrado timer: id:79, (17:19:09.7456)
2015-09-05 17:19:09.7613|Info|      Executando timer: id:83, (17:19:09.7613)
2015-09-05 17:19:09.7613|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:19:09.7613|Info|      Encerrado timer: id:83, (17:19:09.7613)
2015-09-05 17:19:09.7769|Info|      Executando timer: id:82, (17:19:09.7769)
2015-09-05 17:19:09.7769|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:19:09.7769|Info|  Settimeout: id:84, (13) ms
2015-09-05 17:19:09.7769|Info|      Encerrado timer: id:82, (17:19:09.7769)
2015-09-05 17:19:09.7925|Info|      Executando timer: id:84, (17:19:09.7925)
2015-09-05 17:19:09.7925|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:19:09.7925|Info| PASS - debounce re-entrant
2015-09-05 17:19:09.7925|Info| PASS - once
2015-09-05 17:19:09.7925|Info| PASS - Recursive onced function.
2015-09-05 17:19:09.7925|Info| PASS - wrap
2015-09-05 17:19:09.7925|Info| PASS - negate
2015-09-05 17:19:09.7925|Info| PASS - compose
2015-09-05 17:19:09.7925|Info| PASS - after
2015-09-05 17:19:09.7925|Info| PASS - before
2015-09-05 17:19:09.7925|Info| PASS - iteratee
2015-09-05 17:19:09.7925|Info|----------------------------------------
2015-09-05 17:19:09.7925|Info|Objects
2015-09-05 17:19:09.7925|Info|----------------------------------------
2015-09-05 17:19:09.7925|Info| PASS - keys
2015-09-05 17:19:09.7925|Info| PASS - allKeys
2015-09-05 17:19:09.7925|Info| PASS - values
2015-09-05 17:19:09.8081|Info| PASS - pairs
2015-09-05 17:19:09.8081|Info| PASS - invert
2015-09-05 17:19:09.8081|Info| PASS - functions
2015-09-05 17:19:09.8081|Info| PASS - methods
2015-09-05 17:19:09.8081|Info| PASS - extend
2015-09-05 17:19:09.9956|Info| PASS - extendOwn
2015-09-05 17:19:09.9956|Info| PASS - pick
2015-09-05 17:19:09.9956|Info| PASS - omit
2015-09-05 17:19:09.9956|Info| PASS - defaults
2015-09-05 17:19:09.9956|Info| PASS - clone
2015-09-05 17:19:09.9956|Info| PASS - create
2015-09-05 17:19:10.0113|Info| PASS - isEqual
2015-09-05 17:19:10.0113|Info| PASS - isEmpty
2015-09-05 17:19:10.0113|Info| PASS - isArguments
2015-09-05 17:19:10.0113|Info| PASS - isObject
2015-09-05 17:19:10.0113|Info| PASS - isArray
2015-09-05 17:19:10.0113|Info| PASS - isString
2015-09-05 17:19:10.0582|Info| PASS - isNumber
2015-09-05 17:19:10.0582|Info| PASS - isBoolean
2015-09-05 17:19:10.0582|Info| PASS - isFunction
2015-09-05 17:19:10.0582|Info| PASS - #1929 Typed Array constructors are functions
2015-09-05 17:19:10.0582|Info| PASS - isDate
2015-09-05 17:19:10.0582|Info| PASS - isRegExp
2015-09-05 17:19:10.0582|Info| PASS - isFinite
2015-09-05 17:19:10.0582|Info| PASS - isNaN
2015-09-05 17:19:10.0582|Info| PASS - isNull
2015-09-05 17:19:10.0582|Info| PASS - isUndefined
2015-09-05 17:19:10.0582|Info| PASS - isError
2015-09-05 17:19:10.0582|Info| PASS - tap
2015-09-05 17:19:10.0582|Info| PASS - has
2015-09-05 17:19:10.0738|Info| PASS - isMatch
2015-09-05 17:19:10.0738|Info| PASS - matcher
2015-09-05 17:19:10.0738|Info| PASS - matcher 
2015-09-05 17:19:10.0738|Info| PASS - findKey
2015-09-05 17:19:10.0738|Info| PASS - mapObject
2015-09-05 17:19:10.0738|Info|----------------------------------------
2015-09-05 17:19:10.0738|Info|Utility
2015-09-05 17:19:10.0738|Info|----------------------------------------
2015-09-05 17:19:10.0738|Info| PASS - #750 - Return _ instance.
2015-09-05 17:19:10.0738|Info| PASS - identity
2015-09-05 17:19:10.0738|Info| PASS - constant
2015-09-05 17:19:10.0738|Info| PASS - noop
2015-09-05 17:19:10.0738|Info| PASS - property
2015-09-05 17:19:10.0738|Info| PASS - propertyOf
2015-09-05 17:19:10.0738|Info| PASS - random
2015-09-05 17:19:10.0894|Info| PASS - now
2015-09-05 17:19:10.0894|Info| PASS - uniqueId
2015-09-05 17:19:10.0894|Info| PASS - times
2015-09-05 17:19:10.0894|Info| PASS - mixin
2015-09-05 17:19:10.0894|Info| PASS - _.escape
2015-09-05 17:19:10.0894|Info| PASS - _.unescape
2015-09-05 17:19:10.0894|Info| PASS - _.escape & unescape
2015-09-05 17:19:10.0894|Info| PASS - template
2015-09-05 17:19:10.0894|Info| PASS - _.template provides the generated function source, when a SyntaxError occurs
2015-09-05 17:19:10.0894|Info| PASS - _.template handles \u2028 & \u2029
2015-09-05 17:19:10.0894|Info| PASS - result calls functions and returns primitives
2015-09-05 17:19:10.0894|Info| PASS - result returns a default value if object is null or undefined
2015-09-05 17:19:10.0894|Info| PASS - result returns a default value if property of object is missing
2015-09-05 17:19:10.0894|Info| PASS - result only returns the default value if the object does not have the property or is undefined
2015-09-05 17:19:10.0894|Info| PASS - result does not return the default if the property of an object is found in the prototype
2015-09-05 17:19:10.0894|Info| PASS - result does use the fallback when the result of invoking the property is undefined
2015-09-05 17:19:10.1050|Info| PASS - result fallback can use a function
2015-09-05 17:19:10.1050|Info| PASS - _.templateSettings.variable
2015-09-05 17:19:10.1050|Info| PASS - #547 - _.templateSettings is unchanged by custom settings.
2015-09-05 17:19:10.1050|Info| PASS - #556 - undefined template variables.
2015-09-05 17:19:10.1050|Info| PASS - interpolate evaluates code only once.
2015-09-05 17:19:10.1050|Info| PASS - #746 - _.template settings are not modified.
2015-09-05 17:19:10.1050|Info| PASS - #779 - delimeters are applied to unescaped text.
2015-09-05 17:19:10.1050|Info|----------------------------------------
2015-09-05 17:19:10.1050|Info|    PASS: 1382  FAIL: 0  TOTAL: 1382
2015-09-05 17:19:10.1050|Info|    Finished in 5032 milliseconds.
2015-09-05 17:19:10.1050|Info|----------------------------------------
2015-09-05 17:19:10.1050|Info|      Encerrado timer: id:84, (17:19:10.1050)
2015-09-05 17:19:10.1050|Info|Encerrando os testes
2015-09-05 17:19:10.1050|Info|Total:1382, Sucesso: 1382, Falha: 0
2015-09-05 17:19:10.1050|Info| 5 segundos para avaliar o individuo underscore.js
2015-09-05 17:19:11.1677|Info|ast gerada com sucesso
2015-09-05 17:19:11.1677|Info| 589,4552 ms
2015-09-05 17:19:12.5427|Info|Codigo gerado com sucesso
2015-09-05 17:19:12.5427|Info| 779,6316 ms
2015-09-05 17:19:54.5783|Info|ast gerada com sucesso
2015-09-05 17:19:54.5939|Info| 499,9759 ms
2015-09-05 17:33:59.6199|Info|ast gerada com sucesso
2015-09-05 17:33:59.6469|Info| 777,6918 ms
2015-09-05 17:35:16.0712|Info|ast gerada com sucesso
2015-09-05 17:35:16.1112|Info| 821,039 ms
2015-09-05 17:49:10.4452|Info|ast gerada com sucesso
2015-09-05 17:49:10.5759|Info| 552,2629 ms
2015-09-05 17:49:12.2020|Info|"callee"
2015-09-05 17:49:12.2020|Info|1
2015-09-05 17:49:12.2020|Info|"callee"
2015-09-05 17:49:12.2020|Info|1
2015-09-05 17:49:12.2020|Info|"callee"
2015-09-05 17:49:12.2020|Info|1
2015-09-05 17:49:17.5052|Info|Codigo gerado com sucesso
2015-09-05 17:49:17.5062|Info| 645,9133 ms
2015-09-05 17:49:18.8232|Info|Iniciando os testes
2015-09-05 17:49:18.8232|Info|  Settimeout: id:0, (13) ms
2015-09-05 17:49:18.8443|Info|      Executando timer: id:0, (17:49:18.8443)
2015-09-05 17:49:18.8443|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:18.8673|Info|  Settimeout: id:1, (13) ms
2015-09-05 17:49:18.8673|Info|      Encerrado timer: id:0, (17:49:18.8683)
2015-09-05 17:49:18.8823|Info|      Executando timer: id:1, (17:49:18.8823)
2015-09-05 17:49:18.8823|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:18.9453|Info|  Settimeout: id:2, (32) ms
2015-09-05 17:49:18.9453|Info|  Settimeout: id:3, (96) ms
2015-09-05 17:49:18.9453|Info|      Encerrado timer: id:1, (17:49:18.9473)
2015-09-05 17:49:18.9794|Info|      Executando timer: id:2, (17:49:18.9794)
2015-09-05 17:49:18.9794|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:18.9794|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:18.9794|Info|      Encerrado timer: id:2, (17:49:18.9814)
2015-09-05 17:49:19.0444|Info|      Executando timer: id:3, (17:49:19.0444)
2015-09-05 17:49:19.0444|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:49:19.0444|Info|  Settimeout: id:4, (13) ms
2015-09-05 17:49:19.0444|Info|      Encerrado timer: id:3, (17:49:19.0464)
2015-09-05 17:49:19.0605|Info|      Executando timer: id:4, (17:49:19.0605)
2015-09-05 17:49:19.0605|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:19.0605|Info|  Settimeout: id:5, (32) ms
2015-09-05 17:49:19.0605|Info|  Settimeout: id:6, (64) ms
2015-09-05 17:49:19.0605|Info|  Settimeout: id:7, (128) ms
2015-09-05 17:49:19.0605|Info|      Encerrado timer: id:4, (17:49:19.0644)
2015-09-05 17:49:19.0955|Info|      Executando timer: id:5, (17:49:19.0955)
2015-09-05 17:49:19.0955|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.0955|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.0955|Info|      Encerrado timer: id:5, (17:49:19.0974)
2015-09-05 17:49:19.1290|Info|      Executando timer: id:6, (17:49:19.1290)
2015-09-05 17:49:19.1290|Info|          Deveria ter disparado: function () {
          notEqual(debounced('y'), 'y');
        }
2015-09-05 17:49:19.1290|Info|  Settimeout: id:8, (32) ms
2015-09-05 17:49:19.1290|Info|      Encerrado timer: id:6, (17:49:19.1309)
2015-09-05 17:49:19.1640|Info|      Executando timer: id:8, (17:49:19.1640)
2015-09-05 17:49:19.1640|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.1640|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.1640|Info|      Encerrado timer: id:8, (17:49:19.1659)
2015-09-05 17:49:19.1933|Info|      Executando timer: id:7, (17:49:19.1933)
2015-09-05 17:49:19.1933|Info|          Deveria ter disparado: function () {
          notEqual(debounced('z'), 'z');
          QUnit.start();
        }
2015-09-05 17:49:19.1943|Info|  Settimeout: id:9, (32) ms
2015-09-05 17:49:19.1943|Info|  Settimeout: id:10, (13) ms
2015-09-05 17:49:19.1943|Info|      Encerrado timer: id:7, (17:49:19.1963)
2015-09-05 17:49:19.2103|Info|      Executando timer: id:10, (17:49:19.2103)
2015-09-05 17:49:19.2103|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:19.2103|Info|  Settimeout: id:11, (32) ms
2015-09-05 17:49:19.2103|Info|  Settimeout: id:12, (64) ms
2015-09-05 17:49:19.2103|Info|      Encerrado timer: id:10, (17:49:19.2133)
2015-09-05 17:49:19.2372|Info|      Executando timer: id:9, (17:49:19.2372)
2015-09-05 17:49:19.2372|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.2372|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.2372|Info|      Encerrado timer: id:9, (17:49:19.2396)
2015-09-05 17:49:19.2456|Info|      Executando timer: id:11, (17:49:19.2456)
2015-09-05 17:49:19.2456|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.2456|Info|      Encerrado timer: id:11, (17:49:19.2466)
2015-09-05 17:49:19.2786|Info|      Executando timer: id:12, (17:49:19.2786)
2015-09-05 17:49:19.2786|Info|          Deveria ter disparado: function () {
          var result = [debounced('a'), debounced('b')];
          deepEqual(result, ['a', 'a']);
          QUnit.start();
        }
2015-09-05 17:49:19.2786|Info|  Settimeout: id:13, (32) ms
2015-09-05 17:49:19.2786|Info|  Settimeout: id:14, (13) ms
2015-09-05 17:49:19.2786|Info|      Encerrado timer: id:12, (17:49:19.2816)
2015-09-05 17:49:19.2957|Info|      Executando timer: id:14, (17:49:19.2957)
2015-09-05 17:49:19.2957|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:19.2957|Info|  Settimeout: id:15, (32) ms
2015-09-05 17:49:19.2957|Info|  Settimeout: id:16, (64) ms
2015-09-05 17:49:19.2957|Info|      Encerrado timer: id:14, (17:49:19.2986)
2015-09-05 17:49:19.3137|Info|      Executando timer: id:13, (17:49:19.3137)
2015-09-05 17:49:19.3137|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.3137|Info|      Encerrado timer: id:13, (17:49:19.3147)
2015-09-05 17:49:19.3307|Info|      Executando timer: id:15, (17:49:19.3307)
2015-09-05 17:49:19.3307|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.3307|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.3307|Info|      Encerrado timer: id:15, (17:49:19.3327)
2015-09-05 17:49:19.3686|Info|      Executando timer: id:16, (17:49:19.3686)
2015-09-05 17:49:19.3686|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:49:19.3686|Info|  Settimeout: id:17, (13) ms
2015-09-05 17:49:19.3686|Info|      Encerrado timer: id:16, (17:49:19.3700)
2015-09-05 17:49:19.3841|Info|      Executando timer: id:17, (17:49:19.3841)
2015-09-05 17:49:19.3841|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:19.3841|Info|  Settimeout: id:18, (32) ms
2015-09-05 17:49:19.3841|Info|  Settimeout: id:19, (32) ms
2015-09-05 17:49:19.3841|Info|  Settimeout: id:20, (32) ms
2015-09-05 17:49:19.3841|Info|  Settimeout: id:21, (64) ms
2015-09-05 17:49:19.3841|Info|      Encerrado timer: id:17, (17:49:19.3881)
2015-09-05 17:49:19.4281|Info|      Executando timer: id:20, (17:49:19.4281)
2015-09-05 17:49:19.4588|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.4598|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.4598|Info|      Encerrado timer: id:20, (17:49:19.4608)
2015-09-05 17:49:19.4598|Info|      Executando timer: id:18, (17:49:19.4608)
2015-09-05 17:49:19.4598|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.4598|Info|      Encerrado timer: id:18, (17:49:19.4628)
2015-09-05 17:49:19.4598|Info|      Executando timer: id:19, (17:49:19.4628)
2015-09-05 17:49:19.4598|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.4598|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.4598|Info|      Encerrado timer: id:19, (17:49:19.4648)
2015-09-05 17:49:19.4598|Info|      Executando timer: id:21, (17:49:19.4658)
2015-09-05 17:49:19.4598|Info|          Deveria ter disparado: function () {
          deepEqual(callCounts, [1, 2]);

          withLeading('x');
          strictEqual(callCounts[0], 2);

          QUnit.start();
        }
2015-09-05 17:49:19.4598|Info|  Settimeout: id:22, (32) ms
2015-09-05 17:49:19.4598|Info|  Settimeout: id:23, (13) ms
2015-09-05 17:49:19.4598|Info|      Encerrado timer: id:21, (17:49:19.4678)
2015-09-05 17:49:19.4818|Info|      Executando timer: id:23, (17:49:19.4818)
2015-09-05 17:49:19.4818|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:19.4818|Info|  Settimeout: id:24, (32) ms
2015-09-05 17:49:19.4818|Info|  Settimeout: id:25, (32) ms
2015-09-05 17:49:19.4818|Info|  Settimeout: id:26, (64) ms
2015-09-05 17:49:19.4818|Info|      Encerrado timer: id:23, (17:49:19.4848)
2015-09-05 17:49:19.4999|Info|      Executando timer: id:22, (17:49:19.4999)
2015-09-05 17:49:19.4999|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.4999|Info|      Encerrado timer: id:22, (17:49:19.5008)
2015-09-05 17:49:19.5169|Info|      Executando timer: id:24, (17:49:19.5169)
2015-09-05 17:49:19.5169|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.5169|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:19.5169|Info|      Encerrado timer: id:24, (17:49:19.5189)
2015-09-05 17:49:19.5169|Info|      Executando timer: id:25, (17:49:19.5189)
2015-09-05 17:49:19.5169|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.5169|Info|      Encerrado timer: id:25, (17:49:19.5209)
2015-09-05 17:49:19.5499|Info|      Executando timer: id:26, (17:49:19.5499)
2015-09-05 17:49:19.5499|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 1);
          strictEqual(withoutCount, 0);
          QUnit.start();
        }
2015-09-05 17:49:19.5499|Info|  Settimeout: id:27, (13) ms
2015-09-05 17:49:19.5499|Info|      Encerrado timer: id:26, (17:49:19.5519)
2015-09-05 17:49:19.5659|Info|      Executando timer: id:27, (17:49:19.5659)
2015-09-05 17:49:19.5659|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:19.5659|Info|  Settimeout: id:28, (128) ms
2015-09-05 17:49:19.5659|Info|  Settimeout: id:29, (64) ms
2015-09-05 17:49:19.5689|Info|  Settimeout: id:30, (96) ms
2015-09-05 17:49:19.6950|Info|  Settimeout: id:31, (128) ms
2015-09-05 17:49:19.6950|Info|  Settimeout: id:32, (64) ms
2015-09-05 17:49:19.8230|Info|  Settimeout: id:33, (128) ms
2015-09-05 17:49:19.8230|Info|  Settimeout: id:34, (64) ms
2015-09-05 17:49:19.8875|Info|  Settimeout: id:35, (1) ms
2015-09-05 17:49:19.8875|Info|      Encerrado timer: id:27, (17:49:19.8885)
2015-09-05 17:49:19.8875|Info|      Executando timer: id:30, (17:49:19.8885)
2015-09-05 17:49:19.8875|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.8875|Info|  Settimeout: id:36, (90) ms
2015-09-05 17:49:19.8875|Info|      Encerrado timer: id:30, (17:49:19.8945)
2015-09-05 17:49:19.8875|Info|      Executando timer: id:35, (17:49:19.8945)
2015-09-05 17:49:19.8875|Info|          Deveria ter disparado: function () {
          deepEqual(actual, [true, false]);
          QUnit.start();
        }
2015-09-05 17:49:19.8875|Info|  Settimeout: id:37, (13) ms
2015-09-05 17:49:19.8975|Info|      Encerrado timer: id:35, (17:49:19.8975)
2015-09-05 17:49:19.8975|Info|      Executando timer: id:34, (17:49:19.8975)
2015-09-05 17:49:19.8975|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:19.8975|Info|  Settimeout: id:38, (51) ms
2015-09-05 17:49:20.0728|Info|      Encerrado timer: id:34, (17:49:20.0728)
2015-09-05 17:49:20.0728|Info|      Executando timer: id:36, (17:49:20.0738)
2015-09-05 17:49:20.0728|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:20.0728|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:20.0728|Info|      Encerrado timer: id:36, (17:49:20.0748)
2015-09-05 17:49:20.0728|Info|      Executando timer: id:33, (17:49:20.0758)
2015-09-05 17:49:20.0728|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:20.0728|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:20.0728|Info|      Encerrado timer: id:33, (17:49:20.0778)
2015-09-05 17:49:20.0728|Info|      Executando timer: id:37, (17:49:20.0778)
2015-09-05 17:49:20.0728|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.0728|Info|  Settimeout: id:39, (64) ms
2015-09-05 17:49:20.0728|Info|  Settimeout: id:40, (32) ms
2015-09-05 17:49:20.0728|Info|  Settimeout: id:41, (128) ms
2015-09-05 17:49:20.0728|Info|      Encerrado timer: id:37, (17:49:20.0819)
2015-09-05 17:49:20.1139|Info|      Executando timer: id:40, (17:49:20.1139)
2015-09-05 17:49:20.1139|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:20.1139|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:20.1159|Info|      Encerrado timer: id:40, (17:49:20.1159)
2015-09-05 17:49:20.2110|Info|      Executando timer: id:41, (17:49:20.2110)
2015-09-05 17:49:20.2110|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:49:20.2110|Info|  Settimeout: id:42, (13) ms
2015-09-05 17:49:20.2110|Info|      Encerrado timer: id:41, (17:49:20.2129)
2015-09-05 17:49:20.2270|Info|      Executando timer: id:42, (17:49:20.2270)
2015-09-05 17:49:20.2270|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.2270|Info|  Settimeout: id:43, (32) ms
2015-09-05 17:49:20.2270|Info|  Settimeout: id:44, (63) ms
2015-09-05 17:49:20.2936|Info|  Settimeout: id:45, (64) ms
2015-09-05 17:49:20.2936|Info|      Encerrado timer: id:42, (17:49:20.2946)
2015-09-05 17:49:20.3645|Info|      Executando timer: id:45, (17:49:20.3645)
2015-09-05 17:49:20.3645|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          deepEqual(actual, [object, 'a']);
          QUnit.start();
        }
2015-09-05 17:49:20.3664|Info|  Settimeout: id:46, (13) ms
2015-09-05 17:49:20.3664|Info|      Encerrado timer: id:45, (17:49:20.3664)
2015-09-05 17:49:20.3664|Info|      Executando timer: id:46, (17:49:20.3804)
2015-09-05 17:49:20.3664|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.3844|Info|  Settimeout: id:47, (1) ms
2015-09-05 17:49:20.3844|Info|  Settimeout: id:48, (32) ms
2015-09-05 17:49:20.3844|Info|      Encerrado timer: id:46, (17:49:20.3854)
2015-09-05 17:49:20.3844|Info|      Executando timer: id:47, (17:49:20.3864)
2015-09-05 17:49:20.3844|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:49:20.3844|Info|      Encerrado timer: id:47, (17:49:20.3874)
2015-09-05 17:49:20.4184|Info|      Executando timer: id:48, (17:49:20.4184)
2015-09-05 17:49:20.4184|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:49:20.4184|Info|  Settimeout: id:49, (13) ms
2015-09-05 17:49:20.4184|Info|      Encerrado timer: id:48, (17:49:20.4204)
2015-09-05 17:49:20.4344|Info|      Executando timer: id:49, (17:49:20.4344)
2015-09-05 17:49:20.4344|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.4344|Info|  Settimeout: id:50, (1) ms
2015-09-05 17:49:20.4344|Info|  Settimeout: id:51, (32) ms
2015-09-05 17:49:20.4344|Info|      Encerrado timer: id:49, (17:49:20.4374)
2015-09-05 17:49:20.4344|Info|      Executando timer: id:50, (17:49:20.4385)
2015-09-05 17:49:20.6218|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:49:20.6218|Info|      Encerrado timer: id:50, (17:49:20.6218)
2015-09-05 17:49:20.6218|Info|      Executando timer: id:51, (17:49:20.6228)
2015-09-05 17:49:20.6218|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 17:49:20.6218|Info|  Settimeout: id:52, (13) ms
2015-09-05 17:49:20.6218|Info|      Encerrado timer: id:51, (17:49:20.6248)
2015-09-05 17:49:20.6388|Info|      Executando timer: id:52, (17:49:20.6388)
2015-09-05 17:49:20.6388|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.6388|Info|  Settimeout: id:53, (1) ms
2015-09-05 17:49:20.6388|Info|  Settimeout: id:54, (32) ms
2015-09-05 17:49:20.6388|Info|      Encerrado timer: id:52, (17:49:20.6418)
2015-09-05 17:49:20.6748|Info|      Executando timer: id:54, (17:49:20.6748)
2015-09-05 17:49:20.6748|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:49:20.6748|Info|  Settimeout: id:55, (13) ms
2015-09-05 17:49:20.6748|Info|      Encerrado timer: id:54, (17:49:20.6768)
2015-09-05 17:49:20.6909|Info|      Executando timer: id:55, (17:49:20.6909)
2015-09-05 17:49:20.6909|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.6909|Info|  Settimeout: id:56, (32) ms
2015-09-05 17:49:20.6909|Info|  Settimeout: id:57, (1) ms
2015-09-05 17:49:20.6938|Info|  Settimeout: id:58, (64) ms
2015-09-05 17:49:20.6938|Info|      Encerrado timer: id:55, (17:49:20.6938)
2015-09-05 17:49:20.6938|Info|      Executando timer: id:57, (17:49:20.6959)
2015-09-05 17:49:20.6938|Info|          Deveria ter disparado: function () {
          ok(!pass);
        }
2015-09-05 17:49:20.6938|Info|      Encerrado timer: id:57, (17:49:20.6968)
2015-09-05 17:49:20.7259|Info|      Executando timer: id:56, (17:49:20.7259)
2015-09-05 17:49:20.7259|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:49:20.7259|Info|      Encerrado timer: id:56, (17:49:20.7279)
2015-09-05 17:49:20.7589|Info|      Executando timer: id:58, (17:49:20.7589)
2015-09-05 17:49:20.7589|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:49:20.7589|Info|  Settimeout: id:59, (13) ms
2015-09-05 17:49:20.7589|Info|      Encerrado timer: id:58, (17:49:20.7609)
2015-09-05 17:49:20.7749|Info|      Executando timer: id:59, (17:49:20.7749)
2015-09-05 17:49:20.7749|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.7749|Info|  Settimeout: id:60, (32) ms
2015-09-05 17:49:20.7749|Info|  Settimeout: id:61, (64) ms
2015-09-05 17:49:20.7749|Info|      Encerrado timer: id:59, (17:49:20.7779)
2015-09-05 17:49:20.8100|Info|      Executando timer: id:60, (17:49:20.8100)
2015-09-05 17:49:20.8100|Info|          Deveria ter disparado: function () { func.apply(undefined, args); }
2015-09-05 17:49:20.8100|Info|      Encerrado timer: id:60, (17:49:20.8109)
2015-09-05 17:49:20.8430|Info|      Executando timer: id:61, (17:49:20.8430)
2015-09-05 17:49:20.8430|Info|          Deveria ter disparado: function () {
          deepEqual(args, [1, 2]);
          QUnit.start();
        }
2015-09-05 17:49:20.8430|Info|  Settimeout: id:62, (13) ms
2015-09-05 17:49:20.8430|Info|      Encerrado timer: id:61, (17:49:20.8459)
2015-09-05 17:49:20.8600|Info|      Executando timer: id:62, (17:49:20.8600)
2015-09-05 17:49:20.8600|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:20.8600|Info|  Settimeout: id:63, (32) ms
2015-09-05 17:49:20.8600|Info|  Settimeout: id:64, (64) ms
2015-09-05 17:49:20.8600|Info|      Encerrado timer: id:62, (17:49:20.8630)
2015-09-05 17:49:20.9281|Info|      Executando timer: id:64, (17:49:20.9281)
2015-09-05 17:49:20.9281|Info|          Deveria ter disparado: function () {
          ok(pass);
          QUnit.start();
        }
2015-09-05 17:49:20.9281|Info|  Settimeout: id:65, (13) ms
2015-09-05 17:49:20.9281|Info|      Encerrado timer: id:64, (17:49:20.9300)
2015-09-05 17:49:20.9441|Info|      Executando timer: id:65, (17:49:20.9441)
2015-09-05 17:49:20.9441|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:22.8748|Info|  Settimeout: id:66, (13) ms
2015-09-05 17:49:22.8748|Info|      Encerrado timer: id:65, (17:49:22.8758)
2015-09-05 17:49:22.8899|Info|      Executando timer: id:66, (17:49:22.8899)
2015-09-05 17:49:22.8899|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 17:49:22.9596|Info|----------------------------------------
2015-09-05 17:49:22.9596|Info|lodash.isNil
2015-09-05 17:49:22.9596|Info|----------------------------------------
2015-09-05 17:49:22.9596|Info| FAIL - should work with nulls from another realm
2015-09-05 17:49:22.9596|Info|    FAIL | OK | Expected 2 assertions, but 1 were run
2015-09-05 17:49:23.1862|Info|  Settimeout: id:67, (32) ms
2015-09-05 17:49:23.1862|Info|      Encerrado timer: id:66, (17:49:23.1872)
2015-09-05 17:49:23.2203|Info|      Executando timer: id:67, (17:49:23.2203)
2015-09-05 17:49:23.2203|Info|          Deveria ter disparado: function () {
          ok(_.now() > actual);
          QUnit.start();
        }
2015-09-05 17:49:23.2203|Info|  Settimeout: id:68, (13) ms
2015-09-05 17:49:23.2203|Info|      Encerrado timer: id:67, (17:49:23.2222)
2015-09-05 17:49:23.2363|Info|      Executando timer: id:68, (17:49:23.2363)
2015-09-05 17:49:23.2363|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:23.3544|Info|  Settimeout: id:69, (32) ms
2015-09-05 17:49:23.3544|Info|  Settimeout: id:70, (64) ms
2015-09-05 17:49:23.3544|Info|      Encerrado timer: id:68, (17:49:23.3553)
2015-09-05 17:49:23.3913|Info|      Executando timer: id:69, (17:49:23.3913)
2015-09-05 17:49:23.3913|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:23.3913|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:23.3913|Info|      Encerrado timer: id:69, (17:49:23.3943)
2015-09-05 17:49:23.4204|Info|      Executando timer: id:70, (17:49:23.4204)
2015-09-05 17:49:23.4204|Info|          Deveria ter disparado: function () {
          ok(callCount > lastCount);
          QUnit.start();
        }
2015-09-05 17:49:23.4204|Info|  Settimeout: id:71, (13) ms
2015-09-05 17:49:23.4204|Info|      Encerrado timer: id:70, (17:49:23.4223)
2015-09-05 17:49:23.4364|Info|      Executando timer: id:71, (17:49:23.4364)
2015-09-05 17:49:23.4364|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:23.4364|Info|  Settimeout: id:72, (32) ms
2015-09-05 17:49:23.4364|Info|  Settimeout: id:73, (64) ms
2015-09-05 17:49:23.4364|Info|      Encerrado timer: id:71, (17:49:23.4394)
2015-09-05 17:49:23.4714|Info|      Executando timer: id:72, (17:49:23.4714)
2015-09-05 17:49:23.4714|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:23.4714|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:23.4714|Info|      Encerrado timer: id:72, (17:49:23.4724)
2015-09-05 17:49:23.5044|Info|      Executando timer: id:73, (17:49:23.5044)
2015-09-05 17:49:23.5044|Info|          Deveria ter disparado: function () {
          var result = [throttled('x'), throttled('y')];
          notEqual(result[0], 'a');
          notStrictEqual(result[0], undefined);

          notEqual(result[1], 'y');
          notStrictEqual(result[1], undefined);
          QUnit.start();
        }
2015-09-05 17:49:23.5044|Info|  Settimeout: id:74, (32) ms
2015-09-05 17:49:23.5064|Info|  Settimeout: id:75, (13) ms
2015-09-05 17:49:23.5064|Info|      Encerrado timer: id:73, (17:49:23.5074)
2015-09-05 17:49:23.5064|Info|      Executando timer: id:75, (17:49:23.5215)
2015-09-05 17:49:23.5064|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:23.5254|Info|  Settimeout: id:76, (32) ms
2015-09-05 17:49:23.5254|Info|  Settimeout: id:77, (64) ms
2015-09-05 17:49:23.5254|Info|      Encerrado timer: id:75, (17:49:23.5274)
2015-09-05 17:49:23.5395|Info|      Executando timer: id:74, (17:49:23.5395)
2015-09-05 17:49:23.5395|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:23.5395|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:23.5395|Info|      Encerrado timer: id:74, (17:49:23.5414)
2015-09-05 17:49:23.5595|Info|      Executando timer: id:76, (17:49:23.5595)
2015-09-05 17:49:23.5595|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:23.5595|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:23.5595|Info|      Encerrado timer: id:76, (17:49:23.5615)
2015-09-05 17:49:23.5915|Info|      Executando timer: id:77, (17:49:23.5915)
2015-09-05 17:49:23.5915|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:49:23.5915|Info|  Settimeout: id:78, (13) ms
2015-09-05 17:49:23.5915|Info|      Encerrado timer: id:77, (17:49:23.5917)
2015-09-05 17:49:23.6074|Info|      Executando timer: id:78, (17:49:23.6074)
2015-09-05 17:49:23.6074|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:23.6074|Info|  Settimeout: id:79, (64) ms
2015-09-05 17:49:23.6074|Info|      Encerrado timer: id:78, (17:49:23.6103)
2015-09-05 17:49:23.6754|Info|      Executando timer: id:79, (17:49:23.6754)
2015-09-05 17:49:23.6754|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 1);
          QUnit.start();
        }
2015-09-05 17:49:23.6754|Info|  Settimeout: id:80, (13) ms
2015-09-05 17:49:23.6754|Info|      Encerrado timer: id:79, (17:49:23.6774)
2015-09-05 17:49:23.6915|Info|      Executando timer: id:80, (17:49:23.6915)
2015-09-05 17:49:23.6915|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:23.6915|Info|  Settimeout: id:81, (32) ms
2015-09-05 17:49:23.7244|Info|  Settimeout: id:82, (32) ms
2015-09-05 17:49:23.7602|Info|  Settimeout: id:83, (32) ms
2015-09-05 17:49:23.7919|Info|  Settimeout: id:84, (32) ms
2015-09-05 17:49:23.8246|Info|  Settimeout: id:85, (32) ms
2015-09-05 17:49:23.8567|Info|  Settimeout: id:86, (32) ms
2015-09-05 17:49:23.8887|Info|  Settimeout: id:87, (32) ms
2015-09-05 17:49:23.9207|Info|  Settimeout: id:88, (32) ms
2015-09-05 17:49:23.9527|Info|  Settimeout: id:89, (32) ms
2015-09-05 17:49:23.9848|Info|  Settimeout: id:90, (32) ms
2015-09-05 17:49:24.0128|Info|  Settimeout: id:91, (1) ms
2015-09-05 17:49:24.0128|Info|      Encerrado timer: id:80, (17:49:24.0138)
2015-09-05 17:49:24.0128|Info|      Executando timer: id:91, (17:49:24.0158)
2015-09-05 17:49:24.0128|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 17:49:24.0128|Info|  Settimeout: id:92, (13) ms
2015-09-05 17:49:24.0128|Info|      Encerrado timer: id:91, (17:49:24.0178)
2015-09-05 17:49:24.0128|Info|      Executando timer: id:90, (17:49:24.0178)
2015-09-05 17:49:24.0128|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.0128|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:24.0128|Info|      Encerrado timer: id:90, (17:49:24.0189)
2015-09-05 17:49:24.0346|Info|      Executando timer: id:92, (17:49:24.0346)
2015-09-05 17:49:24.0346|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:24.0346|Info|  Settimeout: id:93, (32) ms
2015-09-05 17:49:24.0680|Info|  Settimeout: id:94, (32) ms
2015-09-05 17:49:24.1000|Info|  Settimeout: id:95, (32) ms
2015-09-05 17:49:24.1321|Info|  Settimeout: id:96, (32) ms
2015-09-05 17:49:24.1641|Info|  Settimeout: id:97, (32) ms
2015-09-05 17:49:24.1961|Info|  Settimeout: id:98, (32) ms
2015-09-05 17:49:24.2285|Info|  Settimeout: id:99, (32) ms
2015-09-05 17:49:24.2605|Info|  Settimeout: id:100, (32) ms
2015-09-05 17:49:24.2926|Info|  Settimeout: id:101, (32) ms
2015-09-05 17:49:24.3246|Info|  Settimeout: id:102, (32) ms
2015-09-05 17:49:24.3714|Info|  Settimeout: id:103, (1) ms
2015-09-05 17:49:24.3714|Info|      Encerrado timer: id:92, (17:49:24.3721)
2015-09-05 17:49:24.3714|Info|      Executando timer: id:103, (17:49:24.3741)
2015-09-05 17:49:24.3831|Info|          Deveria ter disparado: function () {
            ok(actual);
            QUnit.start();
          }
2015-09-05 17:49:24.3831|Info|  Settimeout: id:104, (13) ms
2015-09-05 17:49:24.3831|Info|      Encerrado timer: id:103, (17:49:24.3851)
2015-09-05 17:49:24.3991|Info|      Executando timer: id:104, (17:49:24.3991)
2015-09-05 17:49:24.3991|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:24.3991|Info|  Settimeout: id:105, (32) ms
2015-09-05 17:49:24.3991|Info|  Settimeout: id:106, (128) ms
2015-09-05 17:49:24.3991|Info|      Encerrado timer: id:104, (17:49:24.4021)
2015-09-05 17:49:24.4339|Info|      Executando timer: id:105, (17:49:24.4339)
2015-09-05 17:49:24.4339|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.4339|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:24.4339|Info|      Encerrado timer: id:105, (17:49:24.4355)
2015-09-05 17:49:24.5306|Info|      Executando timer: id:106, (17:49:24.5306)
2015-09-05 17:49:24.5306|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:49:24.5306|Info|  Settimeout: id:107, (13) ms
2015-09-05 17:49:24.5306|Info|      Encerrado timer: id:106, (17:49:24.5325)
2015-09-05 17:49:24.5466|Info|      Executando timer: id:107, (17:49:24.5466)
2015-09-05 17:49:24.5466|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:24.5466|Info|  Settimeout: id:108, (32) ms
2015-09-05 17:49:24.5466|Info|  Settimeout: id:109, (64) ms
2015-09-05 17:49:24.5466|Info|  Settimeout: id:110, (64) ms
2015-09-05 17:49:24.5466|Info|  Settimeout: id:111, (256) ms
2015-09-05 17:49:24.5536|Info|      Encerrado timer: id:107, (17:49:24.5536)
2015-09-05 17:49:24.5836|Info|      Executando timer: id:108, (17:49:24.5836)
2015-09-05 17:49:24.5836|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.5846|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:24.5846|Info|      Encerrado timer: id:108, (17:49:24.5856)
2015-09-05 17:49:24.6166|Info|      Executando timer: id:109, (17:49:24.6166)
2015-09-05 17:49:24.6166|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.6166|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:24.6166|Info|      Encerrado timer: id:109, (17:49:24.6186)
2015-09-05 17:49:24.6166|Info|      Executando timer: id:110, (17:49:24.6186)
2015-09-05 17:49:24.6166|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.6166|Info|      Encerrado timer: id:110, (17:49:24.6196)
2015-09-05 17:49:24.8098|Info|      Executando timer: id:111, (17:49:24.8098)
2015-09-05 17:49:24.8098|Info|          Deveria ter disparado: function () {
          strictEqual(withCount, 2);
          strictEqual(withoutCount, 1);
          QUnit.start();
        }
2015-09-05 17:49:24.8098|Info|  Settimeout: id:112, (13) ms
2015-09-05 17:49:24.8098|Info|      Encerrado timer: id:111, (17:49:24.8117)
2015-09-05 17:49:24.8258|Info|      Executando timer: id:112, (17:49:24.8258)
2015-09-05 17:49:24.8258|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:24.8258|Info|  Settimeout: id:113, (64) ms
2015-09-05 17:49:24.8258|Info|  Settimeout: id:114, (96) ms
2015-09-05 17:49:24.8258|Info|  Settimeout: id:115, (192) ms
2015-09-05 17:49:24.8258|Info|      Encerrado timer: id:112, (17:49:24.8297)
2015-09-05 17:49:24.8930|Info|      Executando timer: id:113, (17:49:24.8930)
2015-09-05 17:49:24.8930|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.8930|Info|      Encerrado timer: id:113, (17:49:24.8950)
2015-09-05 17:49:24.9261|Info|      Executando timer: id:114, (17:49:24.9261)
2015-09-05 17:49:24.9261|Info|          Deveria ter disparado: function () {
          throttled();
          throttled();
        }
2015-09-05 17:49:24.9261|Info|  Settimeout: id:116, (64) ms
2015-09-05 17:49:24.9280|Info|      Encerrado timer: id:114, (17:49:24.9280)
2015-09-05 17:49:24.9931|Info|      Executando timer: id:116, (17:49:24.9931)
2015-09-05 17:49:24.9931|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:24.9931|Info|      Encerrado timer: id:116, (17:49:24.9940)
2015-09-05 17:49:25.0231|Info|      Executando timer: id:115, (17:49:25.0231)
2015-09-05 17:49:25.0231|Info|          Deveria ter disparado: function () {
          ok(callCount > 1);
          QUnit.start();
        }
2015-09-05 17:49:25.0231|Info|  Settimeout: id:117, (13) ms
2015-09-05 17:49:25.0231|Info|      Encerrado timer: id:115, (17:49:25.0251)
2015-09-05 17:49:25.0391|Info|      Executando timer: id:117, (17:49:25.0391)
2015-09-05 17:49:25.0391|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.0391|Info|  Settimeout: id:118, (0) ms
2015-09-05 17:49:25.0391|Info|  Settimeout: id:119, (32) ms
2015-09-05 17:49:25.0391|Info|      Encerrado timer: id:117, (17:49:25.0421)
2015-09-05 17:49:25.0391|Info|      Executando timer: id:118, (17:49:25.0421)
2015-09-05 17:49:25.0391|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.0391|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.0391|Info|      Encerrado timer: id:118, (17:49:25.0451)
2015-09-05 17:49:25.0802|Info|      Executando timer: id:119, (17:49:25.0802)
2015-09-05 17:49:25.0802|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:49:25.0802|Info|  Settimeout: id:120, (0) ms
2015-09-05 17:49:25.0802|Info|  Settimeout: id:121, (13) ms
2015-09-05 17:49:25.0802|Info|      Encerrado timer: id:119, (17:49:25.0839)
2015-09-05 17:49:25.0802|Info|      Executando timer: id:120, (17:49:25.0839)
2015-09-05 17:49:25.0849|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.0849|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.0849|Info|      Encerrado timer: id:120, (17:49:25.0859)
2015-09-05 17:49:25.0849|Info|      Executando timer: id:121, (17:49:25.0979)
2015-09-05 17:49:25.0849|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.0849|Info|  Settimeout: id:122, (32) ms
2015-09-05 17:49:25.0999|Info|  Settimeout: id:123, (64) ms
2015-09-05 17:49:25.0999|Info|      Encerrado timer: id:121, (17:49:25.1009)
2015-09-05 17:49:25.1329|Info|      Executando timer: id:122, (17:49:25.1329)
2015-09-05 17:49:25.1329|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.1329|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.1329|Info|      Encerrado timer: id:122, (17:49:25.1349)
2015-09-05 17:49:25.1655|Info|      Executando timer: id:123, (17:49:25.1655)
2015-09-05 17:49:25.1655|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 17:49:25.1655|Info|  Settimeout: id:124, (13) ms
2015-09-05 17:49:25.1655|Info|      Encerrado timer: id:123, (17:49:25.1675)
2015-09-05 17:49:25.1815|Info|      Executando timer: id:124, (17:49:25.1815)
2015-09-05 17:49:25.1815|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.1815|Info|  Settimeout: id:125, (32) ms
2015-09-05 17:49:25.1815|Info|  Settimeout: id:126, (256) ms
2015-09-05 17:49:25.1815|Info|      Encerrado timer: id:124, (17:49:25.1845)
2015-09-05 17:49:25.2286|Info|      Executando timer: id:125, (17:49:25.2286)
2015-09-05 17:49:25.2286|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.2286|Info|  Settimeout: id:127, (32) ms
2015-09-05 17:49:25.2286|Info|!timeoutId && !maxTimeoutId false
2015-09-05 17:49:25.2286|Info|      Encerrado timer: id:125, (17:49:25.2322)
2015-09-05 17:49:25.2652|Info|      Executando timer: id:127, (17:49:25.2652)
2015-09-05 17:49:25.2652|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.2652|Info|  Settimeout: id:128, (32) ms
2015-09-05 17:49:25.2652|Info|!timeoutId && !maxTimeoutId false
2015-09-05 17:49:25.2652|Info|      Encerrado timer: id:127, (17:49:25.2672)
2015-09-05 17:49:25.3001|Info|      Executando timer: id:128, (17:49:25.3001)
2015-09-05 17:49:25.3001|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.3001|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.3001|Info|      Encerrado timer: id:128, (17:49:25.3021)
2015-09-05 17:49:25.4414|Info|      Executando timer: id:126, (17:49:25.4414)
2015-09-05 17:49:25.4414|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 17:49:25.4414|Info|  Settimeout: id:129, (13) ms
2015-09-05 17:49:25.4414|Info|      Encerrado timer: id:126, (17:49:25.4433)
2015-09-05 17:49:25.4574|Info|      Executando timer: id:129, (17:49:25.4574)
2015-09-05 17:49:25.4574|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.4614|Info|  Settimeout: id:130, (32) ms
2015-09-05 17:49:25.4614|Info|  Settimeout: id:131, (64) ms
2015-09-05 17:49:25.4614|Info|      Encerrado timer: id:129, (17:49:25.4634)
2015-09-05 17:49:25.5005|Info|      Executando timer: id:130, (17:49:25.5005)
2015-09-05 17:49:25.5005|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.5005|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.5005|Info|      Encerrado timer: id:130, (17:49:25.5024)
2015-09-05 17:49:25.5284|Info|      Executando timer: id:131, (17:49:25.5284)
2015-09-05 17:49:25.5284|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:49:25.5284|Info|  Settimeout: id:132, (32) ms
2015-09-05 17:49:25.5284|Info|  Settimeout: id:133, (13) ms
2015-09-05 17:49:25.5284|Info|      Encerrado timer: id:131, (17:49:25.5314)
2015-09-05 17:49:25.5454|Info|      Executando timer: id:133, (17:49:25.5454)
2015-09-05 17:49:25.5454|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.5454|Info|  Settimeout: id:134, (32) ms
2015-09-05 17:49:25.5614|Info|  Settimeout: id:135, (64) ms
2015-09-05 17:49:25.5614|Info|      Encerrado timer: id:133, (17:49:25.5624)
2015-09-05 17:49:25.5614|Info|      Executando timer: id:132, (17:49:25.5634)
2015-09-05 17:49:25.5614|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.5614|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.5614|Info|      Encerrado timer: id:132, (17:49:25.5654)
2015-09-05 17:49:25.6275|Info|      Executando timer: id:135, (17:49:25.6275)
2015-09-05 17:49:25.6275|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 17:49:25.6275|Info|  Settimeout: id:136, (13) ms
2015-09-05 17:49:25.6275|Info|      Encerrado timer: id:135, (17:49:25.6295)
2015-09-05 17:49:25.6435|Info|      Executando timer: id:136, (17:49:25.6435)
2015-09-05 17:49:25.6435|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.6435|Info|  Settimeout: id:137, (32) ms
2015-09-05 17:49:25.6435|Info|  Settimeout: id:138, (32) ms
2015-09-05 17:49:25.6435|Info|  Settimeout: id:139, (64) ms
2015-09-05 17:49:25.6435|Info|      Encerrado timer: id:136, (17:49:25.6465)
2015-09-05 17:49:25.6796|Info|      Executando timer: id:138, (17:49:25.6796)
2015-09-05 17:49:25.6796|Info|          Deveria ter disparado: function delayed() {
        var remaining = wait - (now() - stamp);
        //javascriptHelper.Escrever('Entra? {0}', remaining <= 0 || remaining > wait);
		if (remaining <= 0 || remaining > wait) {
			 //javascriptHelper.Escrever('trailingCall {0}', trailingCall);
			 //javascriptHelper.Escrever('maxTimeoutId {0}', maxTimeoutId);
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }
2015-09-05 17:49:25.6796|Info|      Encerrado timer: id:138, (17:49:25.6805)
2015-09-05 17:49:25.7135|Info|      Executando timer: id:139, (17:49:25.7135)
2015-09-05 17:49:25.7135|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:49:25.7135|Info|  Settimeout: id:140, (13) ms
2015-09-05 17:49:25.7135|Info|      Encerrado timer: id:139, (17:49:25.7165)
2015-09-05 17:49:25.7306|Info|      Executando timer: id:140, (17:49:25.7306)
2015-09-05 17:49:25.7306|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.7306|Info|  Settimeout: id:141, (32) ms
2015-09-05 17:49:25.7306|Info|      Encerrado timer: id:140, (17:49:25.7325)
2015-09-05 17:49:25.7656|Info|      Executando timer: id:141, (17:49:25.7656)
2015-09-05 17:49:25.7656|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:49:25.7656|Info|  Settimeout: id:142, (13) ms
2015-09-05 17:49:25.7656|Info|      Encerrado timer: id:141, (17:49:25.7675)
2015-09-05 17:49:25.7816|Info|      Executando timer: id:142, (17:49:25.7816)
2015-09-05 17:49:25.7816|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.7816|Info|  Settimeout: id:143, (32) ms
2015-09-05 17:49:25.7816|Info|  Settimeout: id:144, (64) ms
2015-09-05 17:49:25.7816|Info|      Encerrado timer: id:142, (17:49:25.7845)
2015-09-05 17:49:25.8166|Info|      Executando timer: id:143, (17:49:25.8166)
2015-09-05 17:49:25.8166|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:25.8166|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.8186|Info|      Encerrado timer: id:143, (17:49:25.8186)
2015-09-05 17:49:25.8496|Info|      Executando timer: id:144, (17:49:25.8496)
2015-09-05 17:49:25.8496|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected);
          QUnit.start();
        }
2015-09-05 17:49:25.8506|Info|  Settimeout: id:145, (13) ms
2015-09-05 17:49:25.8506|Info|      Encerrado timer: id:144, (17:49:25.8516)
2015-09-05 17:49:25.8656|Info|      Executando timer: id:145, (17:49:25.8656)
2015-09-05 17:49:25.8656|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:25.8656|Info|  Settimeout: id:146, (32) ms
2015-09-05 17:49:25.8656|Info|  Settimeout: id:147, (256) ms
2015-09-05 17:49:25.8656|Info|      Encerrado timer: id:145, (17:49:25.8696)
2015-09-05 17:49:25.9014|Info|      Executando timer: id:146, (17:49:25.9014)
2015-09-05 17:49:25.9014|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:25.9014|Info|  Settimeout: id:148, (32) ms
2015-09-05 17:49:25.9014|Info|!timeoutId && !maxTimeoutId false
2015-09-05 17:49:25.9014|Info|      Encerrado timer: id:146, (17:49:25.9044)
2015-09-05 17:49:25.9364|Info|      Executando timer: id:148, (17:49:25.9364)
2015-09-05 17:49:25.9364|Info|          Deveria ter disparado: function maxDelayed() {
        complete(trailing, timeoutId);
      }
2015-09-05 17:49:25.9364|Info|!timeoutId && !maxTimeoutId true
2015-09-05 17:49:25.9364|Info|      Encerrado timer: id:148, (17:49:25.9384)
2015-09-05 17:49:26.1284|Info|      Executando timer: id:147, (17:49:26.1284)
2015-09-05 17:49:26.1284|Info|          Deveria ter disparado: function () {
          deepEqual(actual, expected.slice(0, actual.length));
          QUnit.start();
        }
2015-09-05 17:49:26.1284|Info|  Settimeout: id:149, (13) ms
2015-09-05 17:49:26.1313|Info|      Encerrado timer: id:147, (17:49:26.1313)
2015-09-05 17:49:26.1313|Info|      Executando timer: id:149, (17:49:26.1454)
2015-09-05 17:49:26.1313|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:26.1504|Info|  Settimeout: id:150, (64) ms
2015-09-05 17:49:26.1504|Info|      Encerrado timer: id:149, (17:49:26.1513)
2015-09-05 17:49:26.2158|Info|      Executando timer: id:150, (17:49:26.2158)
2015-09-05 17:49:26.2158|Info|          Deveria ter disparado: function () {
          funced();
          strictEqual(callCount, isDebounce ? 1 : 2);
          QUnit.start();
        }
2015-09-05 17:49:26.2158|Info|  Settimeout: id:151, (13) ms
2015-09-05 17:49:26.2158|Info|      Encerrado timer: id:150, (17:49:26.2178)
2015-09-05 17:49:26.2318|Info|      Executando timer: id:151, (17:49:26.2318)
2015-09-05 17:49:26.2318|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:26.2318|Info|  Settimeout: id:152, (32) ms
2015-09-05 17:49:26.2318|Info|  Settimeout: id:153, (64) ms
2015-09-05 17:49:26.2318|Info|      Encerrado timer: id:151, (17:49:26.2378)
2015-09-05 17:49:26.3029|Info|      Executando timer: id:153, (17:49:26.3029)
2015-09-05 17:49:26.3029|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 0);
          QUnit.start();
        }
2015-09-05 17:49:26.3038|Info|  Settimeout: id:154, (13) ms
2015-09-05 17:49:26.3038|Info|      Encerrado timer: id:153, (17:49:26.3048)
2015-09-05 17:49:26.3189|Info|      Executando timer: id:154, (17:49:26.3189)
2015-09-05 17:49:26.3189|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:26.3189|Info|  Settimeout: id:155, (64) ms
2015-09-05 17:49:26.3189|Info|      Encerrado timer: id:154, (17:49:26.3209)
2015-09-05 17:49:26.3862|Info|      Executando timer: id:155, (17:49:26.3862)
2015-09-05 17:49:26.3862|Info|          Deveria ter disparado: function () {
          strictEqual(callCount, 2);
          QUnit.start();
        }
2015-09-05 17:49:26.3862|Info|  Settimeout: id:156, (13) ms
2015-09-05 17:49:26.3862|Info|      Encerrado timer: id:155, (17:49:26.3881)
2015-09-05 17:49:26.4022|Info|      Executando timer: id:156, (17:49:26.4022)
2015-09-05 17:49:26.4022|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:26.5189|Info|----------------------------------------
2015-09-05 17:49:26.5189|Info|    PASS: 4450  FAIL: 1  TOTAL: 4451
2015-09-05 17:49:26.5189|Info|    Finished in 7672 milliseconds.
2015-09-05 17:49:26.5189|Info|----------------------------------------
2015-09-05 17:49:26.5219|Info|      Encerrado timer: id:156, (17:49:26.5219)
2015-09-05 17:49:26.5219|Info|Encerrando os testes
2015-09-05 17:49:26.5219|Info|Total:4451, Sucesso: 4450, Falha: 1
2015-09-05 17:49:26.5219|Info| 8 segundos para avaliar o individuo lodash.js
2015-09-05 17:49:26.5219|Info|FAILED: lodash.isNil: should work with nulls from another realm: Expected 2 assertions, but 1 were run, ,     at V8Runtime [2]:lodashTest:7765:5
    at V8Runtime [2]:lodashTest:7774:4
    at V8Runtime [2]:lodashTest:17424:3
2015-09-05 17:49:27.2142|Info|Iniciando os testes
2015-09-05 17:49:29.5594|Info|Encerrando os testes
2015-09-05 17:49:29.5594|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 17:49:29.5594|Info| 2 segundos para avaliar o individuo global.js
2015-09-05 17:49:30.4824|Info|Iniciando os testes
2015-09-05 17:49:30.4824|Info|  Settimeout: id:0, (13) ms
2015-09-05 17:49:30.4985|Info|      Executando timer: id:0, (17:49:30.4985)
2015-09-05 17:49:30.4985|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:31.5006|Info|  Settimeout: id:1, (13) ms
2015-09-05 17:49:31.5006|Info|      Encerrado timer: id:0, (17:49:31.5016)
2015-09-05 17:49:31.5156|Info|      Executando timer: id:1, (17:49:31.5156)
2015-09-05 17:49:31.5156|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 17:49:32.5163|Info|  Settimeout: id:2, (13) ms
2015-09-05 17:49:32.5163|Info|      Encerrado timer: id:1, (17:49:32.5171)
2015-09-05 17:49:32.5328|Info|      Executando timer: id:2, (17:49:32.5328)
2015-09-05 17:49:32.5328|Info|          Deveria ter disparado: function next() {
		process( last );
	}
2015-09-05 17:49:32.9001|Info|      Encerrado timer: id:2, (17:49:32.9001)
2015-09-05 17:49:32.9001|Info|Encerrando os testes
2015-09-05 17:49:32.9001|Info|Total:57982, Sucesso: 57982, Falha: 0
2015-09-05 17:49:32.9001|Info| 2 segundos para avaliar o individuo global.js
2015-09-05 17:49:33.0142|Info|Iniciando os testes
2015-09-05 17:49:33.0142|Info|  Settimeout: id:0, (13) ms
2015-09-05 17:49:33.0302|Info|      Executando timer: id:0, (17:49:33.0302)
2015-09-05 17:49:33.0302|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:33.0422|Info|----------------------------------------
2015-09-05 17:49:33.0422|Info|Arrays
2015-09-05 17:49:33.0422|Info|----------------------------------------
2015-09-05 17:49:33.0422|Info| PASS - first
2015-09-05 17:49:33.0422|Info| PASS - head
2015-09-05 17:49:33.0422|Info| PASS - take
2015-09-05 17:49:33.0422|Info| PASS - rest
2015-09-05 17:49:33.0422|Info| PASS - tail
2015-09-05 17:49:33.0422|Info| PASS - drop
2015-09-05 17:49:33.0422|Info| PASS - initial
2015-09-05 17:49:33.0422|Info| PASS - last
2015-09-05 17:49:33.0532|Info| PASS - compact
2015-09-05 17:49:33.5439|Info| PASS - flatten
2015-09-05 17:49:33.5439|Info| PASS - without
2015-09-05 17:49:33.5439|Info| PASS - sortedIndex
2015-09-05 17:49:33.5439|Info| PASS - uniq
2015-09-05 17:49:33.5439|Info| PASS - unique
2015-09-05 17:49:33.5439|Info| PASS - intersection
2015-09-05 17:49:33.5439|Info| PASS - union
2015-09-05 17:49:33.5439|Info| PASS - difference
2015-09-05 17:49:33.5539|Info| PASS - zip
2015-09-05 17:49:33.5539|Info| PASS - unzip
2015-09-05 17:49:33.5539|Info| PASS - object
2015-09-05 17:49:33.5539|Info| PASS - indexOf
2015-09-05 17:49:33.5539|Info| PASS - indexOf with NaN
2015-09-05 17:49:33.5539|Info| PASS - indexOf with +- 0
2015-09-05 17:49:33.5539|Info| PASS - lastIndexOf
2015-09-05 17:49:33.5539|Info| PASS - lastIndexOf with NaN
2015-09-05 17:49:33.5539|Info| PASS - lastIndexOf with +- 0
2015-09-05 17:49:33.5539|Info| PASS - findIndex
2015-09-05 17:49:33.5539|Info| PASS - findLastIndex
2015-09-05 17:49:33.5539|Info| PASS - range
2015-09-05 17:49:33.5539|Info|----------------------------------------
2015-09-05 17:49:33.5539|Info|Chaining
2015-09-05 17:49:33.5539|Info|----------------------------------------
2015-09-05 17:49:33.5689|Info| PASS - map/flatten/reduce
2015-09-05 17:49:33.5689|Info| PASS - select/reject/sortBy
2015-09-05 17:49:33.5689|Info| PASS - select/reject/sortBy in functional style
2015-09-05 17:49:33.5689|Info| PASS - reverse/concat/unshift/pop/map
2015-09-05 17:49:33.5689|Info| PASS - splice
2015-09-05 17:49:33.5689|Info| PASS - shift
2015-09-05 17:49:33.5689|Info| PASS - pop
2015-09-05 17:49:33.5689|Info| PASS - chaining works in small stages
2015-09-05 17:49:33.5689|Info| PASS - #1562: Engine proxies for chained functions
2015-09-05 17:49:33.5689|Info|----------------------------------------
2015-09-05 17:49:33.5689|Info|Collections
2015-09-05 17:49:33.5689|Info|----------------------------------------
2015-09-05 17:49:33.5689|Info| PASS - each
2015-09-05 17:49:33.5689|Info| PASS - forEach
2015-09-05 17:49:33.5689|Info| PASS - lookupIterator with contexts
2015-09-05 17:49:33.5689|Info| PASS - Iterating objects with sketchy length properties
2015-09-05 17:49:33.5870|Info| PASS - Resistant to collection length and properties changing while iterating
2015-09-05 17:49:33.5870|Info| PASS - map
2015-09-05 17:49:33.5870|Info| PASS - collect
2015-09-05 17:49:33.5870|Info| PASS - reduce
2015-09-05 17:49:33.5870|Info| PASS - foldl
2015-09-05 17:49:33.5870|Info| PASS - reduceRight
2015-09-05 17:49:33.5870|Info| PASS - foldr
2015-09-05 17:49:33.5870|Info| PASS - find
2015-09-05 17:49:33.5870|Info| PASS - detect
2015-09-05 17:49:33.5870|Info| PASS - filter
2015-09-05 17:49:33.5870|Info| PASS - select
2015-09-05 17:49:33.5870|Info| PASS - reject
2015-09-05 17:49:33.5870|Info| PASS - every
2015-09-05 17:49:33.6000|Info| PASS - all
2015-09-05 17:49:33.6000|Info| PASS - some
2015-09-05 17:49:33.6000|Info| PASS - any
2015-09-05 17:49:33.6000|Info| PASS - includes
2015-09-05 17:49:33.6000|Info| PASS - include
2015-09-05 17:49:33.6000|Info| PASS - contains
2015-09-05 17:49:33.6000|Info| PASS - includes with NaN
2015-09-05 17:49:33.6000|Info| PASS - includes with +- 0
2015-09-05 17:49:33.6000|Info| PASS - invoke
2015-09-05 17:49:33.6000|Info| PASS - invoke w/ function reference
2015-09-05 17:49:33.6000|Info| PASS - invoke when strings have a call method
2015-09-05 17:49:33.6000|Info| PASS - pluck
2015-09-05 17:49:33.6000|Info| PASS - where
2015-09-05 17:49:33.6000|Info| PASS - findWhere
2015-09-05 17:49:33.6403|Info| PASS - max
2015-09-05 17:49:33.6653|Info| PASS - min
2015-09-05 17:49:33.6653|Info| PASS - sortBy
2015-09-05 17:49:33.6653|Info| PASS - groupBy
2015-09-05 17:49:33.6653|Info| PASS - indexBy
2015-09-05 17:49:33.6653|Info| PASS - countBy
2015-09-05 17:49:33.6653|Info| PASS - shuffle
2015-09-05 17:49:33.6653|Info| PASS - sample
2015-09-05 17:49:33.6653|Info| PASS - toArray
2015-09-05 17:49:33.6653|Info| PASS - size
2015-09-05 17:49:33.6653|Info| PASS - partition
2015-09-05 17:49:33.6653|Info|----------------------------------------
2015-09-05 17:49:33.6653|Info|Functions
2015-09-05 17:49:33.6653|Info|----------------------------------------
2015-09-05 17:49:33.6653|Info| PASS - bind
2015-09-05 17:49:33.6783|Info| PASS - partial
2015-09-05 17:49:33.6783|Info| PASS - bindAll
2015-09-05 17:49:33.6783|Info| PASS - memoize
2015-09-05 17:49:33.6783|Info|  Settimeout: id:1, (100) ms
2015-09-05 17:49:33.6783|Info|  Settimeout: id:2, (50) ms
2015-09-05 17:49:33.6783|Info|  Settimeout: id:3, (150) ms
2015-09-05 17:49:33.6783|Info|      Encerrado timer: id:0, (17:49:33.6843)
2015-09-05 17:49:33.7343|Info|      Executando timer: id:2, (17:49:33.7343)
2015-09-05 17:49:33.7343|Info|          Deveria ter disparado: function (){ ok(!delayed, "didn't delay the function quite yet"); }
2015-09-05 17:49:33.7343|Info|      Encerrado timer: id:2, (17:49:33.7353)
2015-09-05 17:49:33.7836|Info|      Executando timer: id:1, (17:49:33.7836)
2015-09-05 17:49:33.7836|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:33.7836|Info|      Encerrado timer: id:1, (17:49:33.7846)
2015-09-05 17:49:33.8347|Info|      Executando timer: id:3, (17:49:33.8347)
2015-09-05 17:49:33.8347|Info|          Deveria ter disparado: function (){ ok(delayed, 'delayed the function'); start(); }
2015-09-05 17:49:33.8347|Info|  Settimeout: id:4, (13) ms
2015-09-05 17:49:33.8347|Info|      Encerrado timer: id:3, (17:49:33.8386)
2015-09-05 17:49:33.8527|Info|      Executando timer: id:4, (17:49:33.8527)
2015-09-05 17:49:33.8527|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:33.8527|Info| PASS - delay
2015-09-05 17:49:33.8527|Info|  Settimeout: id:5, (1) ms
2015-09-05 17:49:33.8527|Info|  Settimeout: id:6, (50) ms
2015-09-05 17:49:33.8527|Info|      Encerrado timer: id:4, (17:49:33.8567)
2015-09-05 17:49:33.8527|Info|      Executando timer: id:5, (17:49:33.8576)
2015-09-05 17:49:33.8527|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:33.8527|Info|      Encerrado timer: id:5, (17:49:33.8587)
2015-09-05 17:49:33.9077|Info|      Executando timer: id:6, (17:49:33.9077)
2015-09-05 17:49:33.9077|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:33.9077|Info|  Settimeout: id:7, (13) ms
2015-09-05 17:49:33.9077|Info|      Encerrado timer: id:6, (17:49:33.9097)
2015-09-05 17:49:33.9237|Info|      Executando timer: id:7, (17:49:33.9237)
2015-09-05 17:49:33.9237|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:33.9237|Info| PASS - defer
2015-09-05 17:49:33.9237|Info|  Settimeout: id:8, (32) ms
2015-09-05 17:49:33.9237|Info|  Settimeout: id:9, (64) ms
2015-09-05 17:49:33.9237|Info|      Encerrado timer: id:7, (17:49:33.9277)
2015-09-05 17:49:33.9601|Info|      Executando timer: id:8, (17:49:33.9601)
2015-09-05 17:49:33.9601|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:33.9601|Info|      Encerrado timer: id:8, (17:49:33.9611)
2015-09-05 17:49:33.9922|Info|      Executando timer: id:9, (17:49:33.9922)
2015-09-05 17:49:33.9922|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:33.9922|Info|  Settimeout: id:10, (13) ms
2015-09-05 17:49:33.9922|Info|      Encerrado timer: id:9, (17:49:33.9941)
2015-09-05 17:49:34.0082|Info|      Executando timer: id:10, (17:49:34.0082)
2015-09-05 17:49:34.0082|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.0082|Info| PASS - throttle
2015-09-05 17:49:34.0082|Info|  Settimeout: id:11, (32) ms
2015-09-05 17:49:34.0082|Info|  Settimeout: id:12, (64) ms
2015-09-05 17:49:34.0082|Info|  Settimeout: id:13, (96) ms
2015-09-05 17:49:34.0082|Info|      Encerrado timer: id:10, (17:49:34.0121)
2015-09-05 17:49:34.0442|Info|      Executando timer: id:11, (17:49:34.0442)
2015-09-05 17:49:34.0442|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.0442|Info|      Encerrado timer: id:11, (17:49:34.0461)
2015-09-05 17:49:34.0772|Info|      Executando timer: id:12, (17:49:34.0772)
2015-09-05 17:49:34.0772|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.0772|Info|      Encerrado timer: id:12, (17:49:34.0782)
2015-09-05 17:49:34.1092|Info|      Executando timer: id:13, (17:49:34.1092)
2015-09-05 17:49:34.1092|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.1092|Info|  Settimeout: id:14, (13) ms
2015-09-05 17:49:34.1092|Info|      Encerrado timer: id:13, (17:49:34.1112)
2015-09-05 17:49:34.1252|Info|      Executando timer: id:14, (17:49:34.1252)
2015-09-05 17:49:34.1252|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.1252|Info| PASS - throttle arguments
2015-09-05 17:49:34.1252|Info|  Settimeout: id:15, (64) ms
2015-09-05 17:49:34.1252|Info|      Encerrado timer: id:14, (17:49:34.1282)
2015-09-05 17:49:34.1924|Info|      Executando timer: id:15, (17:49:34.1924)
2015-09-05 17:49:34.1924|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.1924|Info|  Settimeout: id:16, (13) ms
2015-09-05 17:49:34.1944|Info|      Encerrado timer: id:15, (17:49:34.1944)
2015-09-05 17:49:34.1944|Info|      Executando timer: id:16, (17:49:34.2085)
2015-09-05 17:49:34.2094|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.2094|Info| PASS - throttle once
2015-09-05 17:49:34.2094|Info|  Settimeout: id:17, (32) ms
2015-09-05 17:49:34.2094|Info|  Settimeout: id:18, (64) ms
2015-09-05 17:49:34.2094|Info|      Encerrado timer: id:16, (17:49:34.2124)
2015-09-05 17:49:34.2444|Info|      Executando timer: id:17, (17:49:34.2444)
2015-09-05 17:49:34.2444|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.2444|Info|      Encerrado timer: id:17, (17:49:34.2454)
2015-09-05 17:49:34.2772|Info|      Executando timer: id:18, (17:49:34.2772)
2015-09-05 17:49:34.2772|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.2772|Info|  Settimeout: id:19, (13) ms
2015-09-05 17:49:34.2772|Info|      Encerrado timer: id:18, (17:49:34.2801)
2015-09-05 17:49:34.2941|Info|      Executando timer: id:19, (17:49:34.2941)
2015-09-05 17:49:34.2941|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.2941|Info| PASS - throttle twice
2015-09-05 17:49:34.2941|Info|  Settimeout: id:20, (30) ms
2015-09-05 17:49:34.2941|Info|  Settimeout: id:21, (85) ms
2015-09-05 17:49:34.2941|Info|      Encerrado timer: id:19, (17:49:34.2981)
2015-09-05 17:49:34.3281|Info|      Executando timer: id:20, (17:49:34.3281)
2015-09-05 17:49:34.3281|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.3281|Info|      Encerrado timer: id:20, (17:49:34.3292)
2015-09-05 17:49:34.3962|Info|      Executando timer: id:21, (17:49:34.3962)
2015-09-05 17:49:34.3967|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.3967|Info|  Settimeout: id:22, (13) ms
2015-09-05 17:49:34.3967|Info|      Encerrado timer: id:21, (17:49:34.3987)
2015-09-05 17:49:34.4128|Info|      Executando timer: id:22, (17:49:34.4128)
2015-09-05 17:49:34.4128|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.4128|Info| PASS - more throttling
2015-09-05 17:49:34.4128|Info|  Settimeout: id:23, (100) ms
2015-09-05 17:49:34.4128|Info|  Settimeout: id:24, (50) ms
2015-09-05 17:49:34.4128|Info|  Settimeout: id:25, (150) ms
2015-09-05 17:49:34.4128|Info|  Settimeout: id:26, (160) ms
2015-09-05 17:49:34.4128|Info|  Settimeout: id:27, (230) ms
2015-09-05 17:49:34.4128|Info|  Settimeout: id:28, (300) ms
2015-09-05 17:49:34.4128|Info|      Encerrado timer: id:22, (17:49:34.4197)
2015-09-05 17:49:34.4678|Info|      Executando timer: id:24, (17:49:34.4678)
2015-09-05 17:49:34.4678|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.4678|Info|      Encerrado timer: id:24, (17:49:34.4688)
2015-09-05 17:49:34.5168|Info|      Executando timer: id:23, (17:49:34.5168)
2015-09-05 17:49:34.5168|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.5168|Info|      Encerrado timer: id:23, (17:49:34.5178)
2015-09-05 17:49:34.5681|Info|      Executando timer: id:25, (17:49:34.5681)
2015-09-05 17:49:34.5681|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.5691|Info|  Settimeout: id:29, (48) ms
2015-09-05 17:49:34.5691|Info|      Encerrado timer: id:25, (17:49:34.5701)
2015-09-05 17:49:34.5691|Info|      Executando timer: id:26, (17:49:34.5791)
2015-09-05 17:49:34.5691|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.5691|Info|      Encerrado timer: id:26, (17:49:34.5801)
2015-09-05 17:49:34.6192|Info|      Executando timer: id:29, (17:49:34.6192)
2015-09-05 17:49:34.6192|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.6192|Info|      Encerrado timer: id:29, (17:49:34.6201)
2015-09-05 17:49:34.6492|Info|      Executando timer: id:27, (17:49:34.6492)
2015-09-05 17:49:34.6492|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.6492|Info|  Settimeout: id:30, (69) ms
2015-09-05 17:49:34.6492|Info|      Encerrado timer: id:27, (17:49:34.6521)
2015-09-05 17:49:34.7202|Info|      Executando timer: id:28, (17:49:34.7202)
2015-09-05 17:49:34.7202|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.7202|Info|  Settimeout: id:31, (13) ms
2015-09-05 17:49:34.7202|Info|      Encerrado timer: id:28, (17:49:34.7222)
2015-09-05 17:49:34.7202|Info|      Executando timer: id:30, (17:49:34.7222)
2015-09-05 17:49:34.7202|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.7202|Info|      Encerrado timer: id:30, (17:49:34.7242)
2015-09-05 17:49:34.7363|Info|      Executando timer: id:31, (17:49:34.7363)
2015-09-05 17:49:34.7363|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.7363|Info| PASS - throttle repeatedly with results
2015-09-05 17:49:34.7363|Info|  Settimeout: id:32, (32) ms
2015-09-05 17:49:34.7702|Info|  Settimeout: id:33, (32) ms
2015-09-05 17:49:34.7863|Info|  Settimeout: id:34, (96) ms
2015-09-05 17:49:34.7863|Info|      Encerrado timer: id:31, (17:49:34.7872)
2015-09-05 17:49:34.8111|Info|      Executando timer: id:33, (17:49:34.8111)
2015-09-05 17:49:34.8111|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.8111|Info|      Encerrado timer: id:33, (17:49:34.8128)
2015-09-05 17:49:34.8833|Info|      Executando timer: id:34, (17:49:34.8833)
2015-09-05 17:49:34.8833|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.8833|Info|  Settimeout: id:35, (13) ms
2015-09-05 17:49:34.8833|Info|      Encerrado timer: id:34, (17:49:34.8853)
2015-09-05 17:49:34.8993|Info|      Executando timer: id:35, (17:49:34.8993)
2015-09-05 17:49:34.8993|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:34.8993|Info| PASS - throttle triggers trailing call when invoked repeatedly
2015-09-05 17:49:34.8993|Info|  Settimeout: id:36, (60) ms
2015-09-05 17:49:34.8993|Info|  Settimeout: id:37, (96) ms
2015-09-05 17:49:34.8993|Info|      Encerrado timer: id:35, (17:49:34.9033)
2015-09-05 17:49:34.9634|Info|      Executando timer: id:36, (17:49:34.9634)
2015-09-05 17:49:34.9634|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:34.9634|Info|      Encerrado timer: id:36, (17:49:34.9643)
2015-09-05 17:49:34.9994|Info|      Executando timer: id:37, (17:49:34.9994)
2015-09-05 17:49:34.9994|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:34.9994|Info|  Settimeout: id:38, (13) ms
2015-09-05 17:49:34.9994|Info|      Encerrado timer: id:37, (17:49:35.0013)
2015-09-05 17:49:35.0154|Info|      Executando timer: id:38, (17:49:35.0154)
2015-09-05 17:49:35.0154|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:35.0154|Info| PASS - throttle does not trigger leading call when leading is set to false
2015-09-05 17:49:35.0154|Info|  Settimeout: id:39, (100) ms
2015-09-05 17:49:35.0154|Info|  Settimeout: id:40, (50) ms
2015-09-05 17:49:35.0154|Info|  Settimeout: id:41, (60) ms
2015-09-05 17:49:35.0154|Info|  Settimeout: id:42, (200) ms
2015-09-05 17:49:35.0154|Info|  Settimeout: id:43, (250) ms
2015-09-05 17:49:35.0154|Info|  Settimeout: id:44, (350) ms
2015-09-05 17:49:35.0154|Info|      Encerrado timer: id:38, (17:49:35.0214)
2015-09-05 17:49:35.0695|Info|      Executando timer: id:40, (17:49:35.0695)
2015-09-05 17:49:35.0695|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:35.0695|Info|      Encerrado timer: id:40, (17:49:35.0704)
2015-09-05 17:49:35.0695|Info|      Executando timer: id:41, (17:49:35.0805)
2015-09-05 17:49:35.0695|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:35.0695|Info|      Encerrado timer: id:41, (17:49:35.0814)
2015-09-05 17:49:35.1194|Info|      Executando timer: id:39, (17:49:35.1194)
2015-09-05 17:49:35.1194|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:35.1194|Info|      Encerrado timer: id:39, (17:49:35.1204)
2015-09-05 17:49:35.2245|Info|      Executando timer: id:42, (17:49:35.2245)
2015-09-05 17:49:35.2253|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:35.2253|Info|  Settimeout: id:45, (100) ms
2015-09-05 17:49:35.2253|Info|      Encerrado timer: id:42, (17:49:35.2273)
2015-09-05 17:49:35.2783|Info|      Executando timer: id:43, (17:49:35.2783)
2015-09-05 17:49:35.2783|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:35.2783|Info|      Encerrado timer: id:43, (17:49:35.2799)
2015-09-05 17:49:35.3279|Info|      Executando timer: id:45, (17:49:35.3279)
2015-09-05 17:49:35.3279|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:35.3279|Info|      Encerrado timer: id:45, (17:49:35.3289)
2015-09-05 17:49:35.3720|Info|      Executando timer: id:44, (17:49:35.3720)
2015-09-05 17:49:35.3720|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:35.3720|Info|  Settimeout: id:46, (13) ms
2015-09-05 17:49:35.3720|Info|      Encerrado timer: id:44, (17:49:35.3739)
2015-09-05 17:49:35.3880|Info|      Executando timer: id:46, (17:49:35.3880)
2015-09-05 17:49:35.3880|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:35.3880|Info| PASS - more throttle does not trigger leading call when leading is set to false
2015-09-05 17:49:35.3880|Info|  Settimeout: id:47, (100) ms
2015-09-05 17:49:35.4900|Info|  Settimeout: id:48, (100) ms
2015-09-05 17:49:35.5902|Info|  Settimeout: id:49, (100) ms
2015-09-05 17:49:35.6907|Info|  Settimeout: id:50, (100) ms
2015-09-05 17:49:35.7408|Info|  Settimeout: id:51, (200) ms
2015-09-05 17:49:35.7408|Info|      Encerrado timer: id:46, (17:49:35.7418)
2015-09-05 17:49:35.8309|Info|      Executando timer: id:50, (17:49:35.8309)
2015-09-05 17:49:35.8309|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:35.8309|Info|      Encerrado timer: id:50, (17:49:35.8319)
2015-09-05 17:49:35.9421|Info|      Executando timer: id:51, (17:49:35.9421)
2015-09-05 17:49:35.9421|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:35.9421|Info|  Settimeout: id:52, (13) ms
2015-09-05 17:49:35.9441|Info|      Encerrado timer: id:51, (17:49:35.9441)
2015-09-05 17:49:35.9441|Info|      Executando timer: id:52, (17:49:35.9577)
2015-09-05 17:49:35.9441|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:35.9441|Info| PASS - one more throttle with leading: false test
2015-09-05 17:49:35.9441|Info|  Settimeout: id:53, (96) ms
2015-09-05 17:49:35.9441|Info|      Encerrado timer: id:52, (17:49:35.9577)
2015-09-05 17:49:36.0662|Info|      Executando timer: id:53, (17:49:36.0662)
2015-09-05 17:49:36.0662|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.0662|Info|  Settimeout: id:54, (96) ms
2015-09-05 17:49:36.0711|Info|      Encerrado timer: id:53, (17:49:36.0711)
2015-09-05 17:49:36.1682|Info|      Executando timer: id:54, (17:49:36.1682)
2015-09-05 17:49:36.1682|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.1682|Info|  Settimeout: id:55, (13) ms
2015-09-05 17:49:36.1682|Info|      Encerrado timer: id:54, (17:49:36.1701)
2015-09-05 17:49:36.1842|Info|      Executando timer: id:55, (17:49:36.1842)
2015-09-05 17:49:36.1842|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:36.1842|Info| PASS - throttle does not trigger trailing call when trailing is set to false
2015-09-05 17:49:36.1842|Info|  Settimeout: id:56, (200) ms
2015-09-05 17:49:36.1842|Info|      Encerrado timer: id:55, (17:49:36.1872)
2015-09-05 17:49:36.3892|Info|      Executando timer: id:56, (17:49:36.3892)
2015-09-05 17:49:36.3892|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.3892|Info|  Settimeout: id:57, (13) ms
2015-09-05 17:49:36.3892|Info|      Encerrado timer: id:56, (17:49:36.3917)
2015-09-05 17:49:36.4058|Info|      Executando timer: id:57, (17:49:36.4058)
2015-09-05 17:49:36.4058|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:36.4058|Info| PASS - throttle continues to function after system time is set backwards
2015-09-05 17:49:36.4058|Info|  Settimeout: id:58, (32) ms
2015-09-05 17:49:36.4058|Info|  Settimeout: id:59, (100) ms
2015-09-05 17:49:36.4058|Info|      Encerrado timer: id:57, (17:49:36.4087)
2015-09-05 17:49:36.4408|Info|      Executando timer: id:58, (17:49:36.4408)
2015-09-05 17:49:36.4408|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:36.4408|Info|  Settimeout: id:60, (32) ms
2015-09-05 17:49:36.4408|Info|      Encerrado timer: id:58, (17:49:36.4428)
2015-09-05 17:49:36.4817|Info|      Executando timer: id:60, (17:49:36.4817)
2015-09-05 17:49:36.4817|Info|          Deveria ter disparado: function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    }
2015-09-05 17:49:36.4817|Info|      Encerrado timer: id:60, (17:49:36.4834)
2015-09-05 17:49:36.5094|Info|      Executando timer: id:59, (17:49:36.5094)
2015-09-05 17:49:36.5094|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.5094|Info|  Settimeout: id:61, (13) ms
2015-09-05 17:49:36.5094|Info|      Encerrado timer: id:59, (17:49:36.5114)
2015-09-05 17:49:36.5255|Info|      Executando timer: id:61, (17:49:36.5255)
2015-09-05 17:49:36.5255|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:36.5255|Info| PASS - throttle re-entrant
2015-09-05 17:49:36.5255|Info|  Settimeout: id:62, (32) ms
2015-09-05 17:49:36.5255|Info|  Settimeout: id:63, (16) ms
2015-09-05 17:49:36.5255|Info|  Settimeout: id:64, (96) ms
2015-09-05 17:49:36.5255|Info|      Encerrado timer: id:61, (17:49:36.5304)
2015-09-05 17:49:36.5464|Info|      Executando timer: id:63, (17:49:36.5464)
2015-09-05 17:49:36.5464|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.5464|Info|      Encerrado timer: id:63, (17:49:36.5474)
2015-09-05 17:49:36.5614|Info|      Executando timer: id:62, (17:49:36.5614)
2015-09-05 17:49:36.5614|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:36.5614|Info|  Settimeout: id:65, (17) ms
2015-09-05 17:49:36.5614|Info|      Encerrado timer: id:62, (17:49:36.5634)
2015-09-05 17:49:36.5818|Info|      Executando timer: id:65, (17:49:36.5818)
2015-09-05 17:49:36.5818|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:36.5818|Info|      Encerrado timer: id:65, (17:49:36.5827)
2015-09-05 17:49:36.6268|Info|      Executando timer: id:64, (17:49:36.6268)
2015-09-05 17:49:36.6268|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.6268|Info|  Settimeout: id:66, (13) ms
2015-09-05 17:49:36.6268|Info|      Encerrado timer: id:64, (17:49:36.6288)
2015-09-05 17:49:36.6428|Info|      Executando timer: id:66, (17:49:36.6428)
2015-09-05 17:49:36.6428|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:36.6428|Info| PASS - debounce
2015-09-05 17:49:36.6428|Info|  Settimeout: id:67, (64) ms
2015-09-05 17:49:36.6428|Info|  Settimeout: id:68, (16) ms
2015-09-05 17:49:36.6428|Info|  Settimeout: id:69, (32) ms
2015-09-05 17:49:36.6468|Info|  Settimeout: id:70, (48) ms
2015-09-05 17:49:36.6468|Info|  Settimeout: id:71, (128) ms
2015-09-05 17:49:36.6468|Info|      Encerrado timer: id:66, (17:49:36.6488)
2015-09-05 17:49:36.6628|Info|      Executando timer: id:68, (17:49:36.6628)
2015-09-05 17:49:36.6628|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.6628|Info|      Encerrado timer: id:68, (17:49:36.6638)
2015-09-05 17:49:36.6799|Info|      Executando timer: id:69, (17:49:36.6799)
2015-09-05 17:49:36.6799|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.6799|Info|      Encerrado timer: id:69, (17:49:36.6804)
2015-09-05 17:49:36.6961|Info|      Executando timer: id:70, (17:49:36.6961)
2015-09-05 17:49:36.6961|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.6961|Info|      Encerrado timer: id:70, (17:49:36.6974)
2015-09-05 17:49:36.7105|Info|      Executando timer: id:67, (17:49:36.7105)
2015-09-05 17:49:36.7105|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:36.7105|Info|  Settimeout: id:72, (50) ms
2015-09-05 17:49:36.7105|Info|      Encerrado timer: id:67, (17:49:36.7124)
2015-09-05 17:49:36.7635|Info|      Executando timer: id:72, (17:49:36.7635)
2015-09-05 17:49:36.7635|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:36.7635|Info|      Encerrado timer: id:72, (17:49:36.7645)
2015-09-05 17:49:36.7775|Info|      Executando timer: id:71, (17:49:36.7775)
2015-09-05 17:49:36.7775|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.7775|Info|  Settimeout: id:73, (13) ms
2015-09-05 17:49:36.7775|Info|      Encerrado timer: id:71, (17:49:36.7795)
2015-09-05 17:49:36.7935|Info|      Executando timer: id:73, (17:49:36.7935)
2015-09-05 17:49:36.7935|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:36.7935|Info| PASS - debounce asap
2015-09-05 17:49:36.7935|Info|  Settimeout: id:74, (32) ms
2015-09-05 17:49:36.7935|Info|  Settimeout: id:75, (96) ms
2015-09-05 17:49:36.7935|Info|      Encerrado timer: id:73, (17:49:36.7975)
2015-09-05 17:49:36.8285|Info|      Executando timer: id:74, (17:49:36.8285)
2015-09-05 17:49:36.8285|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:36.8285|Info|      Encerrado timer: id:74, (17:49:36.8295)
2015-09-05 17:49:36.8946|Info|      Executando timer: id:75, (17:49:36.8946)
2015-09-05 17:49:36.8946|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:36.8946|Info|  Settimeout: id:76, (13) ms
2015-09-05 17:49:36.8946|Info|      Encerrado timer: id:75, (17:49:36.8959)
2015-09-05 17:49:36.9116|Info|      Executando timer: id:76, (17:49:36.9116)
2015-09-05 17:49:36.9125|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:36.9125|Info| PASS - debounce asap recursively
2015-09-05 17:49:36.9125|Info|  Settimeout: id:77, (100) ms
2015-09-05 17:49:36.9125|Info|  Settimeout: id:78, (200) ms
2015-09-05 17:49:36.9125|Info|      Encerrado timer: id:76, (17:49:36.9155)
2015-09-05 17:49:37.0158|Info|      Executando timer: id:77, (17:49:37.0158)
2015-09-05 17:49:37.0158|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:37.0158|Info|      Encerrado timer: id:77, (17:49:37.0168)
2015-09-05 17:49:37.1165|Info|      Executando timer: id:78, (17:49:37.1165)
2015-09-05 17:49:37.1165|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:37.1165|Info|  Settimeout: id:79, (100) ms
2015-09-05 17:49:37.1165|Info|  Settimeout: id:80, (13) ms
2015-09-05 17:49:37.1165|Info|      Encerrado timer: id:78, (17:49:37.1195)
2015-09-05 17:49:37.1336|Info|      Executando timer: id:80, (17:49:37.1336)
2015-09-05 17:49:37.1336|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:37.1336|Info| PASS - debounce after system time is set backwards
2015-09-05 17:49:37.1336|Info|  Settimeout: id:81, (32) ms
2015-09-05 17:49:37.2430|Info|  Settimeout: id:82, (100) ms
2015-09-05 17:49:37.2430|Info|      Encerrado timer: id:80, (17:49:37.2440)
2015-09-05 17:49:37.2430|Info|      Executando timer: id:79, (17:49:37.2450)
2015-09-05 17:49:37.2430|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:37.2430|Info|      Encerrado timer: id:79, (17:49:37.2460)
2015-09-05 17:49:37.2760|Info|      Executando timer: id:81, (17:49:37.2760)
2015-09-05 17:49:37.2760|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:37.2760|Info|  Settimeout: id:83, (32) ms
2015-09-05 17:49:37.2760|Info|      Encerrado timer: id:81, (17:49:37.2780)
2015-09-05 17:49:37.3111|Info|      Executando timer: id:83, (17:49:37.3111)
2015-09-05 17:49:37.3111|Info|          Deveria ter disparado: function () {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    }
2015-09-05 17:49:37.3111|Info|      Encerrado timer: id:83, (17:49:37.3120)
2015-09-05 17:49:37.3451|Info|      Executando timer: id:82, (17:49:37.3451)
2015-09-05 17:49:37.3451|Info|          Deveria ter disparado: function (){
      return func.apply(null, args);
    }
2015-09-05 17:49:37.3451|Info|  Settimeout: id:84, (13) ms
2015-09-05 17:49:37.3451|Info|      Encerrado timer: id:82, (17:49:37.3470)
2015-09-05 17:49:37.3611|Info|      Executando timer: id:84, (17:49:37.3611)
2015-09-05 17:49:37.3611|Info|          Deveria ter disparado: function () {
			if ( config.current && config.current.semaphore > 0 ) {
				return;
			}
			if ( config.timeout ) {
				clearTimeout( config.timeout );
			}
			begin();
		}
2015-09-05 17:49:37.3611|Info| PASS - debounce re-entrant
2015-09-05 17:49:37.3611|Info| PASS - once
2015-09-05 17:49:37.3671|Info| PASS - Recursive onced function.
2015-09-05 17:49:37.3671|Info| PASS - wrap
2015-09-05 17:49:37.3671|Info| PASS - negate
2015-09-05 17:49:37.3671|Info| PASS - compose
2015-09-05 17:49:37.3671|Info| PASS - after
2015-09-05 17:49:37.3671|Info| PASS - before
2015-09-05 17:49:37.3671|Info| PASS - iteratee
2015-09-05 17:49:37.3671|Info|----------------------------------------
2015-09-05 17:49:37.3671|Info|Objects
2015-09-05 17:49:37.3671|Info|----------------------------------------
2015-09-05 17:49:37.3671|Info| PASS - keys
2015-09-05 17:49:37.3671|Info| PASS - allKeys
2015-09-05 17:49:37.3671|Info| PASS - values
2015-09-05 17:49:37.3671|Info| PASS - pairs
2015-09-05 17:49:37.3671|Info| PASS - invert
2015-09-05 17:49:37.3671|Info| PASS - functions
2015-09-05 17:49:37.3811|Info| PASS - methods
2015-09-05 17:49:37.3811|Info| PASS - extend
2015-09-05 17:49:37.3811|Info| PASS - extendOwn
2015-09-05 17:49:37.3811|Info| PASS - pick
2015-09-05 17:49:37.3811|Info| PASS - omit
2015-09-05 17:49:37.3811|Info| PASS - defaults
2015-09-05 17:49:37.3811|Info| PASS - clone
2015-09-05 17:49:37.3811|Info| PASS - create
2015-09-05 17:49:37.3811|Info| PASS - isEqual
2015-09-05 17:49:37.3811|Info| PASS - isEmpty
2015-09-05 17:49:37.3811|Info| PASS - isArguments
2015-09-05 17:49:37.3811|Info| PASS - isObject
2015-09-05 17:49:37.3971|Info| PASS - isArray
2015-09-05 17:49:37.3971|Info| PASS - isString
2015-09-05 17:49:37.3971|Info| PASS - isNumber
2015-09-05 17:49:37.3971|Info| PASS - isBoolean
2015-09-05 17:49:37.3971|Info| PASS - isFunction
2015-09-05 17:49:37.3971|Info| PASS - #1929 Typed Array constructors are functions
2015-09-05 17:49:37.3971|Info| PASS - isDate
2015-09-05 17:49:37.3971|Info| PASS - isRegExp
2015-09-05 17:49:37.3971|Info| PASS - isFinite
2015-09-05 17:49:37.3971|Info| PASS - isNaN
2015-09-05 17:49:37.3971|Info| PASS - isNull
2015-09-05 17:49:37.3971|Info| PASS - isUndefined
2015-09-05 17:49:37.3971|Info| PASS - isError
2015-09-05 17:49:37.3971|Info| PASS - tap
2015-09-05 17:49:37.3971|Info| PASS - has
2015-09-05 17:49:37.3971|Info| PASS - isMatch
2015-09-05 17:49:37.3971|Info| PASS - matcher
2015-09-05 17:49:37.3971|Info| PASS - matcher 
2015-09-05 17:49:37.4141|Info| PASS - findKey
2015-09-05 17:49:37.4141|Info| PASS - mapObject
2015-09-05 17:49:37.4141|Info|----------------------------------------
2015-09-05 17:49:37.4141|Info|Utility
2015-09-05 17:49:37.4141|Info|----------------------------------------
2015-09-05 17:49:37.4141|Info| PASS - #750 - Return _ instance.
2015-09-05 17:49:37.4141|Info| PASS - identity
2015-09-05 17:49:37.4141|Info| PASS - constant
2015-09-05 17:49:37.4141|Info| PASS - noop
2015-09-05 17:49:37.4141|Info| PASS - property
2015-09-05 17:49:37.4141|Info| PASS - propertyOf
2015-09-05 17:49:37.4141|Info| PASS - random
2015-09-05 17:49:37.4141|Info| PASS - now
2015-09-05 17:49:37.4141|Info| PASS - uniqueId
2015-09-05 17:49:37.4141|Info| PASS - times
2015-09-05 17:49:37.4141|Info| PASS - mixin
2015-09-05 17:49:37.4141|Info| PASS - _.escape
2015-09-05 17:49:37.4291|Info| PASS - _.unescape
2015-09-05 17:49:37.4291|Info| PASS - _.escape & unescape
2015-09-05 17:49:37.4291|Info| PASS - template
2015-09-05 17:49:37.4291|Info| PASS - _.template provides the generated function source, when a SyntaxError occurs
2015-09-05 17:49:37.4291|Info| PASS - _.template handles \u2028 & \u2029
2015-09-05 17:49:37.4291|Info| PASS - result calls functions and returns primitives
2015-09-05 17:49:37.4291|Info| PASS - result returns a default value if object is null or undefined
2015-09-05 17:49:37.4291|Info| PASS - result returns a default value if property of object is missing
2015-09-05 17:49:37.4291|Info| PASS - result only returns the default value if the object does not have the property or is undefined
2015-09-05 17:49:37.4291|Info| PASS - result does not return the default if the property of an object is found in the prototype
2015-09-05 17:49:37.4291|Info| PASS - result does use the fallback when the result of invoking the property is undefined
2015-09-05 17:49:37.4291|Info| PASS - result fallback can use a function
2015-09-05 17:49:37.4291|Info| PASS - _.templateSettings.variable
2015-09-05 17:49:37.4291|Info| PASS - #547 - _.templateSettings is unchanged by custom settings.
2015-09-05 17:49:37.4291|Info| PASS - #556 - undefined template variables.
2015-09-05 17:49:37.4291|Info| PASS - interpolate evaluates code only once.
2015-09-05 17:49:37.4441|Info| PASS - #746 - _.template settings are not modified.
2015-09-05 17:49:37.4441|Info| PASS - #779 - delimeters are applied to unescaped text.
2015-09-05 17:49:37.4441|Info|----------------------------------------
2015-09-05 17:49:37.4441|Info|    PASS: 1382  FAIL: 0  TOTAL: 1382
2015-09-05 17:49:37.4441|Info|    Finished in 4414 milliseconds.
2015-09-05 17:49:37.4441|Info|----------------------------------------
2015-09-05 17:49:37.4441|Info|      Encerrado timer: id:84, (17:49:37.4481)
2015-09-05 17:49:37.4441|Info|Encerrando os testes
2015-09-05 17:49:37.4441|Info|Total:1382, Sucesso: 1382, Falha: 0
2015-09-05 17:49:37.4441|Info| 4 segundos para avaliar o individuo underscore.js
2015-09-05 17:49:38.1696|Info|ast gerada com sucesso
2015-09-05 17:49:38.1696|Info| 482,4741 ms
2015-09-05 17:49:38.9582|Info|Codigo gerado com sucesso
2015-09-05 17:49:38.9582|Info| 605,2643 ms
2015-09-05 17:50:32.2071|Info|ast gerada com sucesso
2015-09-05 17:50:32.2291|Info| 513,2557 ms
2015-09-05 17:51:04.7754|Info|ast gerada com sucesso
2015-09-05 17:51:04.7975|Info| 521,2642 ms
2015-09-05 17:52:10.2254|Info|ast gerada com sucesso
2015-09-05 17:52:10.2464|Info| 508,1235 ms
2015-09-05 17:52:16.8619|Info|ast gerada com sucesso
2015-09-05 17:52:16.8839|Info| 536,1304 ms
2015-09-05 17:53:27.9023|Info|ast gerada com sucesso
2015-09-05 17:53:27.9286|Info| 580,5844 ms
2015-09-05 17:57:02.5273|Info|ast gerada com sucesso
2015-09-05 17:57:02.5493|Info| 554,1984 ms
2015-09-05 17:57:53.4041|Info|ast gerada com sucesso
2015-09-05 17:57:53.4384|Info| 553,6264 ms
2015-09-05 17:58:39.0774|Info|ast gerada com sucesso
2015-09-05 17:58:39.0994|Info| 521,5804 ms
